[
  {
    "objectID": "posts.html",
    "href": "posts.html",
    "title": "My Blog",
    "section": "",
    "text": "A blog post in construction\n\n\nworking on this blog post with carmen\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nPumpkin Market\n\n\n\nMEDS\n\n\nMACHINE LEARNING\n\n\nDEPARTMENT OF AGRICULTURE\n\n\nLINEAR REGRESSION\n\n\nMODEL BUILDING\n\n\n\n\n\n\n\nKate Becker\n\n\nInvalid Date\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nSanta Barbara Thomas Fire Analysis\n\n\n\n\n\n\nKate Becker\n\n\nInvalid Date\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nLandCover\n\n\n\n\n\n\nKate Becker\n\n\nDec 14, 2023\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nBreaking the Code Ceiling\n\n\n\nMEDS\n\n\nETHICS\n\n\nPOLICY\n\n\nDATA ACCESS\n\n\nCASE STUDIES\n\n\n\nA series of global case studies to showcase the problems and solutions interwoven with environmental data transparency\n\n\n\nKate Becker\n\n\nDec 10, 2023\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nSalmon Fisheries in Alaska\n\n\n\nQuarto\n\n\nR\n\n\nMEDS\n\n\nFisheries\n\n\nTime Series\n\n\nSalmon\n\n\nAlaska\n\n\n\nA time series analysis of fisheries in Alaska since 1985\n\n\n\nKate Becker\n\n\nMar 14, 2024\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nBiodiversity in Phoenix, Arizona\n\n\n\n\n\n\nKate Becker\n\n\nInvalid Date\n\n\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "",
    "section": "",
    "text": "Hi, Kate Becker here! I’ve created this page to share my love for environmental science and management specifically within the marine science and fisheries management field. I’ve spent my last few years obtaining a Bachelor’s of Science in Environmental Studies and a Master’s of Environmental Data Science. My hope is to utilize large and complex data sets in order to analyze and effectively communicate my findings to the public. I also hope to make research plans, use electronic system cameras and gear sensors, perform data collection in the field, andertake fish stock assessments, and conduct ecological risk assessments. Outside of my education and employment interests, I enjoy snowboarding, backpacking, and just about anything to do with the ocean. Feel free to take a look at my work and learn more about me!"
  },
  {
    "objectID": "resources2.html",
    "href": "resources2.html",
    "title": "My favorite resources",
    "section": "",
    "text": "My favorite resources"
  },
  {
    "objectID": "posts/SalmonFisheries/salmon-fisheries-2.html",
    "href": "posts/SalmonFisheries/salmon-fisheries-2.html",
    "title": "Salmon Fisheries in Alaska",
    "section": "",
    "text": "The overarching question of this analysis is “How have salmon fisheries in Alaska changed since 1985?”. In order to tackle this broad question, on a more finite scale, I asked: 1. What is the distribution of yearly fish yields for all five species of salmonoid? 2. How have nine of the most commercially important fisheries changed in terms of yearly catch? 3. Can we see clear trends in the time series data that can be accounted for by changes in Alaskan fisheries management?\nThe data used in this analysis was a publicly available data set provided by the Alaska Department of Fish and Game. The data set is composed of 9 variables: year, area, species name, number of fish(estimated), landed weight(lbs.), whole weight (lbs.), permit count, processor count, and vessel count. Although all variables are equally important, I modified my data set to only include year, species name, number of fish (estimated), and area in order to make R more computationally efficient. The data set is a .csv and was available through a report including harvest attributed to state managed fisheries, test fisheries, commercial sale o derby fish, and Annette Island fisheries. A better outline of the variables used in this analysis are listed below.\n\nYear: the year the landings occurred as recorded on ADF&G fish tickets\nArea: Areas define by groupings of statistical areas as recorded on ADF&G\nSpecies name: The species as recorded on ADF&G fish tickets\nNumber of fish (estimated): Number of animals is a count of each species in the catch or harvest.\n\nAnother data set was used in order to spatially map nine commercially important fisheries on top of a pre-existing Alaska shapefile. The shapefile was publicly available and provided by iGismap, an online data platform that provides GIS maps.\nDesign elements\nThis analysis required an exact approach and design\n\nGraphic form The graphic forms I used were a radar plot, a line chart, and a geo-spatial map. I wanted to explore more complex styles in this analysis, and I felt that the radar plot provided an aesthetically pleasing chart, one that resembled a sonar on a boat, for visualization of salmon catch by region in 1985 and 2023 to show change overtime. For the line graph I wanted to clearly show the distribution in salmon catch by year by species to create a visualization that included all components of my data set. I used this graph as my primary plot because I felt that any viewer of this info graphic would be able to gather the main takeaways of the analysis from a quick glance. Finally, I created a map to add a geographic context to show fisheries proximity to one another and locations in Alaska as well as provide the viewer with a non-complex visualization.\nText For most of my visuals I changed the aesthetics of the labels as well as the titles. I used limited text in most of my plots, except the line chart because I felt that the radar plot spoke for itself and would be crowded with excess information. A lot of information can be gathered from a radar plot with simply a categorical and numeric. For the map, I removed latitude and longitude values to make it look cleaner but included labels to clearly display the fisheries locations. Finally, the line chart included all text components except grid lines because I felt a viewer can still see clear patterns in the data set without minor and major lines. I also included all years on the x- axis for it to be an effective time series visualization.\nThemes I altered the theme elements pretty drastically in all three of my plots. This was necessary to have the text aesthetics, outlined above, that I wanted. Most theme elements included changes in legends, color bars, ticks, titles, the panel, and major and minor grid line.\nColors I used salmon themed color palettes found online and a light blue background to resemble water.\nTypography I used the same font for each visualization so that it would be cohesive in the infographic.\nGeneral design In my infographic, I let the visualizations speak for themselves by only including brief comments in order to tie the visualizations together with more background information. As stated above, I also centered and increased the size of my question and the line chart so that the viewer focuses their attention on the most important aspects and the main takeaways from this info graphic. I also used the same color scheme (salmon color hex codes) for the text and the visualizations\nContextualizing the data I was able to conceptualize the data by using the same time scale throughout all visualizations. I also stayed consistent with using number of fish (estimated) as the primary metric for fishery success.\nCentering your primary message I used my line graph as the center of my infographic and printed my primary question above it in order to highlight the main takeaway before a viewer dives deeper into the more complex visualizations.\nConsidering accessibility (e.g. colorblind-friendly palettes / contrast, alt text) I highlighted specific words in my infographic so that viewers can gather the main message by skimming the page rather than having to read through all of the text.\nApplying a DEI lens to your design Salmon fisheries are a major part of Alaska’s economy and have provided native tribes with food for the last century. Unfortunately, over fishing of Alaska salmon and other native fish, by international fishing companies, have diminished food resources as well as impacted historic cultural significance. Although this analysis was able to provide insight into the change in fisheries overtime, it doesn’t dissect the sustainability of these fisheries, who profits the most, who receives the majority of the catch, or how indigenous populations are affected. This is a primary analysis and can be greatly improved in terms of a DEI lens."
  },
  {
    "objectID": "posts/SalmonFisheries/salmon-fisheries-2.html#fishery-yields",
    "href": "posts/SalmonFisheries/salmon-fisheries-2.html#fishery-yields",
    "title": "Salmon Fisheries in Alaska",
    "section": "2023 Fishery Yields",
    "text": "2023 Fishery Yields\n\n# create radar plot with summary_all dataframe ----\n\n# encode area vector as a factor and sort area levels \nsummary_all$area &lt;- factor(summary_all$area, levels = sort(unique(summary_all$area)))\n\n# make a ggplot\nggplot(summary_all) +\n  \n  # use geom_col with area on x axis and total fish sums on y\n  geom_col(aes(\n    x = area,\n    y = sum_fish,#is numeric\n    fill = sum_fish),\n    show.legend = TRUE,\n    ) +\n  # apply color scale to values and create a scale  \n  scale_fill_gradient(low = \"#FFA07A\", high = \"#C66264\", name = \"Yearly Catch\", labels = comma, breaks = c(0, 10000000, 20000000, 30000000, 40000000, 50000000, 60000000)) +                              #))\n\n  # convert sum_fish values from exponential to whole numebrs separatedby commas\n  scale_y_continuous(labels = scales::comma) +\n  \n  # add y label\n  labs(y = \"Estimated Catch\") +\n  \n  # change colourbar aesthetics\n  guides (fill = guide_colourbar(direction = \"vertical\", barheight = 16)) +\n  \n  # using theme() function change aesthetics to plot and panel  \n  theme(axis.title.x=element_blank(),\n        axis.ticks.x=element_blank(),\n        axis.text.x = element_text(size=5, color = \"black\", face = \"bold\"), \n        axis.text.y=element_blank(),\n        axis.title.y=element_blank(),\n        axis.ticks.y = element_blank(),\n        plot.background = element_rect(fill = \"lightblue\"),\n        panel.background = element_rect(fill = \"lightblue\"),\n        panel.grid = element_line(color = \"white\"),\n        legend.position = \"right\",\n        legend.title = element_text(colour=\"black\", size=8, \n                                      face=\"bold\"),\n        legend.text = element_text(angle = 45, hjust = 1, color = \"black\"),\n        legend.background = element_rect(fill = \"lightblue\"),\n        plot.margin = unit(c(0.01, 0.01, 0.01, 0.01), \"lines\"),\n        plot.title = element_text(size = 18, hjust=1.3, vjust = -3.0, color = \"black\"),\n        panel.spacing = unit(4, \"lines\")) +\n\n  # add title\n  ggtitle(\"2023\") +\n  \n  # converts chart to have polar units\n  coord_polar()\n\n\n\n\n\nInitial wrangling of primary dataframe for 1985 plot\n\n# 1985 wrangling ----\n\n# convert area variable to a factor \nalaska$area &lt;- as.factor(alaska$area)\n\n# create summary stats variable by filtering for 1985 year, group by area, create new columns for mean and summary values for number_of_fish_estimated values \nsummary_stats_85 &lt;- alaska %&gt;%\n  filter(year == \"1985\") %&gt;%\n  group_by(area) %&gt;%\n  summarise(mean_fish_85 = mean(number_of_fish_estimated),\n            sum_fish_85 = sum(number_of_fish_estimated)) %&gt;%\n  mutate(mean_fish_85= round(mean_fish_85, digits = 0))\n\n# new dataframe grouped by area with number of counts\nNrs_85 &lt;- alaska %&gt;%\n  group_by(area) %&gt;%\n  count()\n\n# left join dataframes by the area variable \nsummary_all_85 &lt;- left_join(summary_stats_85, Nrs_85, by = \"area\")\n\n# remove fisheries with NA, not comparable year to year  \nsummary_all_85 &lt;- summary_all_85 %&gt;%\n  filter(!row_number() %in% c(7,11))\n  \n# encode area vector as a factor and sort area levels \nsummary_all_85$area &lt;- factor(summary_all_85$area, levels = sort(unique(summary_all_85$area)))"
  },
  {
    "objectID": "posts/SalmonFisheries/salmon-fisheries-2.html#fishery-yields-1",
    "href": "posts/SalmonFisheries/salmon-fisheries-2.html#fishery-yields-1",
    "title": "Salmon Fisheries in Alaska",
    "section": "1985 Fishery Yields",
    "text": "1985 Fishery Yields\n\n# create radar plot with summary_all dataframe ----\n\n# ggplot2 of summary_all_85 data\nggplot(summary_all_85) +\n\n  # use geom_col with area on x axis and total fish sums on y axis\n  geom_col(aes(\n    x = area,\n    y = sum_fish_85,#is numeric\n    fill = sum_fish_85),\n    show.legend = TRUE,\n    stat = \"identity\"\n    ) +\n  \n  # add color scale for number_of_fish_estimated values \n  scale_fill_gradient(low = \"#FFA07A\", high = \"#C66264\", name = \"Yearly Catch\", labels = comma, breaks = c(0, 10000000, 20000000, 30000000, 40000000, 50000000, 60000000)) + \n      \n  # add y label\n  labs(y = \"Estimated Catch\") +\n  \n  # change colour bar aesthetics\n  guides (fill = guide_colourbar(direction = \"vertical\", barheight = 16)) +\n  \n  # using theme() to change plot and panel aesthetics\n  theme(axis.title.x=element_blank(),\n        axis.ticks.x=element_blank(),\n        axis.text.x = element_text(size=5, color = \"black\", face = \"bold\"), \n        axis.text.y=element_blank(),\n        axis.title.y=element_blank(),\n        axis.ticks.y = element_blank(),\n        plot.background = element_rect(fill = \"lightblue\"),\n        panel.background = element_rect(fill = \"lightblue\"),\n        panel.grid = element_line(color = \"white\"),\n        legend.position = \"right\",\n        legend.title = element_text(colour=\"black\", size=8, \n                                      face=\"bold\"),\n        legend.text = element_text(angle = 45, hjust = 1, color = \"black\"),\n        legend.background = element_rect(fill = \"lightblue\"),\n        plot.margin = unit(c(0.01, 0.01, 0.01, 0.01), \"lines\"),\n        plot.title = element_text(size = 18, hjust=1.3, vjust = -3.0, color = \"black\"),\n        panel.spacing = unit(4, \"lines\")) +\n          \n  # add title\n  ggtitle(\"1985\") +\n  \n  # converts chart to have polar units \n  coord_polar()\n\n\n\n\n\nFisheries data wrangling\n\n# data wrangling for fisheries locations ----\n# create a new data frame with latitude and longitude values of the fisheries used in this analysis \nregions &lt;- data.frame(\n      lon = c(-173.5, -160.6391, -158.4045, -152.644, -152.407, -147.0971, -139.73),\n      lat = c(52.09, 57.99, 56.295, 59.37, 57.79, 60.6905, 59.547),\n      area = c(\"Alaska Peninsula/Aleutian Islands\", \"Bristol Bay\", \"Chignik\", \"Cook Inlet\", \"Kodiak\", \"Prince William Sound\", \"Southeast/Yakutat\")\n)\n\n# merge summary statistics and lat and long values for independent fisheries in one data frame\ngeo &lt;- merge(summary_all, regions)\n\n# make geo dataframe an sf object and set coordinate reference system \ngeo &lt;- geo |&gt; \n  st_as_sf(coords = c(\"lon\", \"lat\"), crs = \"EPSG:4269\")\n\n\n\nInitial read in and wrangling of Alaska shapefile\n\n# read in alaska shapefile ----\nak_regions &lt;- st_read(\"/Users/katebecker/Documents/Bren/Winter/240/final/Becker-eds240-HW4/data/shapefile_demo_data/ak_regions_simp.shp\")\n\nReading layer `ak_regions_simp' from data source \n  `/Users/katebecker/Documents/Bren/Winter/240/final/Becker-eds240-HW4/data/shapefile_demo_data/ak_regions_simp.shp' \n  using driver `ESRI Shapefile'\nSimple feature collection with 13 features and 3 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: -179.2296 ymin: 51.15702 xmax: 179.8567 ymax: 71.43957\nGeodetic CRS:  WGS 84"
  },
  {
    "objectID": "posts/SalmonFisheries/salmon-fisheries-2.html#map-of-alaskas-most-commerically-important-salmon-fisheries",
    "href": "posts/SalmonFisheries/salmon-fisheries-2.html#map-of-alaskas-most-commerically-important-salmon-fisheries",
    "title": "Salmon Fisheries in Alaska",
    "section": "Map of Alaskas Most Commerically Important Salmon Fisheries",
    "text": "Map of Alaskas Most Commerically Important Salmon Fisheries\n\n# coordinate reference system ----\n# transform alaska shapefile to crs of 3338\nak_regions_3338 &lt;- ak_regions %&gt;%\n  st_transform(crs = 3338)\n\n# transfrom geo spatial object to crs of 3338\ngeo_3338 &lt;- geo %&gt;%\n  st_transform(crs = 3338)\n\n# assign a color for each region in alaska by hex code\nmy_colors &lt;- c(\"Aleutian Islands\" = \"#bf0452\",\n               \"Chignik\" = \"#e8a9ca\",\n               \"Bristol Bay\" = \"#FF7F50\",\n               \"Kodiak\" = \"#FF7799\",\n               \"Cook Inlet\" = \"#ef586d\",\n               \"Prince William Sound\" = \"#f5237b\",\n               \"Southeast\" = \"#FF91A4\",\n               \"Norton Sound\" = \"#b7138c\",\n               \"Arctic\" = \"#ee6088\",\n               \"Bristol Bay\" = \"#FD7C6E\",\n               \"Copper River\" = \"#d35b8d\",\n               \"Yukon\" = \"#f697dd\"\n               # Add more regions and corresponding colors as needed\n               )\n\n# create map of alaska and fisheries ----\n# initial ggplot using geom_sf for alaska shapefile and fill by region \nalaska_regions &lt;- ggplot() +\n  geom_sf(data = ak_regions_3338, aes(fill = region, alpha = 0.4))+\n  scale_fill_manual(values = my_colors) + # apply colors specified above toe ach region\n  theme(axis.title.x=element_blank(), # use theme argument to chane panel and plot aesthetics\n        axis.ticks.x=element_blank(),\n        axis.text.x = element_text(), \n        axis.text.y=element_blank(),\n        axis.title.y=element_blank(),\n        axis.ticks.y = element_blank(),\n        panel.background = element_rect(fill = \"lightblue\"),\n        panel.grid.major = element_blank(),\n        legend.position = \"bottom\",\n        legend.title = element_text(colour=\"black\", size=12),\n        legend.text = element_text(family = \"josefin\",\n                               size = 8)) +\n  # change aesthetics of legend\n  guides(fill = guide_legend(override.aes = list(alpha = 0)))  \n  \n# add fisheries spatial object to alaska regions plot \nfinal_alaska &lt;- alaska_regions +\n  geom_sf(data = geo_3338, color = \"yellow\", shape = 8, size = 2) + # set points to yellow starts\n    geom_sf_text( # add labels to map specifying the fishery name\n    data = geo,\n    aes(label = area, hjust = -0.08, vjust = 1.5),\n    check_overlap = TRUE,\n    size = 3,\n    color = \"black\",\n    fontface = \"bold\") +\n  geom_label_repel() + # repel labels so no overlap\n  theme(legend.position = \"none\") \n\n# visualize map \nfinal_alaska"
  },
  {
    "objectID": "posts/SalmonFisheries/salmon-fisheries-2.html#time-series-of-average-salmonoid-catch-each-year-since-1985",
    "href": "posts/SalmonFisheries/salmon-fisheries-2.html#time-series-of-average-salmonoid-catch-each-year-since-1985",
    "title": "Salmon Fisheries in Alaska",
    "section": "Time Series of Average Salmonoid Catch Each Year Since 1985",
    "text": "Time Series of Average Salmonoid Catch Each Year Since 1985\n\n# create time series plot ----\n# get rid of na values in alaska data frame \ncleaned_alaska &lt;- na.omit(alaska)\n\n# Calculate averages of number_of_fish_estimated grouped by year and species_name\naveraged_alaska &lt;- cleaned_alaska %&gt;%\n  group_by(year, species_name) %&gt;%\n  summarize(avg_number_of_fish = mean(number_of_fish_estimated))\n\n# create ggplot \naveraged_alaska %&gt;%\n  ggplot( aes(x=year, y= avg_number_of_fish, group=species_name, color=species_name)) + # set x axis to year from 1985 to 2023 with number of fish estimates per year by species\n    geom_line(linewidth = 2, alpha = 0.8) + # add lines\n  scale_y_continuous(labels = scales::comma, limits = c(0,30000000), breaks = seq(0, 30000000, by = 5000000), expand =c(0,0)) + # change y axis aesthetic to change exponential values to whole values separated by commas \n  scale_x_continuous(breaks = unique(averaged_alaska$year), expand = c(0,0)) + # x axis includes all values of year variable \n  ggtitle(\"Salmonoid Catch Distribution Over the Years\") + # add title\n  theme(axis.title.x = element_blank(), # change theme of plot and panel using theme()\n        axis.text.x = element_text(angle = 45, hjust = 1, size = 6),\n        panel.grid.major = element_blank(),\n        panel.grid.minor = element_blank(),\n        panel.background = element_rect(fill = \"lightblue\"),\n        plot.background = element_rect(fill = \"lightblue\"),\n        legend.background = element_rect(fill = \"lightblue\"),\n        plot.title = element_text(hjust = 0.5)\n        ) +\n  # change aesthetics of legend\n  guides(color = guide_legend(title = \"Species\", override.aes = list(size = 4))) +\n  labs(y = \"Average Catch Per Year\") + # add y label\n  # apply colors to each species \n  scale_color_manual(values = c(\"#f67825\", \"#b85265\",\"#a51d0e\", \"#f9295f\",\"#FD7C6E\"))"
  },
  {
    "objectID": "posts/LandCover/LandCover_copy.html",
    "href": "posts/LandCover/LandCover_copy.html",
    "title": "LandCover",
    "section": "",
    "text": "With the increased use and advancements of Satellite Imagery and algorithms, researchers and citizen scientists can now monitor the impacts of human activities on our natural landscapes. Impacts include deforestation, urban expansion, overpopulation, pollution, extraction, and burning fossil fuels. Through the application of remote sensing techniques, spectral indices combined with specific spectral bands highlight various land cover characteristics, such as vegetation health, water content, and soil properties. In order to investigate land cover, this project will classify remotely sensed imagery into land cover classes through supervised and unsupervised approaches. Supervised approaches use training data labeled by the user, whereas unsupervised approaches use algorithms to create groups which are identified by the user afterward.\nFor further data, workflow, and project information refer to this GitHub link: https://github.com/kateebeckerr/RemoteSensing_Landcover\nCredit: this lab is based on a materials developed by Chris Kibler\n\n\n\nLandsat 5 Thematic Mapper: Landsat 5, developed by NASA, carries a multi-spectral scanner and thematic mapper while transmitting over 2.5 million images of land surface conditions around the world. The data use includes: - 1 scene from September 25, 2007 - bands: 1, 2, 3, 4, 5, 7 - Collection 2 surface reflectence product\nStudy area : Southern Santa Barbara county polygons\nTraining data : Training site polygon (character string with land cover type)\n\n\n\nRelevant Libraries and Set Working Directory\n\nlibrary(sf)\n\nLinking to GEOS 3.11.0, GDAL 3.5.3, PROJ 9.1.0; sf_use_s2() is TRUE\n\nlibrary(terra)\n\nterra 1.7.71\n\nlibrary(here)\n\nhere() starts at /Users/katebecker/Documents/Bren/kateebeckerr.github.io\n\nlibrary(dplyr)\n\n\nAttaching package: 'dplyr'\n\n\nThe following objects are masked from 'package:terra':\n\n    intersect, union\n\n\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n\n\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n\nlibrary(rpart)\nlibrary(rpart.plot)\nlibrary(tmap)\n\nBreaking News: tmap 3.x is retiring. Please test v4, e.g. with\nremotes::install_github('r-tmap/tmap')\n\n#rm(list = ls())\n\n#Sets working directory using here package\n#here::i_am(\"Land_Analysis.Rmd\")\n#setwd(here())\n\n\n\n\nLandsat Imagery\n*Each file name ends with the band number\n*We will not be using band 6 since it corresponds to thermal data\n\n# list files for each band, including the full file path\nfiles &lt;- list.files(\"/Users/katebecker/Documents/Bren/Fall_Q/EDS_223/final/Landcover/RemoteSensing_Landcover/data/landsat-data\", full.names = TRUE)\n\n# read in landsat data and stored as a raster stack acquired on September 25, 2007\nland_20070925 &lt;- rast(files)\n\n# add layer names to match the band\n# Near infrared, short wave infrared 1, and short wave infrared 2 will be employed\nnames(land_20070925) &lt;- c(\"blue\", \"green\", \"red\", \"NIR\", \"SWIR1\", \"SWIR2\")\n\n# plot true color image\n# Band 3 is used for red, band 2 for green, and band 1 for blue \n# stretch = \"lin\" stands for linear stretching, a common technique to enhance image contrast\nplotRGB(land_20070925, r = 3, g = 2, b = 1, stretch = \"lin\")\n\n\n\n\n\nclass(land_20070925)\n\n[1] \"SpatRaster\"\nattr(,\"package\")\n[1] \"terra\"\n\n\n\n\n\n\nSB &lt;- st_read(\"/Users/katebecker/Documents/Bren/Fall_Q/EDS_223/final/Landcover/RemoteSensing_Landcover/data/SB_county_south.shp\")\n\nReading layer `SB_county_south' from data source \n  `/Users/katebecker/Documents/Bren/Fall_Q/EDS_223/final/Landcover/RemoteSensing_Landcover/data/SB_county_south.shp' \n  using driver `ESRI Shapefile'\nSimple feature collection with 1 feature and 18 fields\nGeometry type: POLYGON\nDimension:     XY\nBounding box:  xmin: -120.2327 ymin: 34.33603 xmax: -119.5757 ymax: 34.53716\nGeodetic CRS:  NAD83\n\nSB &lt;- st_transform(SB, crs = crs(land_20070925)) #transform Santa Barbara County shapefile crs into Landsat CRS  \n\n\n\n\n\ntraining &lt;- st_read(\"/Users/katebecker/Documents/Bren/Fall_Q/EDS_223/final/Landcover/RemoteSensing_Landcover/data/trainingdata.shp\")\n\nReading layer `trainingdata' from data source \n  `/Users/katebecker/Documents/Bren/Fall_Q/EDS_223/final/Landcover/RemoteSensing_Landcover/data/trainingdata.shp' \n  using driver `ESRI Shapefile'\nSimple feature collection with 40 features and 2 fields\nGeometry type: POLYGON\nDimension:     XY\nBounding box:  xmin: 215539.2 ymin: 3808948 xmax: 259927.3 ymax: 3823134\nProjected CRS: WGS 84 / UTM zone 11N\n\n\n\n\n\n\n\nIn order to use the raster in conjunction with the shapefile, each file must have the same spatial extent, therefore we will use crop and mask functions from the Terra package.\n\n# crop Landsat raster to the extent of the SB county shapefile\nlandsat_crop &lt;- crop(land_20070925, SB)\n\n# mask the raster to southern portion of SB county\n#Only the part of the raster that falls within the boundaries of sb county shapefile will be retained and the rest will recieve NA\nlandsat_mask &lt;- mask(landsat_crop, SB)\n\n\n\n\nIn order to visualize Landsat values, reflectance can be employed. Reflectance is a measure of how much light is reflected by a surface at different wavelengths and in remote sensing, satellites capture the reflected light in various spectral bands. Landsat satellites typically capture data in the visible, near-infrared, and short-wave infrared bands and can provide insights into land cover, vegetation health, and other environmental characteristics. It’s also common for remote sensing data to have to convert from digital numbers to physical units to scale data for better visualization and analysis.\n\n#reclassify erroneous values as NA based on the specified matrix\n#The matrix below sets any value outside the range (7273 to 43636) to NA\nrcl &lt;- matrix(c(-Inf, 7273, NA,\n                 43636, Inf, NA), ncol = 3, byrow = TRUE)\n\nlandsat &lt;- classify(landsat_mask, rcl = rcl)\n\n# adjust values based on scaling factor to convert digital numbers to physical units \nlandsat &lt;- (landsat * 0.0000275 - 0.2) * 100\n\n\n\n\nIn order to perform this analysis, all data must have the same CRS\n\ntraining &lt;- training %&gt;%\n  st_transform(., crs = crs(landsat))\n\n\n\n\n\n\n\n\n# plot true color image to check results by specifying which bands are used as the green, red, and blue channels\n# linear stretching is also employed for better visualziation \nplotRGB(landsat, r = 3, g = 2, b = 1, stretch = \"lin\")\n\n\n\n\n\n\n\nNext we will employ the training data to identify different locations within our area of interest containing one of the 4 land cover types. The reflectance values we found before(from landsat raster) are extracted at each site (specified by the training data spatial points) and compiled into a new dataframe relating land cover type to their spectral reflectance.\n\n# extract reflectance values at training sites\ntraining_values &lt;- extract(landsat, training, df = TRUE)\n\n# convert training data to data frame by dropping geometries \ntraining_attributes &lt;- training %&gt;%\n  st_drop_geometry()\n\n# join training data attributes and extracted reflectance values into one dataframe by the ID\nSB_training &lt;- left_join(training_values, training_attributes,\n                              by = c(\"ID\" = \"id\")) %&gt;%\n  mutate(type = as.factor(type)) # convert landcover type to factor\n\n\n\n\nA decision tree classifier is a machine learning algorithm used for both regression and, more importantly in this case, classification. The structure of this tree is a hierarchy of binary decisions, where each node represents a decision based on the value of a particular feature, each branch represents an outcome of that decision, and each leaf node represents the final decision or the class label. Each dwecision rule has two outcomes based on a conditiona statement pertaining to vlaues in each spectral band. Training the decision tree works to create branches that separate the data into subsets that are homogeneous as possible with regard to the target variable (class label). Unfortunately, these should be used with cautious for small changes in the data can lead to different tree structures making them less suitable. The rpart() function needs to know the model formula and training data you would like to use.\n\n#Using rpart() function\n# establish model formula\nSB_formula &lt;- type ~ red + green + blue + NIR + SWIR1 + SWIR2\n\n# train decision tree, formula specifies the relationship between the variables, method = class because we're performing a classification, and the missing values are omitted from the data\nSB_decisiontree &lt;- rpart(formula = SB_formula,\n                          data = SB_training,\n                          method = \"class\",\n                          na.action = na.omit)\n\n# visual representation of the decision tree\nprp(SB_decisiontree)\n\n\n\n\n\n\n\nThe entire image can now be applied to the decision tree and therefore apply a model to the data. The terra package includes a predict() function that allows a model to be applied to the data but the names of the layers need to match the column names of the predictors used to train the tree. As a result, the function will return a raster layer with integer values. The output here will correspond to the factors levels in the training data. This step can also help you understand the classes your decision tree model was trained on and subsequently used for classifying the pixels in the Landsat image.\n\n# classify image based on decision tree\nSB_classify &lt;- predict(landsat, SB_decisiontree, type = \"class\", na.rm = TRUE)\n\n# inspect level to understand the order of classes in prediction\nlevels(SB_training$type)\n\n[1] \"green_vegetation\" \"soil_dead_grass\"  \"urban\"            \"water\"           \n\n# This produces green_vegetation, soil_dead_grass, urban, and water levels \n\n\n\n\n\n\ntm_shape(SB_classify) +\n  tm_raster(title = \"Landcover Type\") +\n   tm_layout(legend.position = c(\"left\", \"bottom\"), title = \"Land Cover Map\")\n\nstars object downsampled to 1611 by 620 cells. See tm_shape manual (argument raster.downsample)"
  },
  {
    "objectID": "posts/LandCover/LandCover_copy.html#about",
    "href": "posts/LandCover/LandCover_copy.html#about",
    "title": "LandCover",
    "section": "",
    "text": "With the increased use and advancements of Satellite Imagery and algorithms, researchers and citizen scientists can now monitor the impacts of human activities on our natural landscapes. Impacts include deforestation, urban expansion, overpopulation, pollution, extraction, and burning fossil fuels. Through the application of remote sensing techniques, spectral indices combined with specific spectral bands highlight various land cover characteristics, such as vegetation health, water content, and soil properties. In order to investigate land cover, this project will classify remotely sensed imagery into land cover classes through supervised and unsupervised approaches. Supervised approaches use training data labeled by the user, whereas unsupervised approaches use algorithms to create groups which are identified by the user afterward.\nFor further data, workflow, and project information refer to this GitHub link: https://github.com/kateebeckerr/RemoteSensing_Landcover\nCredit: this lab is based on a materials developed by Chris Kibler"
  },
  {
    "objectID": "posts/LandCover/LandCover_copy.html#data-descriptors",
    "href": "posts/LandCover/LandCover_copy.html#data-descriptors",
    "title": "LandCover",
    "section": "",
    "text": "Landsat 5 Thematic Mapper: Landsat 5, developed by NASA, carries a multi-spectral scanner and thematic mapper while transmitting over 2.5 million images of land surface conditions around the world. The data use includes: - 1 scene from September 25, 2007 - bands: 1, 2, 3, 4, 5, 7 - Collection 2 surface reflectence product\nStudy area : Southern Santa Barbara county polygons\nTraining data : Training site polygon (character string with land cover type)"
  },
  {
    "objectID": "posts/LandCover/LandCover_copy.html#relevant-libraries-and-set-working-directory",
    "href": "posts/LandCover/LandCover_copy.html#relevant-libraries-and-set-working-directory",
    "title": "LandCover",
    "section": "",
    "text": "Relevant Libraries and Set Working Directory\n\nlibrary(sf)\n\nLinking to GEOS 3.11.0, GDAL 3.5.3, PROJ 9.1.0; sf_use_s2() is TRUE\n\nlibrary(terra)\n\nterra 1.7.71\n\nlibrary(here)\n\nhere() starts at /Users/katebecker/Documents/Bren/kateebeckerr.github.io\n\nlibrary(dplyr)\n\n\nAttaching package: 'dplyr'\n\n\nThe following objects are masked from 'package:terra':\n\n    intersect, union\n\n\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n\n\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n\nlibrary(rpart)\nlibrary(rpart.plot)\nlibrary(tmap)\n\nBreaking News: tmap 3.x is retiring. Please test v4, e.g. with\nremotes::install_github('r-tmap/tmap')\n\n#rm(list = ls())\n\n#Sets working directory using here package\n#here::i_am(\"Land_Analysis.Rmd\")\n#setwd(here())"
  },
  {
    "objectID": "posts/LandCover/LandCover_copy.html#data-import",
    "href": "posts/LandCover/LandCover_copy.html#data-import",
    "title": "LandCover",
    "section": "",
    "text": "Landsat Imagery\n*Each file name ends with the band number\n*We will not be using band 6 since it corresponds to thermal data\n\n# list files for each band, including the full file path\nfiles &lt;- list.files(\"/Users/katebecker/Documents/Bren/Fall_Q/EDS_223/final/Landcover/RemoteSensing_Landcover/data/landsat-data\", full.names = TRUE)\n\n# read in landsat data and stored as a raster stack acquired on September 25, 2007\nland_20070925 &lt;- rast(files)\n\n# add layer names to match the band\n# Near infrared, short wave infrared 1, and short wave infrared 2 will be employed\nnames(land_20070925) &lt;- c(\"blue\", \"green\", \"red\", \"NIR\", \"SWIR1\", \"SWIR2\")\n\n# plot true color image\n# Band 3 is used for red, band 2 for green, and band 1 for blue \n# stretch = \"lin\" stands for linear stretching, a common technique to enhance image contrast\nplotRGB(land_20070925, r = 3, g = 2, b = 1, stretch = \"lin\")\n\n\n\n\n\nclass(land_20070925)\n\n[1] \"SpatRaster\"\nattr(,\"package\")\n[1] \"terra\""
  },
  {
    "objectID": "posts/LandCover/LandCover_copy.html#santa-barbara-county-shapefile",
    "href": "posts/LandCover/LandCover_copy.html#santa-barbara-county-shapefile",
    "title": "LandCover",
    "section": "",
    "text": "SB &lt;- st_read(\"/Users/katebecker/Documents/Bren/Fall_Q/EDS_223/final/Landcover/RemoteSensing_Landcover/data/SB_county_south.shp\")\n\nReading layer `SB_county_south' from data source \n  `/Users/katebecker/Documents/Bren/Fall_Q/EDS_223/final/Landcover/RemoteSensing_Landcover/data/SB_county_south.shp' \n  using driver `ESRI Shapefile'\nSimple feature collection with 1 feature and 18 fields\nGeometry type: POLYGON\nDimension:     XY\nBounding box:  xmin: -120.2327 ymin: 34.33603 xmax: -119.5757 ymax: 34.53716\nGeodetic CRS:  NAD83\n\nSB &lt;- st_transform(SB, crs = crs(land_20070925)) #transform Santa Barbara County shapefile crs into Landsat CRS"
  },
  {
    "objectID": "posts/LandCover/LandCover_copy.html#training-data-shapefile",
    "href": "posts/LandCover/LandCover_copy.html#training-data-shapefile",
    "title": "LandCover",
    "section": "",
    "text": "training &lt;- st_read(\"/Users/katebecker/Documents/Bren/Fall_Q/EDS_223/final/Landcover/RemoteSensing_Landcover/data/trainingdata.shp\")\n\nReading layer `trainingdata' from data source \n  `/Users/katebecker/Documents/Bren/Fall_Q/EDS_223/final/Landcover/RemoteSensing_Landcover/data/trainingdata.shp' \n  using driver `ESRI Shapefile'\nSimple feature collection with 40 features and 2 fields\nGeometry type: POLYGON\nDimension:     XY\nBounding box:  xmin: 215539.2 ymin: 3808948 xmax: 259927.3 ymax: 3823134\nProjected CRS: WGS 84 / UTM zone 11N"
  },
  {
    "objectID": "posts/LandCover/LandCover_copy.html#data-wrangling",
    "href": "posts/LandCover/LandCover_copy.html#data-wrangling",
    "title": "LandCover",
    "section": "",
    "text": "In order to use the raster in conjunction with the shapefile, each file must have the same spatial extent, therefore we will use crop and mask functions from the Terra package.\n\n# crop Landsat raster to the extent of the SB county shapefile\nlandsat_crop &lt;- crop(land_20070925, SB)\n\n# mask the raster to southern portion of SB county\n#Only the part of the raster that falls within the boundaries of sb county shapefile will be retained and the rest will recieve NA\nlandsat_mask &lt;- mask(landsat_crop, SB)\n\n\n\n\nIn order to visualize Landsat values, reflectance can be employed. Reflectance is a measure of how much light is reflected by a surface at different wavelengths and in remote sensing, satellites capture the reflected light in various spectral bands. Landsat satellites typically capture data in the visible, near-infrared, and short-wave infrared bands and can provide insights into land cover, vegetation health, and other environmental characteristics. It’s also common for remote sensing data to have to convert from digital numbers to physical units to scale data for better visualization and analysis.\n\n#reclassify erroneous values as NA based on the specified matrix\n#The matrix below sets any value outside the range (7273 to 43636) to NA\nrcl &lt;- matrix(c(-Inf, 7273, NA,\n                 43636, Inf, NA), ncol = 3, byrow = TRUE)\n\nlandsat &lt;- classify(landsat_mask, rcl = rcl)\n\n# adjust values based on scaling factor to convert digital numbers to physical units \nlandsat &lt;- (landsat * 0.0000275 - 0.2) * 100\n\n\n\n\nIn order to perform this analysis, all data must have the same CRS\n\ntraining &lt;- training %&gt;%\n  st_transform(., crs = crs(landsat))"
  },
  {
    "objectID": "posts/LandCover/LandCover_copy.html#analysis",
    "href": "posts/LandCover/LandCover_copy.html#analysis",
    "title": "LandCover",
    "section": "",
    "text": "# plot true color image to check results by specifying which bands are used as the green, red, and blue channels\n# linear stretching is also employed for better visualziation \nplotRGB(landsat, r = 3, g = 2, b = 1, stretch = \"lin\")\n\n\n\n\n\n\n\nNext we will employ the training data to identify different locations within our area of interest containing one of the 4 land cover types. The reflectance values we found before(from landsat raster) are extracted at each site (specified by the training data spatial points) and compiled into a new dataframe relating land cover type to their spectral reflectance.\n\n# extract reflectance values at training sites\ntraining_values &lt;- extract(landsat, training, df = TRUE)\n\n# convert training data to data frame by dropping geometries \ntraining_attributes &lt;- training %&gt;%\n  st_drop_geometry()\n\n# join training data attributes and extracted reflectance values into one dataframe by the ID\nSB_training &lt;- left_join(training_values, training_attributes,\n                              by = c(\"ID\" = \"id\")) %&gt;%\n  mutate(type = as.factor(type)) # convert landcover type to factor\n\n\n\n\nA decision tree classifier is a machine learning algorithm used for both regression and, more importantly in this case, classification. The structure of this tree is a hierarchy of binary decisions, where each node represents a decision based on the value of a particular feature, each branch represents an outcome of that decision, and each leaf node represents the final decision or the class label. Each dwecision rule has two outcomes based on a conditiona statement pertaining to vlaues in each spectral band. Training the decision tree works to create branches that separate the data into subsets that are homogeneous as possible with regard to the target variable (class label). Unfortunately, these should be used with cautious for small changes in the data can lead to different tree structures making them less suitable. The rpart() function needs to know the model formula and training data you would like to use.\n\n#Using rpart() function\n# establish model formula\nSB_formula &lt;- type ~ red + green + blue + NIR + SWIR1 + SWIR2\n\n# train decision tree, formula specifies the relationship between the variables, method = class because we're performing a classification, and the missing values are omitted from the data\nSB_decisiontree &lt;- rpart(formula = SB_formula,\n                          data = SB_training,\n                          method = \"class\",\n                          na.action = na.omit)\n\n# visual representation of the decision tree\nprp(SB_decisiontree)\n\n\n\n\n\n\n\nThe entire image can now be applied to the decision tree and therefore apply a model to the data. The terra package includes a predict() function that allows a model to be applied to the data but the names of the layers need to match the column names of the predictors used to train the tree. As a result, the function will return a raster layer with integer values. The output here will correspond to the factors levels in the training data. This step can also help you understand the classes your decision tree model was trained on and subsequently used for classifying the pixels in the Landsat image.\n\n# classify image based on decision tree\nSB_classify &lt;- predict(landsat, SB_decisiontree, type = \"class\", na.rm = TRUE)\n\n# inspect level to understand the order of classes in prediction\nlevels(SB_training$type)\n\n[1] \"green_vegetation\" \"soil_dead_grass\"  \"urban\"            \"water\"           \n\n# This produces green_vegetation, soil_dead_grass, urban, and water levels"
  },
  {
    "objectID": "posts/LandCover/LandCover_copy.html#land-cover-visualization",
    "href": "posts/LandCover/LandCover_copy.html#land-cover-visualization",
    "title": "LandCover",
    "section": "",
    "text": "tm_shape(SB_classify) +\n  tm_raster(title = \"Landcover Type\") +\n   tm_layout(legend.position = c(\"left\", \"bottom\"), title = \"Land Cover Map\")\n\nstars object downsampled to 1611 by 620 cells. See tm_shape manual (argument raster.downsample)"
  },
  {
    "objectID": "posts/2023-10-23-first-post/index.html",
    "href": "posts/2023-10-23-first-post/index.html",
    "title": "My first blog post!",
    "section": "",
    "text": "CitationBibTeX citation:@online{becker2023,\n  author = {Becker, Kate},\n  title = {My First Blog Post!},\n  date = {2023-10-23},\n  url = {https://samanthacski.github.io/blog/2023-11-06-my-first-blog},\n  langid = {en}\n}\nFor attribution, please cite this work as:\nBecker, Kate. 2023. “My First Blog Post!” October 23, 2023.\nhttps://samanthacski.github.io/blog/2023-11-06-my-first-blog."
  },
  {
    "objectID": "posts/demo/contexily-and-paraquet copy.html",
    "href": "posts/demo/contexily-and-paraquet copy.html",
    "title": "A blog post in construction",
    "section": "",
    "text": "Apache Parquet or just Parquetis an open-souurce, column oriented file format that makes it faster to retrieve data and use sless memory space for tabuular data, than CSV.\nIt is very popular for big data repositories.\nThe geospatial version of parquet for storing vector data is the geoparquet\nThis format comes from the necessity to have an efficient and standardized format to store big geospatial data efficiently.\nIntroduced in decemeber 2022."
  },
  {
    "objectID": "posts/demo/contexily-and-paraquet copy.html#catalog-search",
    "href": "posts/demo/contexily-and-paraquet copy.html#catalog-search",
    "title": "A blog post in construction",
    "section": "Catalog search",
    "text": "Catalog search\nimport all necessary libraries\n\nimport geopandas as gpd\nimport matplotlib.pyplot as plt\n\nimport pystac_client \nimport planetary_computer\n\nimport contextily as ctx\n\nWe use the 2020 US census collection id us_censur to look for the data in the MPC catalog\nThis collection has each tabular file as an item:\n\n\n# open MPC catalog \ncatalog = pystac_client.Client.open(\n    \"https://planetarycomputer.microsoft.com/api/stac/v1\",\n    modifier=planetary_computer.sign_inplace,\n)\n\n\n#open MPC catalog\nsearch = catalog.search(collections = ['us-census'])\n\n#create dictionary with id and item\n\n\nitems = {item.id : item for item in search.items()}\n#with brackets creting a dicitonary askign for each item in search items want key of dictionary to be item id and value of dicitonary to be item itself \n\n\nitem = items['2020-cb_2020_us_county_500k']\nitem\n#assets where item has data, has .parquet format\n\n\n\n\n\n\n    \n        \n            \n                \n                    \n        \n            type\n            \"Feature\"\n        \n    \n                \n            \n                \n                    \n        \n            stac_version\n            \"1.0.0\"\n        \n    \n                \n            \n                \n                    \n        \n            id\n            \"2020-cb_2020_us_county_500k\"\n        \n    \n                \n            \n                \n                    \n        \n            properties\n            \n        \n            \n                \n        \n            datetime\n            \"2021-08-01T00:00:00Z\"\n        \n    \n            \n        \n            \n                \n        \n            proj:epsg\n            4269\n        \n    \n            \n        \n            \n                \n        \n            table:columns\n            [] 13 items\n        \n        \n            \n        \n            \n                \n        \n            0\n            \n        \n            \n                \n        \n            name\n            \"STATEFP\"\n        \n    \n            \n        \n            \n                \n        \n            type\n            \"byte_array\"\n        \n    \n            \n        \n            \n                \n        \n            description\n            \"State FIPS Code\"\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            1\n            \n        \n            \n                \n        \n            name\n            \"COUNTYFP\"\n        \n    \n            \n        \n            \n                \n        \n            type\n            \"byte_array\"\n        \n    \n            \n        \n            \n                \n        \n            description\n            \"County FIPS code\"\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            2\n            \n        \n            \n                \n        \n            name\n            \"COUNTYNS\"\n        \n    \n            \n        \n            \n                \n        \n            type\n            \"byte_array\"\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            3\n            \n        \n            \n                \n        \n            name\n            \"AFFGEOID\"\n        \n    \n            \n        \n            \n                \n        \n            type\n            \"byte_array\"\n        \n    \n            \n        \n            \n                \n        \n            description\n            \"American FactFinder summary level code + geovariant code + \"00US\" + GEOID\"\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            4\n            \n        \n            \n                \n        \n            name\n            \"GEOID\"\n        \n    \n            \n        \n            \n                \n        \n            type\n            \"byte_array\"\n        \n    \n            \n        \n            \n                \n        \n            description\n            \"Concatenation of State FIPS and county FIPS code\"\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            5\n            \n        \n            \n                \n        \n            name\n            \"NAME\"\n        \n    \n            \n        \n            \n                \n        \n            type\n            \"byte_array\"\n        \n    \n            \n        \n            \n                \n        \n            description\n            \"County name\"\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            6\n            \n        \n            \n                \n        \n            name\n            \"NAMELSAD\"\n        \n    \n            \n        \n            \n                \n        \n            type\n            \"byte_array\"\n        \n    \n            \n        \n            \n                \n        \n            description\n            \"Name and Legal/statistical description\"\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            7\n            \n        \n            \n                \n        \n            name\n            \"STUSPS\"\n        \n    \n            \n        \n            \n                \n        \n            type\n            \"byte_array\"\n        \n    \n            \n        \n            \n                \n        \n            description\n            \"FIPS State Postal Code\"\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            8\n            \n        \n            \n                \n        \n            name\n            \"STATE_NAME\"\n        \n    \n            \n        \n            \n                \n        \n            type\n            \"byte_array\"\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            9\n            \n        \n            \n                \n        \n            name\n            \"LSAD\"\n        \n    \n            \n        \n            \n                \n        \n            type\n            \"byte_array\"\n        \n    \n            \n        \n            \n                \n        \n            description\n            \"Legal/statistical classification\"\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            10\n            \n        \n            \n                \n        \n            name\n            \"ALAND\"\n        \n    \n            \n        \n            \n                \n        \n            type\n            \"int64\"\n        \n    \n            \n        \n            \n                \n        \n            description\n            \"Current land area\"\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            11\n            \n        \n            \n                \n        \n            name\n            \"AWATER\"\n        \n    \n            \n        \n            \n                \n        \n            type\n            \"int64\"\n        \n    \n            \n        \n            \n                \n        \n            description\n            \"Current water area\"\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            12\n            \n        \n            \n                \n        \n            name\n            \"geometry\"\n        \n    \n            \n        \n            \n                \n        \n            type\n            \"byte_array\"\n        \n    \n            \n        \n            \n                \n        \n            description\n            \"coordinates for County polygons\"\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n    \n            \n        \n            \n                \n        \n            table:row_count\n            3234\n        \n    \n            \n        \n    \n        \n    \n                \n            \n                \n                    \n        \n            geometry\n            \n        \n            \n                \n        \n            type\n            \"Polygon\"\n        \n    \n            \n        \n            \n                \n        \n            coordinates\n            [] 1 items\n        \n        \n            \n        \n            \n                \n        \n            0\n            [] 5 items\n        \n        \n            \n        \n            \n                \n        \n            0\n            [] 2 items\n        \n        \n            \n        \n            \n                \n        \n            0\n            179.77847\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            1\n            -14.548699\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            1\n            [] 2 items\n        \n        \n            \n        \n            \n                \n        \n            0\n            179.77847\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            1\n            71.365162\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            2\n            [] 2 items\n        \n        \n            \n        \n            \n                \n        \n            0\n            -179.148909\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            1\n            71.365162\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            3\n            [] 2 items\n        \n        \n            \n        \n            \n                \n        \n            0\n            -179.148909\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            1\n            -14.548699\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            4\n            [] 2 items\n        \n        \n            \n        \n            \n                \n        \n            0\n            179.77847\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            1\n            -14.548699\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n    \n                \n            \n                \n                    \n        \n            links\n            [] 4 items\n        \n        \n            \n        \n            \n                \n        \n            0\n            \n        \n            \n                \n        \n            rel\n            \"collection\"\n        \n    \n            \n        \n            \n                \n        \n            href\n            \"https://planetarycomputer.microsoft.com/api/stac/v1/collections/us-census\"\n        \n    \n            \n        \n            \n                \n        \n            type\n            \"application/json\"\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            1\n            \n        \n            \n                \n        \n            rel\n            \"parent\"\n        \n    \n            \n        \n            \n                \n        \n            href\n            \"https://planetarycomputer.microsoft.com/api/stac/v1/collections/us-census\"\n        \n    \n            \n        \n            \n                \n        \n            type\n            \"application/json\"\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            2\n            \n        \n            \n                \n        \n            rel\n            \"root\"\n        \n    \n            \n        \n            \n                \n        \n            href\n            \"https://planetarycomputer.microsoft.com/api/stac/v1\"\n        \n    \n            \n        \n            \n                \n        \n            type\n            \"application/json\"\n        \n    \n            \n        \n            \n                \n        \n            title\n            \"Microsoft Planetary Computer STAC API\"\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            3\n            \n        \n            \n                \n        \n            rel\n            \"self\"\n        \n    \n            \n        \n            \n                \n        \n            href\n            \"https://planetarycomputer.microsoft.com/api/stac/v1/collections/us-census/items/2020-cb_2020_us_county_500k\"\n        \n    \n            \n        \n            \n                \n        \n            type\n            \"application/geo+json\"\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n    \n                \n            \n                \n                    \n        \n            assets\n            \n        \n            \n                \n        \n            data\n            \n        \n            \n                \n        \n            href\n            \"abfs://us-census/2020/cb_2020_us_county_500k.parquet\"\n        \n    \n            \n        \n            \n                \n        \n            type\n            \"application/x-parquet\"\n        \n    \n            \n        \n            \n                \n        \n            title\n            \"Dataset root\"\n        \n    \n            \n        \n            \n                \n        \n            table:storage_options\n            \n        \n            \n                \n        \n            account_name\n            \"ai4edataeuwest\"\n        \n    \n            \n        \n            \n                \n        \n            credential\n            \"st=2023-12-07T23%3A26%3A40Z&se=2023-12-09T00%3A11%3A40Z&sp=rl&sv=2021-06-08&sr=c&skoid=c85c15d6-d1ae-42d4-af60-e2ca0f81359b&sktid=72f988bf-86f1-41af-91ab-2d7cd011db47&skt=2023-12-08T19%3A43%3A19Z&ske=2023-12-15T19%3A43%3A19Z&sks=b&skv=2021-06-08&sig=JD84zHrkqNXX1CE3PHe9JJwf0QypzKmbSurW4W8rST0%3D\"\n        \n    \n            \n        \n    \n        \n    \n            \n        \n            \n                \n        \n            roles\n            [] 1 items\n        \n        \n            \n        \n            \n                \n        \n            0\n            \"data\"\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n    \n                \n            \n                \n                    \n        \n            bbox\n            [] 4 items\n        \n        \n            \n        \n            \n                \n        \n            0\n            -179.148909\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            1\n            -14.548699\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            2\n            179.77847\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            3\n            71.365162\n        \n    \n            \n        \n    \n        \n    \n                \n            \n                \n                    \n        \n            stac_extensions\n            [] 2 items\n        \n        \n            \n        \n            \n                \n        \n            0\n            \"https://stac-extensions.github.io/table/v1.2.0/schema.json\"\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            1\n            \"https://stac-extensions.github.io/projection/v1.0.0/schema.json\"\n        \n    \n            \n        \n    \n        \n    \n                \n            \n                \n                    \n        \n            collection\n            \"us-census\"\n        \n    \n                \n            \n        \n    \n\n\n\nNotice each item has a signel asset ‘data’ this contains the URL to the geoparquet file holding the information. Lets access the items asset:\n\nasset = item.assets['data']\n\n\nasset\n\n\n\n\n\n\n    \n        \n            \n                \n                    \n        \n            href\n            \"abfs://us-census/2020/cb_2020_us_county_500k.parquet\"\n        \n    \n                \n            \n                \n                    \n        \n            type\n            \"application/x-parquet\"\n        \n    \n                \n            \n                \n                    \n        \n            title\n            \"Dataset root\"\n        \n    \n                \n            \n                \n                    \n        \n            table:storage_options\n            \n        \n            \n                \n        \n            account_name\n            \"ai4edataeuwest\"\n        \n    \n            \n        \n            \n                \n        \n            credential\n            \"st=2023-12-07T23%3A26%3A40Z&se=2023-12-09T00%3A11%3A40Z&sp=rl&sv=2021-06-08&sr=c&skoid=c85c15d6-d1ae-42d4-af60-e2ca0f81359b&sktid=72f988bf-86f1-41af-91ab-2d7cd011db47&skt=2023-12-08T19%3A43%3A19Z&ske=2023-12-15T19%3A43%3A19Z&sks=b&skv=2021-06-08&sig=JD84zHrkqNXX1CE3PHe9JJwf0QypzKmbSurW4W8rST0%3D\"\n        \n    \n            \n        \n    \n        \n    \n                \n            \n                \n                    \n        \n            roles\n            [] 1 items\n        \n        \n            \n        \n            \n                \n        \n            0\n            \"data\"\n        \n    \n            \n        \n    \n        \n    \n                \n            \n        \n    \n\n\n\n#3 Open (geo) parquet\nTo topen the parquet file we use the gpd.read_parquet() function using the assets URL pointing to the data:\n\ncounties = gpd.read_parquet(asset.href, storage_options = asset.extra_fields['table:storage_options'])\n\n\ncounties\n\n\n\n\n\n\n\n\nSTATEFP\nCOUNTYFP\nCOUNTYNS\nAFFGEOID\nGEOID\nNAME\nNAMELSAD\nSTUSPS\nSTATE_NAME\nLSAD\nALAND\nAWATER\ngeometry\n\n\n\n\n0\n21\n141\n00516917\n0500000US21141\n21141\nLogan\nLogan County\nKY\nKentucky\n06\n1430224002\n12479211\nPOLYGON ((-87.06037 36.68085, -87.06002 36.708...\n\n\n1\n36\n081\n00974139\n0500000US36081\n36081\nQueens\nQueens County\nNY\nNew York\n06\n281594050\n188444349\nPOLYGON ((-73.96262 40.73903, -73.96243 40.739...\n\n\n2\n34\n017\n00882278\n0500000US34017\n34017\nHudson\nHudson County\nNJ\nNew Jersey\n06\n119640822\n41836491\nMULTIPOLYGON (((-74.04220 40.69997, -74.03900 ...\n\n\n3\n34\n019\n00882228\n0500000US34019\n34019\nHunterdon\nHunterdon County\nNJ\nNew Jersey\n06\n1108086284\n24761598\nPOLYGON ((-75.19511 40.57969, -75.19466 40.581...\n\n\n4\n21\n147\n00516926\n0500000US21147\n21147\nMcCreary\nMcCreary County\nKY\nKentucky\n06\n1105416696\n10730402\nPOLYGON ((-84.77845 36.60329, -84.73068 36.665...\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n\n\n3229\n08\n014\n01945881\n0500000US08014\n08014\nBroomfield\nBroomfield County\nCO\nColorado\n06\n85386686\n1502572\nMULTIPOLYGON (((-105.10667 39.95783, -105.1073...\n\n\n3230\n08\n121\n00198176\n0500000US08121\n08121\nWashington\nWashington County\nCO\nColorado\n06\n6521806795\n15207397\nPOLYGON ((-103.70655 39.73989, -103.70655 39.7...\n\n\n3231\n27\n037\n00659464\n0500000US27037\n27037\nDakota\nDakota County\nMN\nMinnesota\n06\n1456967786\n62978183\nPOLYGON ((-93.32967 44.77948, -93.32962 44.791...\n\n\n3232\n31\n161\n00835902\n0500000US31161\n31161\nSheridan\nSheridan County\nNE\nNebraska\n06\n6321862270\n74723228\nPOLYGON ((-102.79287 42.82249, -102.79211 42.9...\n\n\n3233\n35\n037\n00929110\n0500000US35037\n35037\nQuay\nQuay County\nNM\nNew Mexico\n06\n7443508559\n18554572\nPOLYGON ((-104.12936 34.92420, -104.12902 34.9...\n\n\n\n\n3234 rows × 13 columns\n\n\n\n\ntype(counties)\n\ngeopandas.geodataframe.GeoDataFrame"
  },
  {
    "objectID": "posts/demo/contexily-and-paraquet copy.html#contextiley",
    "href": "posts/demo/contexily-and-paraquet copy.html#contextiley",
    "title": "A blog post in construction",
    "section": "Contextiley",
    "text": "Contextiley\nThis is a python library to add basemaps. Retries tile maps from the internet and makes it possible to plot the, alongside our vector data.\nexample\nWe want to plot the santa barbara county polygon together with a basemap\n\nsb = counties[counties.NAME == \"Santa Barbara\"]\nsb.plot()\n\n&lt;Axes: &gt;\n\n\n\n\n\nContexily tiles can be reprojected to amtch the CRS of our vector data, but… it can be easier to reproejct your vector data to EPSG 3857 instead.\nThe crs epsg 3857 is a proejct CRS used for rendering maps online. For exmaple in google maps or openstreet maps.\n\nfig, ax = plt.subplots()\n\n(sb.to_crs(epsg = 3857)\n .plot(ax=ax, figsize=(5,5), alpha = 0.5, edgecolor = 'k')\n )\n\n# add basemap \nctx.add_basemap(ax)\n\nax.set_title('Santa Barbara County', fontdict = {'fontsize':'20'})\n\nText(0.5, 1.0, 'Santa Barbara County')"
  },
  {
    "objectID": "posts/thomasfire/ThomasFire.html",
    "href": "posts/thomasfire/ThomasFire.html",
    "title": "Santa Barbara Thomas Fire Analysis",
    "section": "",
    "text": "This analysis was conducted using data from the Environmental Protection Agency (EPA) as well as Landsat 8 satellite data to analyze trends and display the effects of the Thomas Fire that occurred on December 4th in 2017. The year of 2017 was comprised of multi-year droughts, high winds, and triple digit temperatures. Similarly, the prior winter, rain left a thick landscape of grass and brush that then dried over the record hot summer providing acres and acres of fuel. As a result, the Thomas Fire burned a total of 281,893 acres of land and resulted in an increased AQI categorized as unhealthy and hazardous in Santa Barbara and Ventura.\nFor further questions regarding the analysis, dataset, and workflow, the git hub link provided below will grant access to this\nGithub Repositorty: https://github.com/kateebeckerr/ThomasFire_Analysis.git\n\n\n\nDaily air quality index data from 2017 and 2018\n\n(https://www.airnow.gov/aqi/aqi-basics/)\n(https://www.epa.gov)\n(https://www.epa.gov/outdoor-air-quality-data)\n\nA simplified collection of bands (red, green, blue, near-infrared and shortwave infrared) from the Landsat Collection 2 Level-2 atmosperically corrected surface reflectance data, collected by the Landsat 8 satellite\n\n(https://planetarycomputer.microsoft.com/dataset/landsat-c2-l2)\n\nA shapefile of fire perimeters in California during 2017\n\n(https://gis.data.ca.gov/datasets/CALFIRE-Forestry::california-fire-perimeters-all-1/about)\n\n\n\n\n\nCode\nimport os\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport geopandas as gpd\nimport pandas as pd \nimport rioxarray as rioxr\n\nfrom shapely.geometry import box\nfrom shapely.geometry import Polygon\nfrom shapely.geometry import Point\n\n\n\n\n\n\n\nCode\n#Dataset 1\n#Read air quality data for the year of 2017 from the EPA website\n#The data is in a compressed ZIP file and is read in \naqi_2017 = pd.read_csv('https://aqs.epa.gov/aqsweb/airdata/daily_aqi_by_county_2017.zip')\naqi_2017\n\n#Dataset 2\n#Read air quality data for the year of 2018 from the EPA website\n#The data is in a compressed ZIP file and is read in \naqi_2018 = pd.read_csv('https://aqs.epa.gov/aqsweb/airdata/daily_aqi_by_county_2018.zip')\naqi_2018\n\n#Dataset 3\n#Reads the Landsat 8 satellite data for the data (2018-01-26) from a NetCDF file \n#Constructs a file path and places the .nc data within your current working directory and names landsat8 \nlandsat8 = os.path.join(os.getcwd(),'data/landsat8-2018-01-26-sb-simplified.nc')\nlandsat = rioxr.open_rasterio(landsat8) #Opens the raster data \nlandsat\n\n#Dataset 4\n#Reads the shapefile for California fire perimeters in 2017 from the file path in your working directory \ncalifornia = gpd.read_file('data/California_Fires/California_Fire_Perimeters_2017.shp')\n\n\n\n\n\n\n\n\n\n\nOnly want to include the geometries associated with the Thomas Fire\n\n\nCode\n#filters the rows in the california dataframe where the fire_name column is equal to thomas and creates a new dataframe called thomas_Fire containing only the filtered rows  \nthomas_fire = california[california['FIRE_NAME'] == 'THOMAS']\n\n\n\n\n\nFor further analysis this step is necessary to effectively process raster data. This is done to clean up unnecessary information in the dataset, especially since the analysis is not based on bands. Similarily, it simplifies the structure of the data, especially when working with a single-band raster. This kind of data preprocessing is common in geospatial analysis workflows to ensure data consistency and relevance to the study area.\n\n\nCode\n# removes length 1 dimension (band) and prints\nlandsat = landsat.squeeze()\n\n# remove coordinates associated to band and prints \nlandsat = landsat.drop('band')\n\n\n\n\n\n\n\nCode\naqi = pd.concat([aqi_2017, aqi_2018]) #combining the two dataframes from 2017 and 2018\n#10 columns and 654338 rows, the concat worked \n\n# re-assign column names - .str.lower() makes them lower case for better formatting \naqi.columns = aqi.columns.str.lower()\n\n# re-assign column names again - .str.replace(' ','_') replaces the space for _\naqi.columns = aqi.columns.str.replace(' ','_')\n\naqi_sb = aqi.loc[aqi.county_name == \"Santa Barbara\"] #creates a new dataframe, aqi_sb, with data from county = santa barbara only \naqi_sb = aqi_sb.drop(columns = ['state_name', 'county_name', 'state_code', 'county_code']) #drops these columns from dataframe \n\naqi_sb.date = pd.to_datetime(aqi_sb.date) #converts date column to datetime64 data type \naqi_sb = aqi_sb.set_index('date') #sets the date column as the index of the df for time series analysis \n\n\n\n\n\n\nA moving five-day average employed to create a rolling view of the air quality data.This provides a more stable and representative measure of air quality over short periods. It’s also relevant to capture daily variations in order to analyze the overall trend in air quality levels over our time frame of interest.\n\n\nCode\n#five_day_average = aqi_sb.rolling('5D').mean() #rollign method is used to create a rolling view of the df with a specified window size, here it is a 5 day window (average of values in previous five days for corresponding date)  \naqi_sb['five_day_average'] = aqi_sb['aqi'].rolling('5D').mean() \n\n\n\n\n\nIn order to turn the landsat data into an image specific bands (red, green, blue) are selected from the Landsat dataset, converted into an xarray DataArray, and then visualized using matplotlib. The resulting plot will show a color representation of the Landsat image, where different colors correspond to different reflectance values in the selected bands.\nNote: (robust = TRUE) The (robust = TRUE) is important to include for it essentially trims a certain percentage of the highest and lowest pixel values before determining the color scale range. This trimming is done to exclude extreme values that might disproportionately affect the color scale.\n\n\nCode\n#transforming the geometries in the thomas_fire dataframe to a new crs specified by the landsat data \nthomas_fire = thomas_fire.to_crs(landsat.rio.crs)\n\n#indexing the landsat variable to select the three bands red, green, and blue\n#converts the bands into an xarray data array and displays the true color image \nlandsat[[\"red\", \"green\", \"blue\"]].to_array().plot.imshow(robust = True)\n\n\n&lt;matplotlib.image.AxesImage at 0x1a8860e90&gt;\n\n\n\n\n\n\n\n\nThis image selects the bands (SWIR2, NIR, Red), converting them into an xarray DataArray, and then visualizes the false image using matplotlib with robust scaling applied to enhance the visibility of features in the data. Using bands like Short-Wave Infrared 2 (SWIR2), Near-Infrared (NIR), and Red instead of Red, Green, and Blue (RGB) bands can provide advantages in remote sensing applications. Some common applications for the use of these bands is to dissect vegetation monitoring, water content and quality, mineral identification, urban studies ,and atmospheric penetration.\n\n\nCode\n#selects the three bands from the landsat 8 image which are swir22(short wave infrared), nir08(near-infrared), and red \n#converts the selected bands into an xarray dataarray and displays the false color image \nlandsat[['swir22', 'nir08', 'red']].to_array().plot.imshow(robust = True)\n\n\n&lt;matplotlib.image.AxesImage at 0x1aa9b0bd0&gt;\n\n\n\n\n\n\n\n\n\n\n\n\nCode\naqi_sb = aqi_sb.reset_index() #removes the date from the current index to plot dates on the x axis \n\nfig, ax = plt.subplots()\n\nax1 = aqi_sb.plot(x = 'date', \n        y =['aqi', 'five_day_average'],\n        title = 'Air Quality Index Since 2017 Thomas Fires',\n        xlabel='Date',\n        ylabel='Air Quality Index (AQI)',        \n        color = {'aqi':'#d73110',\n                 'five_day_average': '#56a4e8'\n                 }\n        )\n\nlandsat[['swir22', 'nir08', 'red']].to_array().plot.imshow(ax=ax, robust = True) #plots a false color image using the landsat bands swir22, nir08, and red on the axis ax \nthomas_fire.plot(ax=ax, alpha=0.6, edgecolor = 'red', color = 'none')\n\n\n\n&lt;Axes: title={'center': 'spatial_ref = 0'}, xlabel='x coordinate of projection\\n[metre]', ylabel='y coordinate of projection\\n[metre]'&gt;\n\n\n\n\n\n\n\n\n\n\n\n\nThis analysis was conducted to show the effects of the December 4th, 2017 Thomas Fire on the environmental conditions of Santa Barbara, California. As a result of this fire, a large area of land was scorched and the air quality reached high levels deemed as unhealthy."
  },
  {
    "objectID": "posts/thomasfire/ThomasFire.html#dataset-descriptors",
    "href": "posts/thomasfire/ThomasFire.html#dataset-descriptors",
    "title": "Santa Barbara Thomas Fire Analysis",
    "section": "",
    "text": "Daily air quality index data from 2017 and 2018\n\n(https://www.airnow.gov/aqi/aqi-basics/)\n(https://www.epa.gov)\n(https://www.epa.gov/outdoor-air-quality-data)\n\nA simplified collection of bands (red, green, blue, near-infrared and shortwave infrared) from the Landsat Collection 2 Level-2 atmosperically corrected surface reflectance data, collected by the Landsat 8 satellite\n\n(https://planetarycomputer.microsoft.com/dataset/landsat-c2-l2)\n\nA shapefile of fire perimeters in California during 2017\n\n(https://gis.data.ca.gov/datasets/CALFIRE-Forestry::california-fire-perimeters-all-1/about)"
  },
  {
    "objectID": "posts/thomasfire/ThomasFire.html#import-necessary-libraries-and-functions",
    "href": "posts/thomasfire/ThomasFire.html#import-necessary-libraries-and-functions",
    "title": "Santa Barbara Thomas Fire Analysis",
    "section": "",
    "text": "Code\nimport os\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport geopandas as gpd\nimport pandas as pd \nimport rioxarray as rioxr\n\nfrom shapely.geometry import box\nfrom shapely.geometry import Polygon\nfrom shapely.geometry import Point"
  },
  {
    "objectID": "posts/thomasfire/ThomasFire.html#data-import",
    "href": "posts/thomasfire/ThomasFire.html#data-import",
    "title": "Santa Barbara Thomas Fire Analysis",
    "section": "",
    "text": "Code\n#Dataset 1\n#Read air quality data for the year of 2017 from the EPA website\n#The data is in a compressed ZIP file and is read in \naqi_2017 = pd.read_csv('https://aqs.epa.gov/aqsweb/airdata/daily_aqi_by_county_2017.zip')\naqi_2017\n\n#Dataset 2\n#Read air quality data for the year of 2018 from the EPA website\n#The data is in a compressed ZIP file and is read in \naqi_2018 = pd.read_csv('https://aqs.epa.gov/aqsweb/airdata/daily_aqi_by_county_2018.zip')\naqi_2018\n\n#Dataset 3\n#Reads the Landsat 8 satellite data for the data (2018-01-26) from a NetCDF file \n#Constructs a file path and places the .nc data within your current working directory and names landsat8 \nlandsat8 = os.path.join(os.getcwd(),'data/landsat8-2018-01-26-sb-simplified.nc')\nlandsat = rioxr.open_rasterio(landsat8) #Opens the raster data \nlandsat\n\n#Dataset 4\n#Reads the shapefile for California fire perimeters in 2017 from the file path in your working directory \ncalifornia = gpd.read_file('data/California_Fires/California_Fire_Perimeters_2017.shp')"
  },
  {
    "objectID": "posts/thomasfire/ThomasFire.html#data-wrangling",
    "href": "posts/thomasfire/ThomasFire.html#data-wrangling",
    "title": "Santa Barbara Thomas Fire Analysis",
    "section": "",
    "text": "Only want to include the geometries associated with the Thomas Fire\n\n\nCode\n#filters the rows in the california dataframe where the fire_name column is equal to thomas and creates a new dataframe called thomas_Fire containing only the filtered rows  \nthomas_fire = california[california['FIRE_NAME'] == 'THOMAS']\n\n\n\n\n\nFor further analysis this step is necessary to effectively process raster data. This is done to clean up unnecessary information in the dataset, especially since the analysis is not based on bands. Similarily, it simplifies the structure of the data, especially when working with a single-band raster. This kind of data preprocessing is common in geospatial analysis workflows to ensure data consistency and relevance to the study area.\n\n\nCode\n# removes length 1 dimension (band) and prints\nlandsat = landsat.squeeze()\n\n# remove coordinates associated to band and prints \nlandsat = landsat.drop('band')\n\n\n\n\n\n\n\nCode\naqi = pd.concat([aqi_2017, aqi_2018]) #combining the two dataframes from 2017 and 2018\n#10 columns and 654338 rows, the concat worked \n\n# re-assign column names - .str.lower() makes them lower case for better formatting \naqi.columns = aqi.columns.str.lower()\n\n# re-assign column names again - .str.replace(' ','_') replaces the space for _\naqi.columns = aqi.columns.str.replace(' ','_')\n\naqi_sb = aqi.loc[aqi.county_name == \"Santa Barbara\"] #creates a new dataframe, aqi_sb, with data from county = santa barbara only \naqi_sb = aqi_sb.drop(columns = ['state_name', 'county_name', 'state_code', 'county_code']) #drops these columns from dataframe \n\naqi_sb.date = pd.to_datetime(aqi_sb.date) #converts date column to datetime64 data type \naqi_sb = aqi_sb.set_index('date') #sets the date column as the index of the df for time series analysis"
  },
  {
    "objectID": "posts/thomasfire/ThomasFire.html#analyzing-time-series-data",
    "href": "posts/thomasfire/ThomasFire.html#analyzing-time-series-data",
    "title": "Santa Barbara Thomas Fire Analysis",
    "section": "",
    "text": "A moving five-day average employed to create a rolling view of the air quality data.This provides a more stable and representative measure of air quality over short periods. It’s also relevant to capture daily variations in order to analyze the overall trend in air quality levels over our time frame of interest.\n\n\nCode\n#five_day_average = aqi_sb.rolling('5D').mean() #rollign method is used to create a rolling view of the df with a specified window size, here it is a 5 day window (average of values in previous five days for corresponding date)  \naqi_sb['five_day_average'] = aqi_sb['aqi'].rolling('5D').mean()"
  },
  {
    "objectID": "posts/thomasfire/ThomasFire.html#constructing-a-true-color-image",
    "href": "posts/thomasfire/ThomasFire.html#constructing-a-true-color-image",
    "title": "Santa Barbara Thomas Fire Analysis",
    "section": "",
    "text": "In order to turn the landsat data into an image specific bands (red, green, blue) are selected from the Landsat dataset, converted into an xarray DataArray, and then visualized using matplotlib. The resulting plot will show a color representation of the Landsat image, where different colors correspond to different reflectance values in the selected bands.\nNote: (robust = TRUE) The (robust = TRUE) is important to include for it essentially trims a certain percentage of the highest and lowest pixel values before determining the color scale range. This trimming is done to exclude extreme values that might disproportionately affect the color scale.\n\n\nCode\n#transforming the geometries in the thomas_fire dataframe to a new crs specified by the landsat data \nthomas_fire = thomas_fire.to_crs(landsat.rio.crs)\n\n#indexing the landsat variable to select the three bands red, green, and blue\n#converts the bands into an xarray data array and displays the true color image \nlandsat[[\"red\", \"green\", \"blue\"]].to_array().plot.imshow(robust = True)\n\n\n&lt;matplotlib.image.AxesImage at 0x1a8860e90&gt;"
  },
  {
    "objectID": "posts/thomasfire/ThomasFire.html#constructing-a-false-color-image",
    "href": "posts/thomasfire/ThomasFire.html#constructing-a-false-color-image",
    "title": "Santa Barbara Thomas Fire Analysis",
    "section": "",
    "text": "This image selects the bands (SWIR2, NIR, Red), converting them into an xarray DataArray, and then visualizes the false image using matplotlib with robust scaling applied to enhance the visibility of features in the data. Using bands like Short-Wave Infrared 2 (SWIR2), Near-Infrared (NIR), and Red instead of Red, Green, and Blue (RGB) bands can provide advantages in remote sensing applications. Some common applications for the use of these bands is to dissect vegetation monitoring, water content and quality, mineral identification, urban studies ,and atmospheric penetration.\n\n\nCode\n#selects the three bands from the landsat 8 image which are swir22(short wave infrared), nir08(near-infrared), and red \n#converts the selected bands into an xarray dataarray and displays the false color image \nlandsat[['swir22', 'nir08', 'red']].to_array().plot.imshow(robust = True)\n\n\n&lt;matplotlib.image.AxesImage at 0x1aa9b0bd0&gt;"
  },
  {
    "objectID": "posts/thomasfire/ThomasFire.html#map",
    "href": "posts/thomasfire/ThomasFire.html#map",
    "title": "Santa Barbara Thomas Fire Analysis",
    "section": "",
    "text": "Code\naqi_sb = aqi_sb.reset_index() #removes the date from the current index to plot dates on the x axis \n\nfig, ax = plt.subplots()\n\nax1 = aqi_sb.plot(x = 'date', \n        y =['aqi', 'five_day_average'],\n        title = 'Air Quality Index Since 2017 Thomas Fires',\n        xlabel='Date',\n        ylabel='Air Quality Index (AQI)',        \n        color = {'aqi':'#d73110',\n                 'five_day_average': '#56a4e8'\n                 }\n        )\n\nlandsat[['swir22', 'nir08', 'red']].to_array().plot.imshow(ax=ax, robust = True) #plots a false color image using the landsat bands swir22, nir08, and red on the axis ax \nthomas_fire.plot(ax=ax, alpha=0.6, edgecolor = 'red', color = 'none')\n\n\n\n&lt;Axes: title={'center': 'spatial_ref = 0'}, xlabel='x coordinate of projection\\n[metre]', ylabel='y coordinate of projection\\n[metre]'&gt;"
  },
  {
    "objectID": "posts/thomasfire/ThomasFire.html#findings",
    "href": "posts/thomasfire/ThomasFire.html#findings",
    "title": "Santa Barbara Thomas Fire Analysis",
    "section": "",
    "text": "This analysis was conducted to show the effects of the December 4th, 2017 Thomas Fire on the environmental conditions of Santa Barbara, California. As a result of this fire, a large area of land was scorched and the air quality reached high levels deemed as unhealthy."
  },
  {
    "objectID": "posts/Ethics/Ethics_in_Data.html",
    "href": "posts/Ethics/Ethics_in_Data.html",
    "title": "Breaking the Code Ceiling",
    "section": "",
    "text": "Background\nWith rapid advancements in technology and increased attention to environmental problems, the future is data science. Design and use of environmental data infrastructure including software platforms, sensors, satellite data, mobile phone apps, and digitally generated visual representations is becoming inseparable to environmental solutions. In order to halt the perpetuation of historic marginalization and discrimination, the move towards data-driven approaches, in order to understand environmental processes, must include fair and equal access to data. The goal of this article is not to simply have a conversation regarding the importance of data but to highlight the ways in which countries across the globe have implemented policy, prioritized environmental governance, improved data infrastructure, and increased accountability. Four case studies will be dissected below to instill a sense of optimism in a growing data driven world.\n\n\nChina’s Environmental Disclosure Policy\nThree decades worth of rapid industrialization in China has become interwoven with environmental issues in which concerns have emerged regarding the long-term sustainability, social stability, and transparency deficits surrounding pollution problems. Given China’s decentralized government structure, environmental disclosures tend to be the weakest in the most polluted cities. Challenges surrounding transparency procedures include the prioritization of economic over environmental growth and the dissolving of policy as it moves through state channels . Fortunately, transparency regulations have become an increasingly popular tool globally and in 2008 China established a set of open environmental information measures requiring government agencies to divulge a plethora of environmental information to the public. This information has given birth to measures such as the use of NGO pollution databases by multinational companies, such as Nike and Walmert, to monitor Chinese suppliers exerting pressure to improve environmental practices. This has also taken shape in local governments in which they have positively responded to transparency indexes through open data sources. Accountability has also become a lead driver in change in which state and local governments regulate polluting enterprises by releasing the names of violators and requiring the disclosure of local governments. Through nongovernmental organizations, in the midst of an authoritarian government, China has set a standard for balancing continued economic transformation with better environmental management in order to prevent further pollution.\n\n\nEnvironmental Monitoring in Myanmar\nMyanmar is the host of an abundance of valuable natural resources such as land, teak, jade, rubies, oil, gas, and hydropower. The exploitation of these natural resources, in the midst of a political transition away from military ownership, has brought international attention to protecting Myanmar’s forests for their biodiversity, carbon sequestration, local livelihood and cultural value. The main concern has been the state’s approach to forest governance being dominated by a concern with timber extractions. In order to combat this, investigations have been underway to dissect how environmental monitoring seeks to make digital environmental data open and transparent and how that plays out in the forest sector. For years, satellite and internet based environmental data infrastructures have been used by states and scientists for several decades to survey land use activity, promote economic development, and bolster territorial claims. All of which resemble historic and present day colonialism trends elsewhere in the world. A step forward was in 2015 when the World Bank report argued the role of Open Data in ensuring environmental sustainability through transparent data that can help reduce pollution, conserve national resources, and build resilience to climate change”. The World Bank also pointed to solutions in which they highlighted government accountability, transparency, and citizen participation. As a result, Myanmar was able to construct a digital forest monitoring tool that now has the capacity to be monitored by international NGOs aimed at conservation, traders facilitating sustainable timber, and ethnic minority communities protecting their culture. The question of funding was also answered as international donors came together under programs that seek to foster good governance through data transparency.\n\n\nEuropean ‘No Net Loss’ Biodiversity Policies\nIn the 1970s, a conservation policy principle known as ‘No Net Loss’ (NNL) of biodiversity originated in the US and European environmental legislation. This policy proved to be a milestone in quantification, mitigation, and full compensation for negative biodiversity impacts associated with economic development and land use change. Further, these policies required the assessment of data availability for offset projects implemented under a NNL objective involving clear, up to date, and easily accessible data provided to stakeholders and the general public. As a result, NNL-type policies are now widespread, being applied to projects spread globally and increasingly adopted by the private sector. Like any environmental solution that results in real change, key barriers still exist such as the struggle for real data transparency as a result of perceived lack of necessity, lack of common protocols for collecting the data, and a lack of resources to do so. Unfortunately, when controversy arrived, the lack of readily available data on the implementation of NNL policy prevented any effort to make clear, empirical statements regarding the effectiveness of the policy which has also become a similar trend in environmental solutions. All that being said, with a focus on policy, Europe has become an active region for multinational environmental solutions and a key player in the fight for a nature against business-as-usual platform. Not only did this study unpack a successful strategy for combating the effects of climate change but it emphasized the importance of data transparency and accessibility from collection to analysis.\n\n\nData Transparency and the Mining Industry in Montana\nIn terms of data transparency, as frequently discussed above, this case study highlights one key difficulty in accessing data and that being the overall formatting of data. Once publicly accessible, data is frequently presented to the public as a PDF rather than a dataset and I’ve personally run into this problem before in which it makes analysis extremely difficult for the public to conduct citizen science. Citizen science, being another important component to environmental solutions in a data driven world, has grown substantially as a result of low cost technology and interfaces such as sensors and drones. This leads me to the state of Montana and the Stillwater Mining Company in which they were given access to expand platinum and palladium mining operations. This caused pause to concerned community members and the severe environmental effects that this would have on water quality and fisheries in the surrounding area. This gave birth to a monumental environmental act known as Good Neighbor Agreements. This gives community members a legally binding agreement to a company agreeing to full transparency regarding what is released into the surrounding air and water as a result of their operations. Further, they serve as an effective measure to reduce harmful industry behavior and empower community members to enact change through a better understanding of the contaminants and thresholds known to impact human or ecosystem health. This gave the people of Montana empowerment to sue the Montana Department of Environmental Quality and challenge the permit arguing that the expanded mining project would have severe impacts. As a result, the Stillwater Mining company agreed to maintain a publicly accessible electronic database of all historic data and all monitoring undertaken in compliance with state and federal environmental laws. This equal and fair access to big data enabled community members to practice citizen science and monitor chemical, physical, and biological patterns in their area. This is just one example of many that highlights the importance of public data accessibility and policy implementation.\n\n\nIn Summary\nAs discussed previously in this blog, three key barriers to real environmental change are the nature of policy, accountability, and the fair and equal access to data. The importance of policy can be highlighted when examining the two sides of outside interference. On one side stands politicians such as President Trump who release detrimental proposals such as the one in March of 2017 to cut 31% of the EPAs funding. On the other side, laws are implemented such as the Freedom of Information Act proposed to provide citizens with equal access to government collected pollution databases. These case studies also highlight the continued presence of colonialism in which the domination of military, economic, and political parties hinder the progress of effective innovation and big data initiatives to combat environmental injustices. Overall, as computing demand for Artificial Intelligence and Machine Learning grows, so do inequitable environmental consequences. Historical systemic injustices, the silencing of voices, the unequal balance of power, and the misrepresentation of data can be globally dismantled with the increased implementation of local changes across the globe. The future is data science and we must yield our power to create an ethical, just, and sustainable future.\n\n\nCitations\n\nTandfonline McCoy, J., & Somer, M. (2016). Authoritarianism and Polarization: The Dual Threat to Sustainable Democratic Governance. Journal of Democracy, 27(3), 35-49. https://www.tandfonline.com/doi/full/10.1080/23251042.2016.1220849\nHeinOnline Natural Resources & Environment, 32(2), 33. Citzens Scientists, Data Transparency, and the Mining Industry. https://heinonline.org/HOL/Page?handle=hein.journals/nre32&div=33&g_sent=1&casa_token=&collection=journals\nScienceDirect Aluko, O. A., & Makinde, O. J. (2018). The Impact of Environmental Regulations on the Performance of Firms in the Mining and Quarrying Sector of Nigeria. https://www.sciencedirect.com/science/article/pii/S0006320717312107\nSAGE Journals New data infrastructures for environmental monitoring in Myanmar: Is digital transparency good for governance. Environment and Planning E: Nature and Space, Volume 5 Issue 1. https://journals.sagepub.com/doi/abs/10.1177/2514848620943892\nWiley Online Library Lakhanpal, S., & Jajoria, S. (2012). Environmental Governance in India: An Analysis of Emerging Trends and Issues. Governance, Volume 27 Issue 1. https://onlinelibrary.wiley.com/doi/full/10.1111/gove.12018"
  },
  {
    "objectID": "posts/IO_Maricopa/phoenix_biodiversity.html",
    "href": "posts/IO_Maricopa/phoenix_biodiversity.html",
    "title": "Biodiversity in Phoenix, Arizona",
    "section": "",
    "text": "Using the Microsoft Planetary Computer, 2017 and 2020 rasters of Phoenix subdivision are employed to study biodiversity loss in Maricopa County. In 2021, Maricopa County was the US county that added the most developed land since 2001. Several species of animals have already been greatly impacted, including the Sonoran Pronghorn, Desert Tortoise, Cactus Ferruginous Pygmy-Owl, Sonora Tiger Salamander, and Border Cats such as Ocelots, Cougars, etc.. Along with land development, some other factors contributing to biodiversity loss include mining, population increase, urbanization, recreation, high per capita water consumption, water diversion, and animal agriculture. In order to study the effects of human influence, the biodiversity intactness index (BII) is used to find changes in biodiversity from 2017 to 2020.\nGithub Repository: More information regarding the data, this analysis, and workflow can be found within this github repo. https://github.com/kateebeckerr/biodiversity_index_phoenix.git\n\n\nIn order to perform this analysis, several libraries and functions must be imported to work with geospatial data, particularly for accessing, processing, and visualizing raster and vector data. The Microsoft Planetary Computer must also be imported in order to access the STAC (Spatio Temporal Asset Catalog) and obtain the io-biodiversity collection.\n\n\nCode\nimport numpy as np\nimport geopandas as gpd\nimport rioxarray as rioxr\nimport matplotlib.pyplot as plt\nimport contextily as ctx\nimport rasterio\nfrom rasterio.plot import show as rioshow\nfrom shapely.geometry import box\nimport xarray as xr\nimport matplotlib.patches as patches\n\nfrom shapely.geometry import Polygon\nfrom scipy.ndimage import label\n\n# used to access STAC catalogs\nfrom pystac_client import Client\n# used to sign items from the MPC STAC catalog\nimport planetary_computer\n\n# ----- other libraries for nice ouputs\nfrom IPython.display import Image\n\n\n\n\n\n\nBII data: This dataset is part of the MPC STAC catalog. Within the catalog, access the ‘io-biodiversity’ collection and as well as the 2017 and 2020 rasters covering Phoenix subdivision.\n2017: “https://pcdata01euw.blob.core.windows.net/impact/bii-v1/bii_2017/bii_2017_34.74464974521749_-115.38597824385106_cog.tif?st=2023-12-13T03%3A37%3A21Z&se=2023-12-14T04%3A22%3A21Z&sp=rl&sv=2021-06-08&sr=c&skoid=c85c15d6-d1ae-42d4-af60-e2ca0f81359b&sktid=72f988bf-86f1-41af-91ab-2d7cd011db47&skt=2023-12-13T23%3A15%3A10Z&ske=2023-12-20T23%3A15%3A10Z&sks=b&skv=2021-06-08&sig=jBYY08Q1kepYqT6tC72CUJeW499oAwkeWPh1THibgbM%3D”\n2020: “https://pcdata01euw.blob.core.windows.net/impact/bii-v1/bii_2017/bii_2017_34.74464974521749_-115.38597824385106_cog.tif?st=2023-12-13T02%3A19%3A15Z&se=2023-12-14T03%3A04%3A15Z&sp=rl&sv=2021-06-08&sr=c&skoid=c85c15d6-d1ae-42d4-af60-e2ca0f81359b&sktid=72f988bf-86f1-41af-91ab-2d7cd011db47&skt=2023-12-13T20%3A49%3A24Z&ske=2023-12-20T20%3A49%3A24Z&sks=b&skv=2021-06-08&sig=lT4m5FR92t/VvZDpp2RrpqM1lJxlF1qL%2BUbKZBqWIiw%3D”\nPhoenix subdivision: Within the Census County Subdivision shapefiles access the Phoenix subdivision polygon in the Arizona: https://www.census.gov/cgi-bin/geo/shapefiles/index.php?year=2022&layergroup=County+Subdivisions\n\n\n\n\n\nCode\narizona = gpd.read_file('data/tl_2022_04_cousub/tl_2022_04_cousub.shp') #read in shapefile using geopandas\narizona.head() #look at the head of the dataframe\nphoenix = arizona[arizona['NAME'] == \"Phoenix\"] #select for phoenix county in arizona \n\n# create axis with plot\nax = (phoenix.to_crs(epsg=3857) #transfer crs to 3857\n      .plot(figsize=(7, 7), alpha=0.5, edgecolor=\"k\")\n      )\n\n# add NatGeo basemap from contextily\nctx.add_basemap(ax, source=ctx.providers.Esri.NatGeoWorldMap)\n\n# update axes\nax.set_title(\"Maricopa County, Arizona\", fontdict={\"fontsize\": \"20\"}) #sets a title \nax.set_axis_off() #turns off grid lines \n\n\n\n\n\n\n\n\n\nUsing the Microsoft Planetary Computer, the io-biodiversity collection is accessed along with its metadata and assets in order to perform this analysis. The metadata for a STAC item includes core identifying information (such as id, geometry, bounding box, and date), and additional properties (for example, place of collection). In comparison, assets are links to the actual data of the item (for example, links to the spectral bands of a satellite image.) These identifiers are useful when trying to perform a more detailed catalog search such as using the following coordinates to specify a bounding box and find the relevant raster:\n[-112.826843, 32.974108, -111.184387, 33.863574]\n\n\nCode\n## Catalog search \ncatalog = Client.open(\"https://planetarycomputer.microsoft.com/api/stac/v1\",\n                      modifier = planetary_computer.sign_inplace)\n#temporal range of interest\ntime_range = '2017/2020'\n#Bounding Box Coordinates (as a GeoJSON)\nbbox = [-112.826843, 32.974108, -111.184387, 33.863574]\n#Catalog search\nsearch = catalog.search(\n    collections = ['io-biodiversity'],\n    bbox = bbox,\n    datetime = time_range\n)\nitems = search.item_collection()\nitems\n#Number of items in the search:\nlen(items)\n\nitems #tells us there were two items in the catalog that matched our search\n\n\n\n\n\n\n    \n        \n            \n                \n                    \n        \n            type\n            \"FeatureCollection\"\n        \n    \n                \n            \n                \n                    \n        \n            features\n            [] 4 items\n        \n        \n            \n        \n            \n                \n        \n            0\n            \n        \n            \n                \n        \n            type\n            \"Feature\"\n        \n    \n            \n        \n            \n                \n        \n            stac_version\n            \"1.0.0\"\n        \n    \n            \n        \n            \n                \n        \n            id\n            \"bii_2020_34.74464974521749_-115.38597824385106_cog\"\n        \n    \n            \n        \n            \n                \n        \n            properties\n            \n        \n            \n                \n        \n            datetime\n            None\n        \n    \n            \n        \n            \n                \n        \n            proj:epsg\n            4326\n        \n    \n            \n        \n            \n                \n        \n            proj:shape\n            [] 2 items\n        \n        \n            \n        \n            \n                \n        \n            0\n            7992\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            1\n            7992\n        \n    \n            \n        \n    \n        \n    \n            \n        \n            \n                \n        \n            end_datetime\n            \"2020-12-31T23:59:59Z\"\n        \n    \n            \n        \n            \n                \n        \n            proj:transform\n            [] 9 items\n        \n        \n            \n        \n            \n                \n        \n            0\n            0.0008983152841195215\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            1\n            0.0\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            2\n            -115.38597824385106\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            3\n            0.0\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            4\n            -0.0008983152841195215\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            5\n            34.74464974521749\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            6\n            0.0\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            7\n            0.0\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            8\n            1.0\n        \n    \n            \n        \n    \n        \n    \n            \n        \n            \n                \n        \n            start_datetime\n            \"2020-01-01T00:00:00Z\"\n        \n    \n            \n        \n    \n        \n    \n            \n        \n            \n                \n        \n            geometry\n            \n        \n            \n                \n        \n            type\n            \"Polygon\"\n        \n    \n            \n        \n            \n                \n        \n            coordinates\n            [] 1 items\n        \n        \n            \n        \n            \n                \n        \n            0\n            [] 9 items\n        \n        \n            \n        \n            \n                \n        \n            0\n            [] 2 items\n        \n        \n            \n        \n            \n                \n        \n            0\n            -114.7625474\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            1\n            27.565314\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            1\n            [] 2 items\n        \n        \n            \n        \n            \n                \n        \n            0\n            -108.2066425\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            1\n            27.565314\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            2\n            [] 2 items\n        \n        \n            \n        \n            \n                \n        \n            0\n            -108.2066425\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            1\n            34.7446497\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            3\n            [] 2 items\n        \n        \n            \n        \n            \n                \n        \n            0\n            -115.3859782\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            1\n            34.7446497\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            4\n            [] 2 items\n        \n        \n            \n        \n            \n                \n        \n            0\n            -115.3859782\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            1\n            29.5649638\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            5\n            [] 2 items\n        \n        \n            \n        \n            \n                \n        \n            0\n            -115.3581305\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            1\n            28.0791503\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            6\n            [] 2 items\n        \n        \n            \n        \n            \n                \n        \n            0\n            -115.2036202\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            1\n            27.8662496\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            7\n            [] 2 items\n        \n        \n            \n        \n            \n                \n        \n            0\n            -114.9988044\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            1\n            27.7099428\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            8\n            [] 2 items\n        \n        \n            \n        \n            \n                \n        \n            0\n            -114.7625474\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            1\n            27.565314\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n    \n            \n        \n            \n                \n        \n            links\n            [] 5 items\n        \n        \n            \n        \n            \n                \n        \n            0\n            \n        \n            \n                \n        \n            rel\n            \"collection\"\n        \n    \n            \n        \n            \n                \n        \n            href\n            \"https://planetarycomputer.microsoft.com/api/stac/v1/collections/io-biodiversity\"\n        \n    \n            \n        \n            \n                \n        \n            type\n            \"application/json\"\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            1\n            \n        \n            \n                \n        \n            rel\n            \"parent\"\n        \n    \n            \n        \n            \n                \n        \n            href\n            \"https://planetarycomputer.microsoft.com/api/stac/v1/collections/io-biodiversity\"\n        \n    \n            \n        \n            \n                \n        \n            type\n            \"application/json\"\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            2\n            \n        \n            \n                \n        \n            rel\n            \"root\"\n        \n    \n            \n        \n            \n                \n        \n            href\n            \"https://planetarycomputer.microsoft.com/api/stac/v1\"\n        \n    \n            \n        \n            \n                \n        \n            type\n            \"application/json\"\n        \n    \n            \n        \n            \n                \n        \n            title\n            \"Microsoft Planetary Computer STAC API\"\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            3\n            \n        \n            \n                \n        \n            rel\n            \"self\"\n        \n    \n            \n        \n            \n                \n        \n            href\n            \"https://planetarycomputer.microsoft.com/api/stac/v1/collections/io-biodiversity/items/bii_2020_34.74464974521749_-115.38597824385106_cog\"\n        \n    \n            \n        \n            \n                \n        \n            type\n            \"application/geo+json\"\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            4\n            \n        \n            \n                \n        \n            rel\n            \"preview\"\n        \n    \n            \n        \n            \n                \n        \n            href\n            \"https://planetarycomputer.microsoft.com/api/data/v1/item/map?collection=io-biodiversity&item=bii_2020_34.74464974521749_-115.38597824385106_cog\"\n        \n    \n            \n        \n            \n                \n        \n            type\n            \"text/html\"\n        \n    \n            \n        \n            \n                \n        \n            title\n            \"Map of item\"\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n    \n            \n        \n            \n                \n        \n            assets\n            \n        \n            \n                \n        \n            data\n            \n        \n            \n                \n        \n            href\n            \"https://pcdata01euw.blob.core.windows.net/impact/bii-v1/bii_2020/bii_2020_34.74464974521749_-115.38597824385106_cog.tif?st=2023-12-13T04%3A53%3A48Z&se=2023-12-14T05%3A38%3A48Z&sp=rl&sv=2021-06-08&sr=c&skoid=c85c15d6-d1ae-42d4-af60-e2ca0f81359b&sktid=72f988bf-86f1-41af-91ab-2d7cd011db47&skt=2023-12-14T04%3A37%3A46Z&ske=2023-12-21T04%3A37%3A46Z&sks=b&skv=2021-06-08&sig=mgZGyetANr41Cd1HUUDQwG6w0kJ7qJKcCt32N/zrr1Y%3D\"\n        \n    \n            \n        \n            \n                \n        \n            type\n            \"image/tiff; application=geotiff; profile=cloud-optimized\"\n        \n    \n            \n        \n            \n                \n        \n            title\n            \"Biodiversity Intactness\"\n        \n    \n            \n        \n            \n                \n        \n            description\n            \"Terrestrial biodiversity intactness at 100m resolution\"\n        \n    \n            \n        \n            \n                \n        \n            version\n            \"v1\"\n        \n    \n            \n        \n            \n                \n        \n            raster:bands\n            [] 1 items\n        \n        \n            \n        \n            \n                \n        \n            0\n            \n        \n            \n                \n        \n            sampling\n            \"area\"\n        \n    \n            \n        \n            \n                \n        \n            data_type\n            \"float32\"\n        \n    \n            \n        \n            \n                \n        \n            spatial_resolution\n            100\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n    \n            \n        \n            \n                \n        \n            roles\n            [] 1 items\n        \n        \n            \n        \n            \n                \n        \n            0\n            \"data\"\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n    \n            \n        \n            \n                \n        \n            tilejson\n            \n        \n            \n                \n        \n            href\n            \"https://planetarycomputer.microsoft.com/api/data/v1/item/tilejson.json?collection=io-biodiversity&item=bii_2020_34.74464974521749_-115.38597824385106_cog&assets=data&tile_format=png&colormap_name=io-bii&rescale=0%2C1&expression=0.97%2A%28data_b1%2A%2A3.84%29&format=png\"\n        \n    \n            \n        \n            \n                \n        \n            type\n            \"application/json\"\n        \n    \n            \n        \n            \n                \n        \n            title\n            \"TileJSON with default rendering\"\n        \n    \n            \n        \n            \n                \n        \n            roles\n            [] 1 items\n        \n        \n            \n        \n            \n                \n        \n            0\n            \"tiles\"\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n    \n            \n        \n            \n                \n        \n            rendered_preview\n            \n        \n            \n                \n        \n            href\n            \"https://planetarycomputer.microsoft.com/api/data/v1/item/preview.png?collection=io-biodiversity&item=bii_2020_34.74464974521749_-115.38597824385106_cog&assets=data&tile_format=png&colormap_name=io-bii&rescale=0%2C1&expression=0.97%2A%28data_b1%2A%2A3.84%29&format=png\"\n        \n    \n            \n        \n            \n                \n        \n            type\n            \"image/png\"\n        \n    \n            \n        \n            \n                \n        \n            title\n            \"Rendered preview\"\n        \n    \n            \n        \n            \n                \n        \n            rel\n            \"preview\"\n        \n    \n            \n        \n            \n                \n        \n            roles\n            [] 1 items\n        \n        \n            \n        \n            \n                \n        \n            0\n            \"overview\"\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n    \n            \n        \n            \n                \n        \n            bbox\n            [] 4 items\n        \n        \n            \n        \n            \n                \n        \n            0\n            -115.3859782\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            1\n            27.565314\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            2\n            -108.2066425\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            3\n            34.7446497\n        \n    \n            \n        \n    \n        \n    \n            \n        \n            \n                \n        \n            stac_extensions\n            [] 3 items\n        \n        \n            \n        \n            \n                \n        \n            0\n            \"https://stac-extensions.github.io/projection/v1.0.0/schema.json\"\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            1\n            \"https://stac-extensions.github.io/raster/v1.1.0/schema.json\"\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            2\n            \"https://stac-extensions.github.io/version/v1.1.0/schema.json\"\n        \n    \n            \n        \n    \n        \n    \n            \n        \n            \n                \n        \n            collection\n            \"io-biodiversity\"\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            1\n            \n        \n            \n                \n        \n            type\n            \"Feature\"\n        \n    \n            \n        \n            \n                \n        \n            stac_version\n            \"1.0.0\"\n        \n    \n            \n        \n            \n                \n        \n            id\n            \"bii_2019_34.74464974521749_-115.38597824385106_cog\"\n        \n    \n            \n        \n            \n                \n        \n            properties\n            \n        \n            \n                \n        \n            datetime\n            None\n        \n    \n            \n        \n            \n                \n        \n            proj:epsg\n            4326\n        \n    \n            \n        \n            \n                \n        \n            proj:shape\n            [] 2 items\n        \n        \n            \n        \n            \n                \n        \n            0\n            7992\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            1\n            7992\n        \n    \n            \n        \n    \n        \n    \n            \n        \n            \n                \n        \n            end_datetime\n            \"2019-12-31T23:59:59Z\"\n        \n    \n            \n        \n            \n                \n        \n            proj:transform\n            [] 9 items\n        \n        \n            \n        \n            \n                \n        \n            0\n            0.0008983152841195215\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            1\n            0.0\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            2\n            -115.38597824385106\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            3\n            0.0\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            4\n            -0.0008983152841195215\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            5\n            34.74464974521749\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            6\n            0.0\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            7\n            0.0\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            8\n            1.0\n        \n    \n            \n        \n    \n        \n    \n            \n        \n            \n                \n        \n            start_datetime\n            \"2019-01-01T00:00:00Z\"\n        \n    \n            \n        \n    \n        \n    \n            \n        \n            \n                \n        \n            geometry\n            \n        \n            \n                \n        \n            type\n            \"Polygon\"\n        \n    \n            \n        \n            \n                \n        \n            coordinates\n            [] 1 items\n        \n        \n            \n        \n            \n                \n        \n            0\n            [] 10 items\n        \n        \n            \n        \n            \n                \n        \n            0\n            [] 2 items\n        \n        \n            \n        \n            \n                \n        \n            0\n            -114.7625474\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            1\n            27.565314\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            1\n            [] 2 items\n        \n        \n            \n        \n            \n                \n        \n            0\n            -108.2066425\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            1\n            27.565314\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            2\n            [] 2 items\n        \n        \n            \n        \n            \n                \n        \n            0\n            -108.2066425\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            1\n            34.7446497\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            3\n            [] 2 items\n        \n        \n            \n        \n            \n                \n        \n            0\n            -115.3859782\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            1\n            34.7446497\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            4\n            [] 2 items\n        \n        \n            \n        \n            \n                \n        \n            0\n            -115.3859782\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            1\n            29.5649638\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            5\n            [] 2 items\n        \n        \n            \n        \n            \n                \n        \n            0\n            -115.3581305\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            1\n            28.0791503\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            6\n            [] 2 items\n        \n        \n            \n        \n            \n                \n        \n            0\n            -115.2161967\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            1\n            27.8761311\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            7\n            [] 2 items\n        \n        \n            \n        \n            \n                \n        \n            0\n            -115.0068892\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            1\n            27.7180276\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            8\n            [] 2 items\n        \n        \n            \n        \n            \n                \n        \n            0\n            -114.8469891\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            1\n            27.6174163\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            9\n            [] 2 items\n        \n        \n            \n        \n            \n                \n        \n            0\n            -114.7625474\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            1\n            27.565314\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n    \n            \n        \n            \n                \n        \n            links\n            [] 5 items\n        \n        \n            \n        \n            \n                \n        \n            0\n            \n        \n            \n                \n        \n            rel\n            \"collection\"\n        \n    \n            \n        \n            \n                \n        \n            href\n            \"https://planetarycomputer.microsoft.com/api/stac/v1/collections/io-biodiversity\"\n        \n    \n            \n        \n            \n                \n        \n            type\n            \"application/json\"\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            1\n            \n        \n            \n                \n        \n            rel\n            \"parent\"\n        \n    \n            \n        \n            \n                \n        \n            href\n            \"https://planetarycomputer.microsoft.com/api/stac/v1/collections/io-biodiversity\"\n        \n    \n            \n        \n            \n                \n        \n            type\n            \"application/json\"\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            2\n            \n        \n            \n                \n        \n            rel\n            \"root\"\n        \n    \n            \n        \n            \n                \n        \n            href\n            \"https://planetarycomputer.microsoft.com/api/stac/v1\"\n        \n    \n            \n        \n            \n                \n        \n            type\n            \"application/json\"\n        \n    \n            \n        \n            \n                \n        \n            title\n            \"Microsoft Planetary Computer STAC API\"\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            3\n            \n        \n            \n                \n        \n            rel\n            \"self\"\n        \n    \n            \n        \n            \n                \n        \n            href\n            \"https://planetarycomputer.microsoft.com/api/stac/v1/collections/io-biodiversity/items/bii_2019_34.74464974521749_-115.38597824385106_cog\"\n        \n    \n            \n        \n            \n                \n        \n            type\n            \"application/geo+json\"\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            4\n            \n        \n            \n                \n        \n            rel\n            \"preview\"\n        \n    \n            \n        \n            \n                \n        \n            href\n            \"https://planetarycomputer.microsoft.com/api/data/v1/item/map?collection=io-biodiversity&item=bii_2019_34.74464974521749_-115.38597824385106_cog\"\n        \n    \n            \n        \n            \n                \n        \n            type\n            \"text/html\"\n        \n    \n            \n        \n            \n                \n        \n            title\n            \"Map of item\"\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n    \n            \n        \n            \n                \n        \n            assets\n            \n        \n            \n                \n        \n            data\n            \n        \n            \n                \n        \n            href\n            \"https://pcdata01euw.blob.core.windows.net/impact/bii-v1/bii_2019/bii_2019_34.74464974521749_-115.38597824385106_cog.tif?st=2023-12-13T04%3A53%3A48Z&se=2023-12-14T05%3A38%3A48Z&sp=rl&sv=2021-06-08&sr=c&skoid=c85c15d6-d1ae-42d4-af60-e2ca0f81359b&sktid=72f988bf-86f1-41af-91ab-2d7cd011db47&skt=2023-12-14T04%3A37%3A46Z&ske=2023-12-21T04%3A37%3A46Z&sks=b&skv=2021-06-08&sig=mgZGyetANr41Cd1HUUDQwG6w0kJ7qJKcCt32N/zrr1Y%3D\"\n        \n    \n            \n        \n            \n                \n        \n            type\n            \"image/tiff; application=geotiff; profile=cloud-optimized\"\n        \n    \n            \n        \n            \n                \n        \n            title\n            \"Biodiversity Intactness\"\n        \n    \n            \n        \n            \n                \n        \n            description\n            \"Terrestrial biodiversity intactness at 100m resolution\"\n        \n    \n            \n        \n            \n                \n        \n            version\n            \"v1\"\n        \n    \n            \n        \n            \n                \n        \n            raster:bands\n            [] 1 items\n        \n        \n            \n        \n            \n                \n        \n            0\n            \n        \n            \n                \n        \n            sampling\n            \"area\"\n        \n    \n            \n        \n            \n                \n        \n            data_type\n            \"float32\"\n        \n    \n            \n        \n            \n                \n        \n            spatial_resolution\n            100\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n    \n            \n        \n            \n                \n        \n            roles\n            [] 1 items\n        \n        \n            \n        \n            \n                \n        \n            0\n            \"data\"\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n    \n            \n        \n            \n                \n        \n            tilejson\n            \n        \n            \n                \n        \n            href\n            \"https://planetarycomputer.microsoft.com/api/data/v1/item/tilejson.json?collection=io-biodiversity&item=bii_2019_34.74464974521749_-115.38597824385106_cog&assets=data&tile_format=png&colormap_name=io-bii&rescale=0%2C1&expression=0.97%2A%28data_b1%2A%2A3.84%29&format=png\"\n        \n    \n            \n        \n            \n                \n        \n            type\n            \"application/json\"\n        \n    \n            \n        \n            \n                \n        \n            title\n            \"TileJSON with default rendering\"\n        \n    \n            \n        \n            \n                \n        \n            roles\n            [] 1 items\n        \n        \n            \n        \n            \n                \n        \n            0\n            \"tiles\"\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n    \n            \n        \n            \n                \n        \n            rendered_preview\n            \n        \n            \n                \n        \n            href\n            \"https://planetarycomputer.microsoft.com/api/data/v1/item/preview.png?collection=io-biodiversity&item=bii_2019_34.74464974521749_-115.38597824385106_cog&assets=data&tile_format=png&colormap_name=io-bii&rescale=0%2C1&expression=0.97%2A%28data_b1%2A%2A3.84%29&format=png\"\n        \n    \n            \n        \n            \n                \n        \n            type\n            \"image/png\"\n        \n    \n            \n        \n            \n                \n        \n            title\n            \"Rendered preview\"\n        \n    \n            \n        \n            \n                \n        \n            rel\n            \"preview\"\n        \n    \n            \n        \n            \n                \n        \n            roles\n            [] 1 items\n        \n        \n            \n        \n            \n                \n        \n            0\n            \"overview\"\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n    \n            \n        \n            \n                \n        \n            bbox\n            [] 4 items\n        \n        \n            \n        \n            \n                \n        \n            0\n            -115.3859782\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            1\n            27.565314\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            2\n            -108.2066425\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            3\n            34.7446497\n        \n    \n            \n        \n    \n        \n    \n            \n        \n            \n                \n        \n            stac_extensions\n            [] 3 items\n        \n        \n            \n        \n            \n                \n        \n            0\n            \"https://stac-extensions.github.io/projection/v1.0.0/schema.json\"\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            1\n            \"https://stac-extensions.github.io/raster/v1.1.0/schema.json\"\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            2\n            \"https://stac-extensions.github.io/version/v1.1.0/schema.json\"\n        \n    \n            \n        \n    \n        \n    \n            \n        \n            \n                \n        \n            collection\n            \"io-biodiversity\"\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            2\n            \n        \n            \n                \n        \n            type\n            \"Feature\"\n        \n    \n            \n        \n            \n                \n        \n            stac_version\n            \"1.0.0\"\n        \n    \n            \n        \n            \n                \n        \n            id\n            \"bii_2018_34.74464974521749_-115.38597824385106_cog\"\n        \n    \n            \n        \n            \n                \n        \n            properties\n            \n        \n            \n                \n        \n            datetime\n            None\n        \n    \n            \n        \n            \n                \n        \n            proj:epsg\n            4326\n        \n    \n            \n        \n            \n                \n        \n            proj:shape\n            [] 2 items\n        \n        \n            \n        \n            \n                \n        \n            0\n            7992\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            1\n            7992\n        \n    \n            \n        \n    \n        \n    \n            \n        \n            \n                \n        \n            end_datetime\n            \"2018-12-31T23:59:59Z\"\n        \n    \n            \n        \n            \n                \n        \n            proj:transform\n            [] 9 items\n        \n        \n            \n        \n            \n                \n        \n            0\n            0.0008983152841195215\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            1\n            0.0\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            2\n            -115.38597824385106\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            3\n            0.0\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            4\n            -0.0008983152841195215\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            5\n            34.74464974521749\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            6\n            0.0\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            7\n            0.0\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            8\n            1.0\n        \n    \n            \n        \n    \n        \n    \n            \n        \n            \n                \n        \n            start_datetime\n            \"2018-01-01T00:00:00Z\"\n        \n    \n            \n        \n    \n        \n    \n            \n        \n            \n                \n        \n            geometry\n            \n        \n            \n                \n        \n            type\n            \"Polygon\"\n        \n    \n            \n        \n            \n                \n        \n            coordinates\n            [] 1 items\n        \n        \n            \n        \n            \n                \n        \n            0\n            [] 10 items\n        \n        \n            \n        \n            \n                \n        \n            0\n            [] 2 items\n        \n        \n            \n        \n            \n                \n        \n            0\n            -114.7625474\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            1\n            27.565314\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            1\n            [] 2 items\n        \n        \n            \n        \n            \n                \n        \n            0\n            -108.2066425\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            1\n            27.565314\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            2\n            [] 2 items\n        \n        \n            \n        \n            \n                \n        \n            0\n            -108.2066425\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            1\n            34.7446497\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            3\n            [] 2 items\n        \n        \n            \n        \n            \n                \n        \n            0\n            -115.3859782\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            1\n            34.7446497\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            4\n            [] 2 items\n        \n        \n            \n        \n            \n                \n        \n            0\n            -115.3859782\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            1\n            29.5649638\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            5\n            [] 2 items\n        \n        \n            \n        \n            \n                \n        \n            0\n            -115.3581305\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            1\n            28.0791503\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            6\n            [] 2 items\n        \n        \n            \n        \n            \n                \n        \n            0\n            -115.2179933\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            1\n            27.8869109\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            7\n            [] 2 items\n        \n        \n            \n        \n            \n                \n        \n            0\n            -115.1775691\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            1\n            27.8491816\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            8\n            [] 2 items\n        \n        \n            \n        \n            \n                \n        \n            0\n            -115.0014993\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            1\n            27.7117394\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            9\n            [] 2 items\n        \n        \n            \n        \n            \n                \n        \n            0\n            -114.7625474\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            1\n            27.565314\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n    \n            \n        \n            \n                \n        \n            links\n            [] 5 items\n        \n        \n            \n        \n            \n                \n        \n            0\n            \n        \n            \n                \n        \n            rel\n            \"collection\"\n        \n    \n            \n        \n            \n                \n        \n            href\n            \"https://planetarycomputer.microsoft.com/api/stac/v1/collections/io-biodiversity\"\n        \n    \n            \n        \n            \n                \n        \n            type\n            \"application/json\"\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            1\n            \n        \n            \n                \n        \n            rel\n            \"parent\"\n        \n    \n            \n        \n            \n                \n        \n            href\n            \"https://planetarycomputer.microsoft.com/api/stac/v1/collections/io-biodiversity\"\n        \n    \n            \n        \n            \n                \n        \n            type\n            \"application/json\"\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            2\n            \n        \n            \n                \n        \n            rel\n            \"root\"\n        \n    \n            \n        \n            \n                \n        \n            href\n            \"https://planetarycomputer.microsoft.com/api/stac/v1\"\n        \n    \n            \n        \n            \n                \n        \n            type\n            \"application/json\"\n        \n    \n            \n        \n            \n                \n        \n            title\n            \"Microsoft Planetary Computer STAC API\"\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            3\n            \n        \n            \n                \n        \n            rel\n            \"self\"\n        \n    \n            \n        \n            \n                \n        \n            href\n            \"https://planetarycomputer.microsoft.com/api/stac/v1/collections/io-biodiversity/items/bii_2018_34.74464974521749_-115.38597824385106_cog\"\n        \n    \n            \n        \n            \n                \n        \n            type\n            \"application/geo+json\"\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            4\n            \n        \n            \n                \n        \n            rel\n            \"preview\"\n        \n    \n            \n        \n            \n                \n        \n            href\n            \"https://planetarycomputer.microsoft.com/api/data/v1/item/map?collection=io-biodiversity&item=bii_2018_34.74464974521749_-115.38597824385106_cog\"\n        \n    \n            \n        \n            \n                \n        \n            type\n            \"text/html\"\n        \n    \n            \n        \n            \n                \n        \n            title\n            \"Map of item\"\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n    \n            \n        \n            \n                \n        \n            assets\n            \n        \n            \n                \n        \n            data\n            \n        \n            \n                \n        \n            href\n            \"https://pcdata01euw.blob.core.windows.net/impact/bii-v1/bii_2018/bii_2018_34.74464974521749_-115.38597824385106_cog.tif?st=2023-12-13T04%3A53%3A48Z&se=2023-12-14T05%3A38%3A48Z&sp=rl&sv=2021-06-08&sr=c&skoid=c85c15d6-d1ae-42d4-af60-e2ca0f81359b&sktid=72f988bf-86f1-41af-91ab-2d7cd011db47&skt=2023-12-14T04%3A37%3A46Z&ske=2023-12-21T04%3A37%3A46Z&sks=b&skv=2021-06-08&sig=mgZGyetANr41Cd1HUUDQwG6w0kJ7qJKcCt32N/zrr1Y%3D\"\n        \n    \n            \n        \n            \n                \n        \n            type\n            \"image/tiff; application=geotiff; profile=cloud-optimized\"\n        \n    \n            \n        \n            \n                \n        \n            title\n            \"Biodiversity Intactness\"\n        \n    \n            \n        \n            \n                \n        \n            description\n            \"Terrestrial biodiversity intactness at 100m resolution\"\n        \n    \n            \n        \n            \n                \n        \n            version\n            \"v1\"\n        \n    \n            \n        \n            \n                \n        \n            raster:bands\n            [] 1 items\n        \n        \n            \n        \n            \n                \n        \n            0\n            \n        \n            \n                \n        \n            sampling\n            \"area\"\n        \n    \n            \n        \n            \n                \n        \n            data_type\n            \"float32\"\n        \n    \n            \n        \n            \n                \n        \n            spatial_resolution\n            100\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n    \n            \n        \n            \n                \n        \n            roles\n            [] 1 items\n        \n        \n            \n        \n            \n                \n        \n            0\n            \"data\"\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n    \n            \n        \n            \n                \n        \n            tilejson\n            \n        \n            \n                \n        \n            href\n            \"https://planetarycomputer.microsoft.com/api/data/v1/item/tilejson.json?collection=io-biodiversity&item=bii_2018_34.74464974521749_-115.38597824385106_cog&assets=data&tile_format=png&colormap_name=io-bii&rescale=0%2C1&expression=0.97%2A%28data_b1%2A%2A3.84%29&format=png\"\n        \n    \n            \n        \n            \n                \n        \n            type\n            \"application/json\"\n        \n    \n            \n        \n            \n                \n        \n            title\n            \"TileJSON with default rendering\"\n        \n    \n            \n        \n            \n                \n        \n            roles\n            [] 1 items\n        \n        \n            \n        \n            \n                \n        \n            0\n            \"tiles\"\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n    \n            \n        \n            \n                \n        \n            rendered_preview\n            \n        \n            \n                \n        \n            href\n            \"https://planetarycomputer.microsoft.com/api/data/v1/item/preview.png?collection=io-biodiversity&item=bii_2018_34.74464974521749_-115.38597824385106_cog&assets=data&tile_format=png&colormap_name=io-bii&rescale=0%2C1&expression=0.97%2A%28data_b1%2A%2A3.84%29&format=png\"\n        \n    \n            \n        \n            \n                \n        \n            type\n            \"image/png\"\n        \n    \n            \n        \n            \n                \n        \n            title\n            \"Rendered preview\"\n        \n    \n            \n        \n            \n                \n        \n            rel\n            \"preview\"\n        \n    \n            \n        \n            \n                \n        \n            roles\n            [] 1 items\n        \n        \n            \n        \n            \n                \n        \n            0\n            \"overview\"\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n    \n            \n        \n            \n                \n        \n            bbox\n            [] 4 items\n        \n        \n            \n        \n            \n                \n        \n            0\n            -115.3859782\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            1\n            27.565314\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            2\n            -108.2066425\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            3\n            34.7446497\n        \n    \n            \n        \n    \n        \n    \n            \n        \n            \n                \n        \n            stac_extensions\n            [] 3 items\n        \n        \n            \n        \n            \n                \n        \n            0\n            \"https://stac-extensions.github.io/projection/v1.0.0/schema.json\"\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            1\n            \"https://stac-extensions.github.io/raster/v1.1.0/schema.json\"\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            2\n            \"https://stac-extensions.github.io/version/v1.1.0/schema.json\"\n        \n    \n            \n        \n    \n        \n    \n            \n        \n            \n                \n        \n            collection\n            \"io-biodiversity\"\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            3\n            \n        \n            \n                \n        \n            type\n            \"Feature\"\n        \n    \n            \n        \n            \n                \n        \n            stac_version\n            \"1.0.0\"\n        \n    \n            \n        \n            \n                \n        \n            id\n            \"bii_2017_34.74464974521749_-115.38597824385106_cog\"\n        \n    \n            \n        \n            \n                \n        \n            properties\n            \n        \n            \n                \n        \n            datetime\n            None\n        \n    \n            \n        \n            \n                \n        \n            proj:epsg\n            4326\n        \n    \n            \n        \n            \n                \n        \n            proj:shape\n            [] 2 items\n        \n        \n            \n        \n            \n                \n        \n            0\n            7992\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            1\n            7992\n        \n    \n            \n        \n    \n        \n    \n            \n        \n            \n                \n        \n            end_datetime\n            \"2017-12-31T23:59:59Z\"\n        \n    \n            \n        \n            \n                \n        \n            proj:transform\n            [] 9 items\n        \n        \n            \n        \n            \n                \n        \n            0\n            0.0008983152841195215\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            1\n            0.0\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            2\n            -115.38597824385106\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            3\n            0.0\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            4\n            -0.0008983152841195215\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            5\n            34.74464974521749\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            6\n            0.0\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            7\n            0.0\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            8\n            1.0\n        \n    \n            \n        \n    \n        \n    \n            \n        \n            \n                \n        \n            start_datetime\n            \"2017-01-01T00:00:00Z\"\n        \n    \n            \n        \n    \n        \n    \n            \n        \n            \n                \n        \n            geometry\n            \n        \n            \n                \n        \n            type\n            \"Polygon\"\n        \n    \n            \n        \n            \n                \n        \n            coordinates\n            [] 1 items\n        \n        \n            \n        \n            \n                \n        \n            0\n            [] 10 items\n        \n        \n            \n        \n            \n                \n        \n            0\n            [] 2 items\n        \n        \n            \n        \n            \n                \n        \n            0\n            -114.7616491\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            1\n            27.565314\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            1\n            [] 2 items\n        \n        \n            \n        \n            \n                \n        \n            0\n            -108.2066425\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            1\n            27.565314\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            2\n            [] 2 items\n        \n        \n            \n        \n            \n                \n        \n            0\n            -108.2066425\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            1\n            34.7446497\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            3\n            [] 2 items\n        \n        \n            \n        \n            \n                \n        \n            0\n            -115.3859782\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            1\n            34.7446497\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            4\n            [] 2 items\n        \n        \n            \n        \n            \n                \n        \n            0\n            -115.3859782\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            1\n            29.5649638\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            5\n            [] 2 items\n        \n        \n            \n        \n            \n                \n        \n            0\n            -115.3581305\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            1\n            28.0791503\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            6\n            [] 2 items\n        \n        \n            \n        \n            \n                \n        \n            0\n            -115.2036202\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            1\n            27.8662496\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            7\n            [] 2 items\n        \n        \n            \n        \n            \n                \n        \n            0\n            -115.0068892\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            1\n            27.7180276\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            8\n            [] 2 items\n        \n        \n            \n        \n            \n                \n        \n            0\n            -114.8469891\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            1\n            27.6174163\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            9\n            [] 2 items\n        \n        \n            \n        \n            \n                \n        \n            0\n            -114.7616491\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            1\n            27.565314\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n    \n            \n        \n            \n                \n        \n            links\n            [] 5 items\n        \n        \n            \n        \n            \n                \n        \n            0\n            \n        \n            \n                \n        \n            rel\n            \"collection\"\n        \n    \n            \n        \n            \n                \n        \n            href\n            \"https://planetarycomputer.microsoft.com/api/stac/v1/collections/io-biodiversity\"\n        \n    \n            \n        \n            \n                \n        \n            type\n            \"application/json\"\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            1\n            \n        \n            \n                \n        \n            rel\n            \"parent\"\n        \n    \n            \n        \n            \n                \n        \n            href\n            \"https://planetarycomputer.microsoft.com/api/stac/v1/collections/io-biodiversity\"\n        \n    \n            \n        \n            \n                \n        \n            type\n            \"application/json\"\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            2\n            \n        \n            \n                \n        \n            rel\n            \"root\"\n        \n    \n            \n        \n            \n                \n        \n            href\n            \"https://planetarycomputer.microsoft.com/api/stac/v1\"\n        \n    \n            \n        \n            \n                \n        \n            type\n            \"application/json\"\n        \n    \n            \n        \n            \n                \n        \n            title\n            \"Microsoft Planetary Computer STAC API\"\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            3\n            \n        \n            \n                \n        \n            rel\n            \"self\"\n        \n    \n            \n        \n            \n                \n        \n            href\n            \"https://planetarycomputer.microsoft.com/api/stac/v1/collections/io-biodiversity/items/bii_2017_34.74464974521749_-115.38597824385106_cog\"\n        \n    \n            \n        \n            \n                \n        \n            type\n            \"application/geo+json\"\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            4\n            \n        \n            \n                \n        \n            rel\n            \"preview\"\n        \n    \n            \n        \n            \n                \n        \n            href\n            \"https://planetarycomputer.microsoft.com/api/data/v1/item/map?collection=io-biodiversity&item=bii_2017_34.74464974521749_-115.38597824385106_cog\"\n        \n    \n            \n        \n            \n                \n        \n            type\n            \"text/html\"\n        \n    \n            \n        \n            \n                \n        \n            title\n            \"Map of item\"\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n    \n            \n        \n            \n                \n        \n            assets\n            \n        \n            \n                \n        \n            data\n            \n        \n            \n                \n        \n            href\n            \"https://pcdata01euw.blob.core.windows.net/impact/bii-v1/bii_2017/bii_2017_34.74464974521749_-115.38597824385106_cog.tif?st=2023-12-13T04%3A53%3A48Z&se=2023-12-14T05%3A38%3A48Z&sp=rl&sv=2021-06-08&sr=c&skoid=c85c15d6-d1ae-42d4-af60-e2ca0f81359b&sktid=72f988bf-86f1-41af-91ab-2d7cd011db47&skt=2023-12-14T04%3A37%3A46Z&ske=2023-12-21T04%3A37%3A46Z&sks=b&skv=2021-06-08&sig=mgZGyetANr41Cd1HUUDQwG6w0kJ7qJKcCt32N/zrr1Y%3D\"\n        \n    \n            \n        \n            \n                \n        \n            type\n            \"image/tiff; application=geotiff; profile=cloud-optimized\"\n        \n    \n            \n        \n            \n                \n        \n            title\n            \"Biodiversity Intactness\"\n        \n    \n            \n        \n            \n                \n        \n            description\n            \"Terrestrial biodiversity intactness at 100m resolution\"\n        \n    \n            \n        \n            \n                \n        \n            version\n            \"v1\"\n        \n    \n            \n        \n            \n                \n        \n            raster:bands\n            [] 1 items\n        \n        \n            \n        \n            \n                \n        \n            0\n            \n        \n            \n                \n        \n            sampling\n            \"area\"\n        \n    \n            \n        \n            \n                \n        \n            data_type\n            \"float32\"\n        \n    \n            \n        \n            \n                \n        \n            spatial_resolution\n            100\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n    \n            \n        \n            \n                \n        \n            roles\n            [] 1 items\n        \n        \n            \n        \n            \n                \n        \n            0\n            \"data\"\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n    \n            \n        \n            \n                \n        \n            tilejson\n            \n        \n            \n                \n        \n            href\n            \"https://planetarycomputer.microsoft.com/api/data/v1/item/tilejson.json?collection=io-biodiversity&item=bii_2017_34.74464974521749_-115.38597824385106_cog&assets=data&tile_format=png&colormap_name=io-bii&rescale=0%2C1&expression=0.97%2A%28data_b1%2A%2A3.84%29&format=png\"\n        \n    \n            \n        \n            \n                \n        \n            type\n            \"application/json\"\n        \n    \n            \n        \n            \n                \n        \n            title\n            \"TileJSON with default rendering\"\n        \n    \n            \n        \n            \n                \n        \n            roles\n            [] 1 items\n        \n        \n            \n        \n            \n                \n        \n            0\n            \"tiles\"\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n    \n            \n        \n            \n                \n        \n            rendered_preview\n            \n        \n            \n                \n        \n            href\n            \"https://planetarycomputer.microsoft.com/api/data/v1/item/preview.png?collection=io-biodiversity&item=bii_2017_34.74464974521749_-115.38597824385106_cog&assets=data&tile_format=png&colormap_name=io-bii&rescale=0%2C1&expression=0.97%2A%28data_b1%2A%2A3.84%29&format=png\"\n        \n    \n            \n        \n            \n                \n        \n            type\n            \"image/png\"\n        \n    \n            \n        \n            \n                \n        \n            title\n            \"Rendered preview\"\n        \n    \n            \n        \n            \n                \n        \n            rel\n            \"preview\"\n        \n    \n            \n        \n            \n                \n        \n            roles\n            [] 1 items\n        \n        \n            \n        \n            \n                \n        \n            0\n            \"overview\"\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n    \n            \n        \n            \n                \n        \n            bbox\n            [] 4 items\n        \n        \n            \n        \n            \n                \n        \n            0\n            -115.3859782\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            1\n            27.565314\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            2\n            -108.2066425\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            3\n            34.7446497\n        \n    \n            \n        \n    \n        \n    \n            \n        \n            \n                \n        \n            stac_extensions\n            [] 3 items\n        \n        \n            \n        \n            \n                \n        \n            0\n            \"https://stac-extensions.github.io/projection/v1.0.0/schema.json\"\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            1\n            \"https://stac-extensions.github.io/raster/v1.1.0/schema.json\"\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            2\n            \"https://stac-extensions.github.io/version/v1.1.0/schema.json\"\n        \n    \n            \n        \n    \n        \n    \n            \n        \n            \n                \n        \n            collection\n            \"io-biodiversity\"\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n    \n                \n            \n        \n    \n\n\n\n\n\n\n\n\nCode\n#get fourth item in the catalog search\nph_2017 = items[3]\n# get first item in the catalog search\nph_2020 = items[0]\n\n#Visualization Check\n#print item id and properties for 2017 and 2020 \n#ph_2017\n#ph_2020\n\n\n\n\n\n\n\n\nCode\n#plot rendered preview\nimage_2017 = Image(url=ph_2017.assets['rendered_preview'].href, width=500)\nimage_2017\n\n\n\n\n\n\n\n\n\n\nCode\n#plot rendered preiew\nimage_2020 = Image(url=ph_2020.assets['rendered_preview'].href, width=500)\nimage_2020\n\n\n\n\n\nThe raster data in our current items is within the “data” asset and can be accessed via its URL. We will open the raster directly using rioxr.open_rasterio()\n\n\nCode\nph_2017 = rioxr.open_rasterio(ph_2017.assets['data'].href)\nph_2020 = rioxr.open_rasterio(ph_2020.assets['data'].href)\n\n\n\n\n\n\n\nIn order to study biodiversity loss, the biodiversity intactness index (BII)is employed which estimates how the average abundance of native terrestrial species in a region (2020) compares with their abundances before pronounced human impacts (2017). Area that has been lost with a BII of at least 0.75 or greater signifies an extreme biodiversity loss and is therefore used as a threshold in this analysis.\n\n\nCode\n#set threshold\nbi_threshold = 0.75\n\n#found the areas in which the BII was greater than 0.75\nabove_thresh_2017 = ph_2017 &gt;= bi_threshold \nabove_thresh_2020 = ph_2020 &gt;= bi_threshold \n\n#casted it as int. data array to accecss binary values \nabove_thresh_2017 = above_thresh_2017.astype(int) \nabove_thresh_2020 = above_thresh_2020.astype(int) \n\n#calculating the the total number of pixels in the phoenix subdivision for 2017 and 2020 \ntotal_2017 = np.sum(ph_2017) \ntotal_2020 = np.sum(ph_2020) \n\n#calculating the percentage of pixels with a BII of at least 0.75\npercent_2017 = (np.sum(above_thresh_2017 / total_2017)) * 100  \npercent_2020 = (np.sum(above_thresh_2020 / total_2020)) * 100\n\n#check: look at new variable \n#percent_2017\n#percent_2020\n\n#identify the lost pixels \nlost_pixels = above_thresh_2017 - above_thresh_2020 \nprint(np.sum(lost_pixels))\n\n#print percentage values for 2017 and 2020 \nprint(f\"Percentage of area with BII &gt;= 0.75 in 2017: {percent_2017:.2f}%\")\nprint(f\"Percentage of area with BII &gt;= 0.75 in 2020 {percent_2020:.2f}%\")\n\n\n\n\n\nIn order to perform geospatial operations, it’s crucial to ensure that two spatial datasets are aligned in terms of their coordinate reference systems (CRS) and spatial extent. This alignment is necessary for accurate spatial analysis and overlays between vector and raster data.\n\n\nCode\n#make crs' the same \nphoenix = phoenix.to_crs(lost_pixels.rio.crs)\n\n#check to make sure crs' match\nphoenix.crs == lost_pixels.rio.crs\n\n#clipping the bii data to phoenix geometry \nlost_pixels = lost_pixels.rio.clip(phoenix.geometry, phoenix.crs) \n\n#clipping the ph_2020 data to phoenix geometry \nph_2020 = ph_2020.rio.clip(phoenix.geometry, phoenix.crs)\n\n#check\n#type(lost_pixels)\n#type(phoenix)\n#type(above_thresh_2017)\n\n\n/Users/katebecker/anaconda3/envs/mpc-env/lib/python3.11/site-packages/xarray/core/duck_array_ops.py:201: RuntimeWarning: invalid value encountered in cast\n  return data.astype(dtype, **kwargs)\n\n\n\n\nFor further analysis this step is necessary to effectively process raster data. This is done to clean up unnecessary information in the dataset, especially if you’re not performing analyses based on bands. Similarily, it simplifies the structure of the data, especially if you’re working with a single-band raster. This kind of data preprocessing is common in geospatial analysis workflows to ensure data consistency and relevance to the study area.\n\n\nCode\n# remove length 1 dimension (band)\nph_2020 = ph_2020.squeeze()\n\n# remove coordinates associated to band\nph_2020 = ph_2020.drop('band')\n\n#clipping the ph_2020 data to phoenix geometry \nph_2020 = ph_2020.rio.clip(phoenix.geometry, phoenix.crs)\n\n#check: plot the area showing BII &gt; 0.75 \nlost_pixels.plot() \n\n\n/Users/katebecker/anaconda3/envs/mpc-env/lib/python3.11/site-packages/xarray/plot/utils.py:245: RuntimeWarning: overflow encountered in scalar absolute\n  vlim = max(abs(vmin - center), abs(vmax - center))\n\n\n&lt;matplotlib.collections.QuadMesh at 0x1bae660d0&gt;\n\n\n\n\n\n\n\n\n\nIn order to effectively complete this analysis and create a meaningful and insightful map, all of the relevant data must be compiled together.\n\n\nCode\nfig, ax = plt.subplots(figsize=(12, 8))\nax.axis('off')\n\nphoenix.plot(ax=ax) #plot phoenix shapefile \nph_2020.plot(ax=ax) #plot 2020 raster\nlost_pixels.where(lost_pixels == 1).plot(ax=ax,  add_colorbar=False) #plotting the area with BII &gt;= 0.75 in 2017 that was lost by 2020\n\n\nplt.title('Maricopa County with Areas of Extreme Biodiversity Loss') #added a title \n\nplt.show() #printed map \n\n\n#get rid of bar on left \n\n\n\n\n\n\n\n\nNow that the data processing is over we can plot the phoenix shapefile, the 2020 raster, and the raster containing the biodiversity loss from 2017 to 2020. It appears that there was a significant loss in biodiversity within Maricopa County as a result of land development. The areas with a neon yellow hue are those with BII&gt;=0.75 in 2017 that were lost by 2020. Over a three year period, this loss is catastrophic for such a small temporal scale. This analysis can be further explored to measure biodiversity levels as climate change and human encroachment continues."
  },
  {
    "objectID": "posts/IO_Maricopa/phoenix_biodiversity.html#import-relevant-libraries-functions-and-the-microsoft-planetary-computer",
    "href": "posts/IO_Maricopa/phoenix_biodiversity.html#import-relevant-libraries-functions-and-the-microsoft-planetary-computer",
    "title": "Biodiversity in Phoenix, Arizona",
    "section": "",
    "text": "In order to perform this analysis, several libraries and functions must be imported to work with geospatial data, particularly for accessing, processing, and visualizing raster and vector data. The Microsoft Planetary Computer must also be imported in order to access the STAC (Spatio Temporal Asset Catalog) and obtain the io-biodiversity collection.\n\n\nCode\nimport numpy as np\nimport geopandas as gpd\nimport rioxarray as rioxr\nimport matplotlib.pyplot as plt\nimport contextily as ctx\nimport rasterio\nfrom rasterio.plot import show as rioshow\nfrom shapely.geometry import box\nimport xarray as xr\nimport matplotlib.patches as patches\n\nfrom shapely.geometry import Polygon\nfrom scipy.ndimage import label\n\n# used to access STAC catalogs\nfrom pystac_client import Client\n# used to sign items from the MPC STAC catalog\nimport planetary_computer\n\n# ----- other libraries for nice ouputs\nfrom IPython.display import Image"
  },
  {
    "objectID": "posts/IO_Maricopa/phoenix_biodiversity.html#data-access",
    "href": "posts/IO_Maricopa/phoenix_biodiversity.html#data-access",
    "title": "Biodiversity in Phoenix, Arizona",
    "section": "",
    "text": "BII data: This dataset is part of the MPC STAC catalog. Within the catalog, access the ‘io-biodiversity’ collection and as well as the 2017 and 2020 rasters covering Phoenix subdivision.\n2017: “https://pcdata01euw.blob.core.windows.net/impact/bii-v1/bii_2017/bii_2017_34.74464974521749_-115.38597824385106_cog.tif?st=2023-12-13T03%3A37%3A21Z&se=2023-12-14T04%3A22%3A21Z&sp=rl&sv=2021-06-08&sr=c&skoid=c85c15d6-d1ae-42d4-af60-e2ca0f81359b&sktid=72f988bf-86f1-41af-91ab-2d7cd011db47&skt=2023-12-13T23%3A15%3A10Z&ske=2023-12-20T23%3A15%3A10Z&sks=b&skv=2021-06-08&sig=jBYY08Q1kepYqT6tC72CUJeW499oAwkeWPh1THibgbM%3D”\n2020: “https://pcdata01euw.blob.core.windows.net/impact/bii-v1/bii_2017/bii_2017_34.74464974521749_-115.38597824385106_cog.tif?st=2023-12-13T02%3A19%3A15Z&se=2023-12-14T03%3A04%3A15Z&sp=rl&sv=2021-06-08&sr=c&skoid=c85c15d6-d1ae-42d4-af60-e2ca0f81359b&sktid=72f988bf-86f1-41af-91ab-2d7cd011db47&skt=2023-12-13T20%3A49%3A24Z&ske=2023-12-20T20%3A49%3A24Z&sks=b&skv=2021-06-08&sig=lT4m5FR92t/VvZDpp2RrpqM1lJxlF1qL%2BUbKZBqWIiw%3D”\nPhoenix subdivision: Within the Census County Subdivision shapefiles access the Phoenix subdivision polygon in the Arizona: https://www.census.gov/cgi-bin/geo/shapefiles/index.php?year=2022&layergroup=County+Subdivisions\n\n\n\n\n\nCode\narizona = gpd.read_file('data/tl_2022_04_cousub/tl_2022_04_cousub.shp') #read in shapefile using geopandas\narizona.head() #look at the head of the dataframe\nphoenix = arizona[arizona['NAME'] == \"Phoenix\"] #select for phoenix county in arizona \n\n# create axis with plot\nax = (phoenix.to_crs(epsg=3857) #transfer crs to 3857\n      .plot(figsize=(7, 7), alpha=0.5, edgecolor=\"k\")\n      )\n\n# add NatGeo basemap from contextily\nctx.add_basemap(ax, source=ctx.providers.Esri.NatGeoWorldMap)\n\n# update axes\nax.set_title(\"Maricopa County, Arizona\", fontdict={\"fontsize\": \"20\"}) #sets a title \nax.set_axis_off() #turns off grid lines"
  },
  {
    "objectID": "posts/IO_Maricopa/phoenix_biodiversity.html#catalog-access-and-search-for-the-io-biodiversity-collection",
    "href": "posts/IO_Maricopa/phoenix_biodiversity.html#catalog-access-and-search-for-the-io-biodiversity-collection",
    "title": "Biodiversity in Phoenix, Arizona",
    "section": "",
    "text": "Using the Microsoft Planetary Computer, the io-biodiversity collection is accessed along with its metadata and assets in order to perform this analysis. The metadata for a STAC item includes core identifying information (such as id, geometry, bounding box, and date), and additional properties (for example, place of collection). In comparison, assets are links to the actual data of the item (for example, links to the spectral bands of a satellite image.) These identifiers are useful when trying to perform a more detailed catalog search such as using the following coordinates to specify a bounding box and find the relevant raster:\n[-112.826843, 32.974108, -111.184387, 33.863574]\n\n\nCode\n## Catalog search \ncatalog = Client.open(\"https://planetarycomputer.microsoft.com/api/stac/v1\",\n                      modifier = planetary_computer.sign_inplace)\n#temporal range of interest\ntime_range = '2017/2020'\n#Bounding Box Coordinates (as a GeoJSON)\nbbox = [-112.826843, 32.974108, -111.184387, 33.863574]\n#Catalog search\nsearch = catalog.search(\n    collections = ['io-biodiversity'],\n    bbox = bbox,\n    datetime = time_range\n)\nitems = search.item_collection()\nitems\n#Number of items in the search:\nlen(items)\n\nitems #tells us there were two items in the catalog that matched our search\n\n\n\n\n\n\n    \n        \n            \n                \n                    \n        \n            type\n            \"FeatureCollection\"\n        \n    \n                \n            \n                \n                    \n        \n            features\n            [] 4 items\n        \n        \n            \n        \n            \n                \n        \n            0\n            \n        \n            \n                \n        \n            type\n            \"Feature\"\n        \n    \n            \n        \n            \n                \n        \n            stac_version\n            \"1.0.0\"\n        \n    \n            \n        \n            \n                \n        \n            id\n            \"bii_2020_34.74464974521749_-115.38597824385106_cog\"\n        \n    \n            \n        \n            \n                \n        \n            properties\n            \n        \n            \n                \n        \n            datetime\n            None\n        \n    \n            \n        \n            \n                \n        \n            proj:epsg\n            4326\n        \n    \n            \n        \n            \n                \n        \n            proj:shape\n            [] 2 items\n        \n        \n            \n        \n            \n                \n        \n            0\n            7992\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            1\n            7992\n        \n    \n            \n        \n    \n        \n    \n            \n        \n            \n                \n        \n            end_datetime\n            \"2020-12-31T23:59:59Z\"\n        \n    \n            \n        \n            \n                \n        \n            proj:transform\n            [] 9 items\n        \n        \n            \n        \n            \n                \n        \n            0\n            0.0008983152841195215\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            1\n            0.0\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            2\n            -115.38597824385106\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            3\n            0.0\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            4\n            -0.0008983152841195215\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            5\n            34.74464974521749\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            6\n            0.0\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            7\n            0.0\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            8\n            1.0\n        \n    \n            \n        \n    \n        \n    \n            \n        \n            \n                \n        \n            start_datetime\n            \"2020-01-01T00:00:00Z\"\n        \n    \n            \n        \n    \n        \n    \n            \n        \n            \n                \n        \n            geometry\n            \n        \n            \n                \n        \n            type\n            \"Polygon\"\n        \n    \n            \n        \n            \n                \n        \n            coordinates\n            [] 1 items\n        \n        \n            \n        \n            \n                \n        \n            0\n            [] 9 items\n        \n        \n            \n        \n            \n                \n        \n            0\n            [] 2 items\n        \n        \n            \n        \n            \n                \n        \n            0\n            -114.7625474\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            1\n            27.565314\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            1\n            [] 2 items\n        \n        \n            \n        \n            \n                \n        \n            0\n            -108.2066425\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            1\n            27.565314\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            2\n            [] 2 items\n        \n        \n            \n        \n            \n                \n        \n            0\n            -108.2066425\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            1\n            34.7446497\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            3\n            [] 2 items\n        \n        \n            \n        \n            \n                \n        \n            0\n            -115.3859782\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            1\n            34.7446497\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            4\n            [] 2 items\n        \n        \n            \n        \n            \n                \n        \n            0\n            -115.3859782\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            1\n            29.5649638\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            5\n            [] 2 items\n        \n        \n            \n        \n            \n                \n        \n            0\n            -115.3581305\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            1\n            28.0791503\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            6\n            [] 2 items\n        \n        \n            \n        \n            \n                \n        \n            0\n            -115.2036202\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            1\n            27.8662496\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            7\n            [] 2 items\n        \n        \n            \n        \n            \n                \n        \n            0\n            -114.9988044\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            1\n            27.7099428\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            8\n            [] 2 items\n        \n        \n            \n        \n            \n                \n        \n            0\n            -114.7625474\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            1\n            27.565314\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n    \n            \n        \n            \n                \n        \n            links\n            [] 5 items\n        \n        \n            \n        \n            \n                \n        \n            0\n            \n        \n            \n                \n        \n            rel\n            \"collection\"\n        \n    \n            \n        \n            \n                \n        \n            href\n            \"https://planetarycomputer.microsoft.com/api/stac/v1/collections/io-biodiversity\"\n        \n    \n            \n        \n            \n                \n        \n            type\n            \"application/json\"\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            1\n            \n        \n            \n                \n        \n            rel\n            \"parent\"\n        \n    \n            \n        \n            \n                \n        \n            href\n            \"https://planetarycomputer.microsoft.com/api/stac/v1/collections/io-biodiversity\"\n        \n    \n            \n        \n            \n                \n        \n            type\n            \"application/json\"\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            2\n            \n        \n            \n                \n        \n            rel\n            \"root\"\n        \n    \n            \n        \n            \n                \n        \n            href\n            \"https://planetarycomputer.microsoft.com/api/stac/v1\"\n        \n    \n            \n        \n            \n                \n        \n            type\n            \"application/json\"\n        \n    \n            \n        \n            \n                \n        \n            title\n            \"Microsoft Planetary Computer STAC API\"\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            3\n            \n        \n            \n                \n        \n            rel\n            \"self\"\n        \n    \n            \n        \n            \n                \n        \n            href\n            \"https://planetarycomputer.microsoft.com/api/stac/v1/collections/io-biodiversity/items/bii_2020_34.74464974521749_-115.38597824385106_cog\"\n        \n    \n            \n        \n            \n                \n        \n            type\n            \"application/geo+json\"\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            4\n            \n        \n            \n                \n        \n            rel\n            \"preview\"\n        \n    \n            \n        \n            \n                \n        \n            href\n            \"https://planetarycomputer.microsoft.com/api/data/v1/item/map?collection=io-biodiversity&item=bii_2020_34.74464974521749_-115.38597824385106_cog\"\n        \n    \n            \n        \n            \n                \n        \n            type\n            \"text/html\"\n        \n    \n            \n        \n            \n                \n        \n            title\n            \"Map of item\"\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n    \n            \n        \n            \n                \n        \n            assets\n            \n        \n            \n                \n        \n            data\n            \n        \n            \n                \n        \n            href\n            \"https://pcdata01euw.blob.core.windows.net/impact/bii-v1/bii_2020/bii_2020_34.74464974521749_-115.38597824385106_cog.tif?st=2023-12-13T04%3A53%3A48Z&se=2023-12-14T05%3A38%3A48Z&sp=rl&sv=2021-06-08&sr=c&skoid=c85c15d6-d1ae-42d4-af60-e2ca0f81359b&sktid=72f988bf-86f1-41af-91ab-2d7cd011db47&skt=2023-12-14T04%3A37%3A46Z&ske=2023-12-21T04%3A37%3A46Z&sks=b&skv=2021-06-08&sig=mgZGyetANr41Cd1HUUDQwG6w0kJ7qJKcCt32N/zrr1Y%3D\"\n        \n    \n            \n        \n            \n                \n        \n            type\n            \"image/tiff; application=geotiff; profile=cloud-optimized\"\n        \n    \n            \n        \n            \n                \n        \n            title\n            \"Biodiversity Intactness\"\n        \n    \n            \n        \n            \n                \n        \n            description\n            \"Terrestrial biodiversity intactness at 100m resolution\"\n        \n    \n            \n        \n            \n                \n        \n            version\n            \"v1\"\n        \n    \n            \n        \n            \n                \n        \n            raster:bands\n            [] 1 items\n        \n        \n            \n        \n            \n                \n        \n            0\n            \n        \n            \n                \n        \n            sampling\n            \"area\"\n        \n    \n            \n        \n            \n                \n        \n            data_type\n            \"float32\"\n        \n    \n            \n        \n            \n                \n        \n            spatial_resolution\n            100\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n    \n            \n        \n            \n                \n        \n            roles\n            [] 1 items\n        \n        \n            \n        \n            \n                \n        \n            0\n            \"data\"\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n    \n            \n        \n            \n                \n        \n            tilejson\n            \n        \n            \n                \n        \n            href\n            \"https://planetarycomputer.microsoft.com/api/data/v1/item/tilejson.json?collection=io-biodiversity&item=bii_2020_34.74464974521749_-115.38597824385106_cog&assets=data&tile_format=png&colormap_name=io-bii&rescale=0%2C1&expression=0.97%2A%28data_b1%2A%2A3.84%29&format=png\"\n        \n    \n            \n        \n            \n                \n        \n            type\n            \"application/json\"\n        \n    \n            \n        \n            \n                \n        \n            title\n            \"TileJSON with default rendering\"\n        \n    \n            \n        \n            \n                \n        \n            roles\n            [] 1 items\n        \n        \n            \n        \n            \n                \n        \n            0\n            \"tiles\"\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n    \n            \n        \n            \n                \n        \n            rendered_preview\n            \n        \n            \n                \n        \n            href\n            \"https://planetarycomputer.microsoft.com/api/data/v1/item/preview.png?collection=io-biodiversity&item=bii_2020_34.74464974521749_-115.38597824385106_cog&assets=data&tile_format=png&colormap_name=io-bii&rescale=0%2C1&expression=0.97%2A%28data_b1%2A%2A3.84%29&format=png\"\n        \n    \n            \n        \n            \n                \n        \n            type\n            \"image/png\"\n        \n    \n            \n        \n            \n                \n        \n            title\n            \"Rendered preview\"\n        \n    \n            \n        \n            \n                \n        \n            rel\n            \"preview\"\n        \n    \n            \n        \n            \n                \n        \n            roles\n            [] 1 items\n        \n        \n            \n        \n            \n                \n        \n            0\n            \"overview\"\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n    \n            \n        \n            \n                \n        \n            bbox\n            [] 4 items\n        \n        \n            \n        \n            \n                \n        \n            0\n            -115.3859782\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            1\n            27.565314\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            2\n            -108.2066425\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            3\n            34.7446497\n        \n    \n            \n        \n    \n        \n    \n            \n        \n            \n                \n        \n            stac_extensions\n            [] 3 items\n        \n        \n            \n        \n            \n                \n        \n            0\n            \"https://stac-extensions.github.io/projection/v1.0.0/schema.json\"\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            1\n            \"https://stac-extensions.github.io/raster/v1.1.0/schema.json\"\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            2\n            \"https://stac-extensions.github.io/version/v1.1.0/schema.json\"\n        \n    \n            \n        \n    \n        \n    \n            \n        \n            \n                \n        \n            collection\n            \"io-biodiversity\"\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            1\n            \n        \n            \n                \n        \n            type\n            \"Feature\"\n        \n    \n            \n        \n            \n                \n        \n            stac_version\n            \"1.0.0\"\n        \n    \n            \n        \n            \n                \n        \n            id\n            \"bii_2019_34.74464974521749_-115.38597824385106_cog\"\n        \n    \n            \n        \n            \n                \n        \n            properties\n            \n        \n            \n                \n        \n            datetime\n            None\n        \n    \n            \n        \n            \n                \n        \n            proj:epsg\n            4326\n        \n    \n            \n        \n            \n                \n        \n            proj:shape\n            [] 2 items\n        \n        \n            \n        \n            \n                \n        \n            0\n            7992\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            1\n            7992\n        \n    \n            \n        \n    \n        \n    \n            \n        \n            \n                \n        \n            end_datetime\n            \"2019-12-31T23:59:59Z\"\n        \n    \n            \n        \n            \n                \n        \n            proj:transform\n            [] 9 items\n        \n        \n            \n        \n            \n                \n        \n            0\n            0.0008983152841195215\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            1\n            0.0\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            2\n            -115.38597824385106\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            3\n            0.0\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            4\n            -0.0008983152841195215\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            5\n            34.74464974521749\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            6\n            0.0\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            7\n            0.0\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            8\n            1.0\n        \n    \n            \n        \n    \n        \n    \n            \n        \n            \n                \n        \n            start_datetime\n            \"2019-01-01T00:00:00Z\"\n        \n    \n            \n        \n    \n        \n    \n            \n        \n            \n                \n        \n            geometry\n            \n        \n            \n                \n        \n            type\n            \"Polygon\"\n        \n    \n            \n        \n            \n                \n        \n            coordinates\n            [] 1 items\n        \n        \n            \n        \n            \n                \n        \n            0\n            [] 10 items\n        \n        \n            \n        \n            \n                \n        \n            0\n            [] 2 items\n        \n        \n            \n        \n            \n                \n        \n            0\n            -114.7625474\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            1\n            27.565314\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            1\n            [] 2 items\n        \n        \n            \n        \n            \n                \n        \n            0\n            -108.2066425\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            1\n            27.565314\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            2\n            [] 2 items\n        \n        \n            \n        \n            \n                \n        \n            0\n            -108.2066425\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            1\n            34.7446497\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            3\n            [] 2 items\n        \n        \n            \n        \n            \n                \n        \n            0\n            -115.3859782\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            1\n            34.7446497\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            4\n            [] 2 items\n        \n        \n            \n        \n            \n                \n        \n            0\n            -115.3859782\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            1\n            29.5649638\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            5\n            [] 2 items\n        \n        \n            \n        \n            \n                \n        \n            0\n            -115.3581305\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            1\n            28.0791503\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            6\n            [] 2 items\n        \n        \n            \n        \n            \n                \n        \n            0\n            -115.2161967\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            1\n            27.8761311\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            7\n            [] 2 items\n        \n        \n            \n        \n            \n                \n        \n            0\n            -115.0068892\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            1\n            27.7180276\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            8\n            [] 2 items\n        \n        \n            \n        \n            \n                \n        \n            0\n            -114.8469891\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            1\n            27.6174163\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            9\n            [] 2 items\n        \n        \n            \n        \n            \n                \n        \n            0\n            -114.7625474\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            1\n            27.565314\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n    \n            \n        \n            \n                \n        \n            links\n            [] 5 items\n        \n        \n            \n        \n            \n                \n        \n            0\n            \n        \n            \n                \n        \n            rel\n            \"collection\"\n        \n    \n            \n        \n            \n                \n        \n            href\n            \"https://planetarycomputer.microsoft.com/api/stac/v1/collections/io-biodiversity\"\n        \n    \n            \n        \n            \n                \n        \n            type\n            \"application/json\"\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            1\n            \n        \n            \n                \n        \n            rel\n            \"parent\"\n        \n    \n            \n        \n            \n                \n        \n            href\n            \"https://planetarycomputer.microsoft.com/api/stac/v1/collections/io-biodiversity\"\n        \n    \n            \n        \n            \n                \n        \n            type\n            \"application/json\"\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            2\n            \n        \n            \n                \n        \n            rel\n            \"root\"\n        \n    \n            \n        \n            \n                \n        \n            href\n            \"https://planetarycomputer.microsoft.com/api/stac/v1\"\n        \n    \n            \n        \n            \n                \n        \n            type\n            \"application/json\"\n        \n    \n            \n        \n            \n                \n        \n            title\n            \"Microsoft Planetary Computer STAC API\"\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            3\n            \n        \n            \n                \n        \n            rel\n            \"self\"\n        \n    \n            \n        \n            \n                \n        \n            href\n            \"https://planetarycomputer.microsoft.com/api/stac/v1/collections/io-biodiversity/items/bii_2019_34.74464974521749_-115.38597824385106_cog\"\n        \n    \n            \n        \n            \n                \n        \n            type\n            \"application/geo+json\"\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            4\n            \n        \n            \n                \n        \n            rel\n            \"preview\"\n        \n    \n            \n        \n            \n                \n        \n            href\n            \"https://planetarycomputer.microsoft.com/api/data/v1/item/map?collection=io-biodiversity&item=bii_2019_34.74464974521749_-115.38597824385106_cog\"\n        \n    \n            \n        \n            \n                \n        \n            type\n            \"text/html\"\n        \n    \n            \n        \n            \n                \n        \n            title\n            \"Map of item\"\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n    \n            \n        \n            \n                \n        \n            assets\n            \n        \n            \n                \n        \n            data\n            \n        \n            \n                \n        \n            href\n            \"https://pcdata01euw.blob.core.windows.net/impact/bii-v1/bii_2019/bii_2019_34.74464974521749_-115.38597824385106_cog.tif?st=2023-12-13T04%3A53%3A48Z&se=2023-12-14T05%3A38%3A48Z&sp=rl&sv=2021-06-08&sr=c&skoid=c85c15d6-d1ae-42d4-af60-e2ca0f81359b&sktid=72f988bf-86f1-41af-91ab-2d7cd011db47&skt=2023-12-14T04%3A37%3A46Z&ske=2023-12-21T04%3A37%3A46Z&sks=b&skv=2021-06-08&sig=mgZGyetANr41Cd1HUUDQwG6w0kJ7qJKcCt32N/zrr1Y%3D\"\n        \n    \n            \n        \n            \n                \n        \n            type\n            \"image/tiff; application=geotiff; profile=cloud-optimized\"\n        \n    \n            \n        \n            \n                \n        \n            title\n            \"Biodiversity Intactness\"\n        \n    \n            \n        \n            \n                \n        \n            description\n            \"Terrestrial biodiversity intactness at 100m resolution\"\n        \n    \n            \n        \n            \n                \n        \n            version\n            \"v1\"\n        \n    \n            \n        \n            \n                \n        \n            raster:bands\n            [] 1 items\n        \n        \n            \n        \n            \n                \n        \n            0\n            \n        \n            \n                \n        \n            sampling\n            \"area\"\n        \n    \n            \n        \n            \n                \n        \n            data_type\n            \"float32\"\n        \n    \n            \n        \n            \n                \n        \n            spatial_resolution\n            100\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n    \n            \n        \n            \n                \n        \n            roles\n            [] 1 items\n        \n        \n            \n        \n            \n                \n        \n            0\n            \"data\"\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n    \n            \n        \n            \n                \n        \n            tilejson\n            \n        \n            \n                \n        \n            href\n            \"https://planetarycomputer.microsoft.com/api/data/v1/item/tilejson.json?collection=io-biodiversity&item=bii_2019_34.74464974521749_-115.38597824385106_cog&assets=data&tile_format=png&colormap_name=io-bii&rescale=0%2C1&expression=0.97%2A%28data_b1%2A%2A3.84%29&format=png\"\n        \n    \n            \n        \n            \n                \n        \n            type\n            \"application/json\"\n        \n    \n            \n        \n            \n                \n        \n            title\n            \"TileJSON with default rendering\"\n        \n    \n            \n        \n            \n                \n        \n            roles\n            [] 1 items\n        \n        \n            \n        \n            \n                \n        \n            0\n            \"tiles\"\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n    \n            \n        \n            \n                \n        \n            rendered_preview\n            \n        \n            \n                \n        \n            href\n            \"https://planetarycomputer.microsoft.com/api/data/v1/item/preview.png?collection=io-biodiversity&item=bii_2019_34.74464974521749_-115.38597824385106_cog&assets=data&tile_format=png&colormap_name=io-bii&rescale=0%2C1&expression=0.97%2A%28data_b1%2A%2A3.84%29&format=png\"\n        \n    \n            \n        \n            \n                \n        \n            type\n            \"image/png\"\n        \n    \n            \n        \n            \n                \n        \n            title\n            \"Rendered preview\"\n        \n    \n            \n        \n            \n                \n        \n            rel\n            \"preview\"\n        \n    \n            \n        \n            \n                \n        \n            roles\n            [] 1 items\n        \n        \n            \n        \n            \n                \n        \n            0\n            \"overview\"\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n    \n            \n        \n            \n                \n        \n            bbox\n            [] 4 items\n        \n        \n            \n        \n            \n                \n        \n            0\n            -115.3859782\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            1\n            27.565314\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            2\n            -108.2066425\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            3\n            34.7446497\n        \n    \n            \n        \n    \n        \n    \n            \n        \n            \n                \n        \n            stac_extensions\n            [] 3 items\n        \n        \n            \n        \n            \n                \n        \n            0\n            \"https://stac-extensions.github.io/projection/v1.0.0/schema.json\"\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            1\n            \"https://stac-extensions.github.io/raster/v1.1.0/schema.json\"\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            2\n            \"https://stac-extensions.github.io/version/v1.1.0/schema.json\"\n        \n    \n            \n        \n    \n        \n    \n            \n        \n            \n                \n        \n            collection\n            \"io-biodiversity\"\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            2\n            \n        \n            \n                \n        \n            type\n            \"Feature\"\n        \n    \n            \n        \n            \n                \n        \n            stac_version\n            \"1.0.0\"\n        \n    \n            \n        \n            \n                \n        \n            id\n            \"bii_2018_34.74464974521749_-115.38597824385106_cog\"\n        \n    \n            \n        \n            \n                \n        \n            properties\n            \n        \n            \n                \n        \n            datetime\n            None\n        \n    \n            \n        \n            \n                \n        \n            proj:epsg\n            4326\n        \n    \n            \n        \n            \n                \n        \n            proj:shape\n            [] 2 items\n        \n        \n            \n        \n            \n                \n        \n            0\n            7992\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            1\n            7992\n        \n    \n            \n        \n    \n        \n    \n            \n        \n            \n                \n        \n            end_datetime\n            \"2018-12-31T23:59:59Z\"\n        \n    \n            \n        \n            \n                \n        \n            proj:transform\n            [] 9 items\n        \n        \n            \n        \n            \n                \n        \n            0\n            0.0008983152841195215\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            1\n            0.0\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            2\n            -115.38597824385106\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            3\n            0.0\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            4\n            -0.0008983152841195215\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            5\n            34.74464974521749\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            6\n            0.0\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            7\n            0.0\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            8\n            1.0\n        \n    \n            \n        \n    \n        \n    \n            \n        \n            \n                \n        \n            start_datetime\n            \"2018-01-01T00:00:00Z\"\n        \n    \n            \n        \n    \n        \n    \n            \n        \n            \n                \n        \n            geometry\n            \n        \n            \n                \n        \n            type\n            \"Polygon\"\n        \n    \n            \n        \n            \n                \n        \n            coordinates\n            [] 1 items\n        \n        \n            \n        \n            \n                \n        \n            0\n            [] 10 items\n        \n        \n            \n        \n            \n                \n        \n            0\n            [] 2 items\n        \n        \n            \n        \n            \n                \n        \n            0\n            -114.7625474\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            1\n            27.565314\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            1\n            [] 2 items\n        \n        \n            \n        \n            \n                \n        \n            0\n            -108.2066425\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            1\n            27.565314\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            2\n            [] 2 items\n        \n        \n            \n        \n            \n                \n        \n            0\n            -108.2066425\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            1\n            34.7446497\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            3\n            [] 2 items\n        \n        \n            \n        \n            \n                \n        \n            0\n            -115.3859782\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            1\n            34.7446497\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            4\n            [] 2 items\n        \n        \n            \n        \n            \n                \n        \n            0\n            -115.3859782\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            1\n            29.5649638\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            5\n            [] 2 items\n        \n        \n            \n        \n            \n                \n        \n            0\n            -115.3581305\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            1\n            28.0791503\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            6\n            [] 2 items\n        \n        \n            \n        \n            \n                \n        \n            0\n            -115.2179933\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            1\n            27.8869109\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            7\n            [] 2 items\n        \n        \n            \n        \n            \n                \n        \n            0\n            -115.1775691\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            1\n            27.8491816\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            8\n            [] 2 items\n        \n        \n            \n        \n            \n                \n        \n            0\n            -115.0014993\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            1\n            27.7117394\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            9\n            [] 2 items\n        \n        \n            \n        \n            \n                \n        \n            0\n            -114.7625474\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            1\n            27.565314\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n    \n            \n        \n            \n                \n        \n            links\n            [] 5 items\n        \n        \n            \n        \n            \n                \n        \n            0\n            \n        \n            \n                \n        \n            rel\n            \"collection\"\n        \n    \n            \n        \n            \n                \n        \n            href\n            \"https://planetarycomputer.microsoft.com/api/stac/v1/collections/io-biodiversity\"\n        \n    \n            \n        \n            \n                \n        \n            type\n            \"application/json\"\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            1\n            \n        \n            \n                \n        \n            rel\n            \"parent\"\n        \n    \n            \n        \n            \n                \n        \n            href\n            \"https://planetarycomputer.microsoft.com/api/stac/v1/collections/io-biodiversity\"\n        \n    \n            \n        \n            \n                \n        \n            type\n            \"application/json\"\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            2\n            \n        \n            \n                \n        \n            rel\n            \"root\"\n        \n    \n            \n        \n            \n                \n        \n            href\n            \"https://planetarycomputer.microsoft.com/api/stac/v1\"\n        \n    \n            \n        \n            \n                \n        \n            type\n            \"application/json\"\n        \n    \n            \n        \n            \n                \n        \n            title\n            \"Microsoft Planetary Computer STAC API\"\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            3\n            \n        \n            \n                \n        \n            rel\n            \"self\"\n        \n    \n            \n        \n            \n                \n        \n            href\n            \"https://planetarycomputer.microsoft.com/api/stac/v1/collections/io-biodiversity/items/bii_2018_34.74464974521749_-115.38597824385106_cog\"\n        \n    \n            \n        \n            \n                \n        \n            type\n            \"application/geo+json\"\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            4\n            \n        \n            \n                \n        \n            rel\n            \"preview\"\n        \n    \n            \n        \n            \n                \n        \n            href\n            \"https://planetarycomputer.microsoft.com/api/data/v1/item/map?collection=io-biodiversity&item=bii_2018_34.74464974521749_-115.38597824385106_cog\"\n        \n    \n            \n        \n            \n                \n        \n            type\n            \"text/html\"\n        \n    \n            \n        \n            \n                \n        \n            title\n            \"Map of item\"\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n    \n            \n        \n            \n                \n        \n            assets\n            \n        \n            \n                \n        \n            data\n            \n        \n            \n                \n        \n            href\n            \"https://pcdata01euw.blob.core.windows.net/impact/bii-v1/bii_2018/bii_2018_34.74464974521749_-115.38597824385106_cog.tif?st=2023-12-13T04%3A53%3A48Z&se=2023-12-14T05%3A38%3A48Z&sp=rl&sv=2021-06-08&sr=c&skoid=c85c15d6-d1ae-42d4-af60-e2ca0f81359b&sktid=72f988bf-86f1-41af-91ab-2d7cd011db47&skt=2023-12-14T04%3A37%3A46Z&ske=2023-12-21T04%3A37%3A46Z&sks=b&skv=2021-06-08&sig=mgZGyetANr41Cd1HUUDQwG6w0kJ7qJKcCt32N/zrr1Y%3D\"\n        \n    \n            \n        \n            \n                \n        \n            type\n            \"image/tiff; application=geotiff; profile=cloud-optimized\"\n        \n    \n            \n        \n            \n                \n        \n            title\n            \"Biodiversity Intactness\"\n        \n    \n            \n        \n            \n                \n        \n            description\n            \"Terrestrial biodiversity intactness at 100m resolution\"\n        \n    \n            \n        \n            \n                \n        \n            version\n            \"v1\"\n        \n    \n            \n        \n            \n                \n        \n            raster:bands\n            [] 1 items\n        \n        \n            \n        \n            \n                \n        \n            0\n            \n        \n            \n                \n        \n            sampling\n            \"area\"\n        \n    \n            \n        \n            \n                \n        \n            data_type\n            \"float32\"\n        \n    \n            \n        \n            \n                \n        \n            spatial_resolution\n            100\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n    \n            \n        \n            \n                \n        \n            roles\n            [] 1 items\n        \n        \n            \n        \n            \n                \n        \n            0\n            \"data\"\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n    \n            \n        \n            \n                \n        \n            tilejson\n            \n        \n            \n                \n        \n            href\n            \"https://planetarycomputer.microsoft.com/api/data/v1/item/tilejson.json?collection=io-biodiversity&item=bii_2018_34.74464974521749_-115.38597824385106_cog&assets=data&tile_format=png&colormap_name=io-bii&rescale=0%2C1&expression=0.97%2A%28data_b1%2A%2A3.84%29&format=png\"\n        \n    \n            \n        \n            \n                \n        \n            type\n            \"application/json\"\n        \n    \n            \n        \n            \n                \n        \n            title\n            \"TileJSON with default rendering\"\n        \n    \n            \n        \n            \n                \n        \n            roles\n            [] 1 items\n        \n        \n            \n        \n            \n                \n        \n            0\n            \"tiles\"\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n    \n            \n        \n            \n                \n        \n            rendered_preview\n            \n        \n            \n                \n        \n            href\n            \"https://planetarycomputer.microsoft.com/api/data/v1/item/preview.png?collection=io-biodiversity&item=bii_2018_34.74464974521749_-115.38597824385106_cog&assets=data&tile_format=png&colormap_name=io-bii&rescale=0%2C1&expression=0.97%2A%28data_b1%2A%2A3.84%29&format=png\"\n        \n    \n            \n        \n            \n                \n        \n            type\n            \"image/png\"\n        \n    \n            \n        \n            \n                \n        \n            title\n            \"Rendered preview\"\n        \n    \n            \n        \n            \n                \n        \n            rel\n            \"preview\"\n        \n    \n            \n        \n            \n                \n        \n            roles\n            [] 1 items\n        \n        \n            \n        \n            \n                \n        \n            0\n            \"overview\"\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n    \n            \n        \n            \n                \n        \n            bbox\n            [] 4 items\n        \n        \n            \n        \n            \n                \n        \n            0\n            -115.3859782\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            1\n            27.565314\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            2\n            -108.2066425\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            3\n            34.7446497\n        \n    \n            \n        \n    \n        \n    \n            \n        \n            \n                \n        \n            stac_extensions\n            [] 3 items\n        \n        \n            \n        \n            \n                \n        \n            0\n            \"https://stac-extensions.github.io/projection/v1.0.0/schema.json\"\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            1\n            \"https://stac-extensions.github.io/raster/v1.1.0/schema.json\"\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            2\n            \"https://stac-extensions.github.io/version/v1.1.0/schema.json\"\n        \n    \n            \n        \n    \n        \n    \n            \n        \n            \n                \n        \n            collection\n            \"io-biodiversity\"\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            3\n            \n        \n            \n                \n        \n            type\n            \"Feature\"\n        \n    \n            \n        \n            \n                \n        \n            stac_version\n            \"1.0.0\"\n        \n    \n            \n        \n            \n                \n        \n            id\n            \"bii_2017_34.74464974521749_-115.38597824385106_cog\"\n        \n    \n            \n        \n            \n                \n        \n            properties\n            \n        \n            \n                \n        \n            datetime\n            None\n        \n    \n            \n        \n            \n                \n        \n            proj:epsg\n            4326\n        \n    \n            \n        \n            \n                \n        \n            proj:shape\n            [] 2 items\n        \n        \n            \n        \n            \n                \n        \n            0\n            7992\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            1\n            7992\n        \n    \n            \n        \n    \n        \n    \n            \n        \n            \n                \n        \n            end_datetime\n            \"2017-12-31T23:59:59Z\"\n        \n    \n            \n        \n            \n                \n        \n            proj:transform\n            [] 9 items\n        \n        \n            \n        \n            \n                \n        \n            0\n            0.0008983152841195215\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            1\n            0.0\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            2\n            -115.38597824385106\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            3\n            0.0\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            4\n            -0.0008983152841195215\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            5\n            34.74464974521749\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            6\n            0.0\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            7\n            0.0\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            8\n            1.0\n        \n    \n            \n        \n    \n        \n    \n            \n        \n            \n                \n        \n            start_datetime\n            \"2017-01-01T00:00:00Z\"\n        \n    \n            \n        \n    \n        \n    \n            \n        \n            \n                \n        \n            geometry\n            \n        \n            \n                \n        \n            type\n            \"Polygon\"\n        \n    \n            \n        \n            \n                \n        \n            coordinates\n            [] 1 items\n        \n        \n            \n        \n            \n                \n        \n            0\n            [] 10 items\n        \n        \n            \n        \n            \n                \n        \n            0\n            [] 2 items\n        \n        \n            \n        \n            \n                \n        \n            0\n            -114.7616491\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            1\n            27.565314\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            1\n            [] 2 items\n        \n        \n            \n        \n            \n                \n        \n            0\n            -108.2066425\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            1\n            27.565314\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            2\n            [] 2 items\n        \n        \n            \n        \n            \n                \n        \n            0\n            -108.2066425\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            1\n            34.7446497\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            3\n            [] 2 items\n        \n        \n            \n        \n            \n                \n        \n            0\n            -115.3859782\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            1\n            34.7446497\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            4\n            [] 2 items\n        \n        \n            \n        \n            \n                \n        \n            0\n            -115.3859782\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            1\n            29.5649638\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            5\n            [] 2 items\n        \n        \n            \n        \n            \n                \n        \n            0\n            -115.3581305\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            1\n            28.0791503\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            6\n            [] 2 items\n        \n        \n            \n        \n            \n                \n        \n            0\n            -115.2036202\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            1\n            27.8662496\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            7\n            [] 2 items\n        \n        \n            \n        \n            \n                \n        \n            0\n            -115.0068892\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            1\n            27.7180276\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            8\n            [] 2 items\n        \n        \n            \n        \n            \n                \n        \n            0\n            -114.8469891\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            1\n            27.6174163\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            9\n            [] 2 items\n        \n        \n            \n        \n            \n                \n        \n            0\n            -114.7616491\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            1\n            27.565314\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n    \n            \n        \n            \n                \n        \n            links\n            [] 5 items\n        \n        \n            \n        \n            \n                \n        \n            0\n            \n        \n            \n                \n        \n            rel\n            \"collection\"\n        \n    \n            \n        \n            \n                \n        \n            href\n            \"https://planetarycomputer.microsoft.com/api/stac/v1/collections/io-biodiversity\"\n        \n    \n            \n        \n            \n                \n        \n            type\n            \"application/json\"\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            1\n            \n        \n            \n                \n        \n            rel\n            \"parent\"\n        \n    \n            \n        \n            \n                \n        \n            href\n            \"https://planetarycomputer.microsoft.com/api/stac/v1/collections/io-biodiversity\"\n        \n    \n            \n        \n            \n                \n        \n            type\n            \"application/json\"\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            2\n            \n        \n            \n                \n        \n            rel\n            \"root\"\n        \n    \n            \n        \n            \n                \n        \n            href\n            \"https://planetarycomputer.microsoft.com/api/stac/v1\"\n        \n    \n            \n        \n            \n                \n        \n            type\n            \"application/json\"\n        \n    \n            \n        \n            \n                \n        \n            title\n            \"Microsoft Planetary Computer STAC API\"\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            3\n            \n        \n            \n                \n        \n            rel\n            \"self\"\n        \n    \n            \n        \n            \n                \n        \n            href\n            \"https://planetarycomputer.microsoft.com/api/stac/v1/collections/io-biodiversity/items/bii_2017_34.74464974521749_-115.38597824385106_cog\"\n        \n    \n            \n        \n            \n                \n        \n            type\n            \"application/geo+json\"\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            4\n            \n        \n            \n                \n        \n            rel\n            \"preview\"\n        \n    \n            \n        \n            \n                \n        \n            href\n            \"https://planetarycomputer.microsoft.com/api/data/v1/item/map?collection=io-biodiversity&item=bii_2017_34.74464974521749_-115.38597824385106_cog\"\n        \n    \n            \n        \n            \n                \n        \n            type\n            \"text/html\"\n        \n    \n            \n        \n            \n                \n        \n            title\n            \"Map of item\"\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n    \n            \n        \n            \n                \n        \n            assets\n            \n        \n            \n                \n        \n            data\n            \n        \n            \n                \n        \n            href\n            \"https://pcdata01euw.blob.core.windows.net/impact/bii-v1/bii_2017/bii_2017_34.74464974521749_-115.38597824385106_cog.tif?st=2023-12-13T04%3A53%3A48Z&se=2023-12-14T05%3A38%3A48Z&sp=rl&sv=2021-06-08&sr=c&skoid=c85c15d6-d1ae-42d4-af60-e2ca0f81359b&sktid=72f988bf-86f1-41af-91ab-2d7cd011db47&skt=2023-12-14T04%3A37%3A46Z&ske=2023-12-21T04%3A37%3A46Z&sks=b&skv=2021-06-08&sig=mgZGyetANr41Cd1HUUDQwG6w0kJ7qJKcCt32N/zrr1Y%3D\"\n        \n    \n            \n        \n            \n                \n        \n            type\n            \"image/tiff; application=geotiff; profile=cloud-optimized\"\n        \n    \n            \n        \n            \n                \n        \n            title\n            \"Biodiversity Intactness\"\n        \n    \n            \n        \n            \n                \n        \n            description\n            \"Terrestrial biodiversity intactness at 100m resolution\"\n        \n    \n            \n        \n            \n                \n        \n            version\n            \"v1\"\n        \n    \n            \n        \n            \n                \n        \n            raster:bands\n            [] 1 items\n        \n        \n            \n        \n            \n                \n        \n            0\n            \n        \n            \n                \n        \n            sampling\n            \"area\"\n        \n    \n            \n        \n            \n                \n        \n            data_type\n            \"float32\"\n        \n    \n            \n        \n            \n                \n        \n            spatial_resolution\n            100\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n    \n            \n        \n            \n                \n        \n            roles\n            [] 1 items\n        \n        \n            \n        \n            \n                \n        \n            0\n            \"data\"\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n    \n            \n        \n            \n                \n        \n            tilejson\n            \n        \n            \n                \n        \n            href\n            \"https://planetarycomputer.microsoft.com/api/data/v1/item/tilejson.json?collection=io-biodiversity&item=bii_2017_34.74464974521749_-115.38597824385106_cog&assets=data&tile_format=png&colormap_name=io-bii&rescale=0%2C1&expression=0.97%2A%28data_b1%2A%2A3.84%29&format=png\"\n        \n    \n            \n        \n            \n                \n        \n            type\n            \"application/json\"\n        \n    \n            \n        \n            \n                \n        \n            title\n            \"TileJSON with default rendering\"\n        \n    \n            \n        \n            \n                \n        \n            roles\n            [] 1 items\n        \n        \n            \n        \n            \n                \n        \n            0\n            \"tiles\"\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n    \n            \n        \n            \n                \n        \n            rendered_preview\n            \n        \n            \n                \n        \n            href\n            \"https://planetarycomputer.microsoft.com/api/data/v1/item/preview.png?collection=io-biodiversity&item=bii_2017_34.74464974521749_-115.38597824385106_cog&assets=data&tile_format=png&colormap_name=io-bii&rescale=0%2C1&expression=0.97%2A%28data_b1%2A%2A3.84%29&format=png\"\n        \n    \n            \n        \n            \n                \n        \n            type\n            \"image/png\"\n        \n    \n            \n        \n            \n                \n        \n            title\n            \"Rendered preview\"\n        \n    \n            \n        \n            \n                \n        \n            rel\n            \"preview\"\n        \n    \n            \n        \n            \n                \n        \n            roles\n            [] 1 items\n        \n        \n            \n        \n            \n                \n        \n            0\n            \"overview\"\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n    \n            \n        \n            \n                \n        \n            bbox\n            [] 4 items\n        \n        \n            \n        \n            \n                \n        \n            0\n            -115.3859782\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            1\n            27.565314\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            2\n            -108.2066425\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            3\n            34.7446497\n        \n    \n            \n        \n    \n        \n    \n            \n        \n            \n                \n        \n            stac_extensions\n            [] 3 items\n        \n        \n            \n        \n            \n                \n        \n            0\n            \"https://stac-extensions.github.io/projection/v1.0.0/schema.json\"\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            1\n            \"https://stac-extensions.github.io/raster/v1.1.0/schema.json\"\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            2\n            \"https://stac-extensions.github.io/version/v1.1.0/schema.json\"\n        \n    \n            \n        \n    \n        \n    \n            \n        \n            \n                \n        \n            collection\n            \"io-biodiversity\""
  },
  {
    "objectID": "posts/IO_Maricopa/phoenix_biodiversity.html#metadata-and-raster-access-and-exploration-for-the-2017-and-2020-stac-items",
    "href": "posts/IO_Maricopa/phoenix_biodiversity.html#metadata-and-raster-access-and-exploration-for-the-2017-and-2020-stac-items",
    "title": "Biodiversity in Phoenix, Arizona",
    "section": "",
    "text": "Code\n#get fourth item in the catalog search\nph_2017 = items[3]\n# get first item in the catalog search\nph_2020 = items[0]\n\n#Visualization Check\n#print item id and properties for 2017 and 2020 \n#ph_2017\n#ph_2020\n\n\n\n\n\n\n\n\nCode\n#plot rendered preview\nimage_2017 = Image(url=ph_2017.assets['rendered_preview'].href, width=500)\nimage_2017\n\n\n\n\n\n\n\n\n\n\nCode\n#plot rendered preiew\nimage_2020 = Image(url=ph_2020.assets['rendered_preview'].href, width=500)\nimage_2020\n\n\n\n\n\nThe raster data in our current items is within the “data” asset and can be accessed via its URL. We will open the raster directly using rioxr.open_rasterio()\n\n\nCode\nph_2017 = rioxr.open_rasterio(ph_2017.assets['data'].href)\nph_2020 = rioxr.open_rasterio(ph_2020.assets['data'].href)"
  },
  {
    "objectID": "posts/IO_Maricopa/phoenix_biodiversity.html#phoenix-subdivision-biodiversity-index-analysis",
    "href": "posts/IO_Maricopa/phoenix_biodiversity.html#phoenix-subdivision-biodiversity-index-analysis",
    "title": "Biodiversity in Phoenix, Arizona",
    "section": "",
    "text": "In order to study biodiversity loss, the biodiversity intactness index (BII)is employed which estimates how the average abundance of native terrestrial species in a region (2020) compares with their abundances before pronounced human impacts (2017). Area that has been lost with a BII of at least 0.75 or greater signifies an extreme biodiversity loss and is therefore used as a threshold in this analysis.\n\n\nCode\n#set threshold\nbi_threshold = 0.75\n\n#found the areas in which the BII was greater than 0.75\nabove_thresh_2017 = ph_2017 &gt;= bi_threshold \nabove_thresh_2020 = ph_2020 &gt;= bi_threshold \n\n#casted it as int. data array to accecss binary values \nabove_thresh_2017 = above_thresh_2017.astype(int) \nabove_thresh_2020 = above_thresh_2020.astype(int) \n\n#calculating the the total number of pixels in the phoenix subdivision for 2017 and 2020 \ntotal_2017 = np.sum(ph_2017) \ntotal_2020 = np.sum(ph_2020) \n\n#calculating the percentage of pixels with a BII of at least 0.75\npercent_2017 = (np.sum(above_thresh_2017 / total_2017)) * 100  \npercent_2020 = (np.sum(above_thresh_2020 / total_2020)) * 100\n\n#check: look at new variable \n#percent_2017\n#percent_2020\n\n#identify the lost pixels \nlost_pixels = above_thresh_2017 - above_thresh_2020 \nprint(np.sum(lost_pixels))\n\n#print percentage values for 2017 and 2020 \nprint(f\"Percentage of area with BII &gt;= 0.75 in 2017: {percent_2017:.2f}%\")\nprint(f\"Percentage of area with BII &gt;= 0.75 in 2020 {percent_2020:.2f}%\")"
  },
  {
    "objectID": "posts/IO_Maricopa/phoenix_biodiversity.html#data-wrangling-for-spatial-datasets",
    "href": "posts/IO_Maricopa/phoenix_biodiversity.html#data-wrangling-for-spatial-datasets",
    "title": "Biodiversity in Phoenix, Arizona",
    "section": "",
    "text": "In order to perform geospatial operations, it’s crucial to ensure that two spatial datasets are aligned in terms of their coordinate reference systems (CRS) and spatial extent. This alignment is necessary for accurate spatial analysis and overlays between vector and raster data.\n\n\nCode\n#make crs' the same \nphoenix = phoenix.to_crs(lost_pixels.rio.crs)\n\n#check to make sure crs' match\nphoenix.crs == lost_pixels.rio.crs\n\n#clipping the bii data to phoenix geometry \nlost_pixels = lost_pixels.rio.clip(phoenix.geometry, phoenix.crs) \n\n#clipping the ph_2020 data to phoenix geometry \nph_2020 = ph_2020.rio.clip(phoenix.geometry, phoenix.crs)\n\n#check\n#type(lost_pixels)\n#type(phoenix)\n#type(above_thresh_2017)\n\n\n/Users/katebecker/anaconda3/envs/mpc-env/lib/python3.11/site-packages/xarray/core/duck_array_ops.py:201: RuntimeWarning: invalid value encountered in cast\n  return data.astype(dtype, **kwargs)\n\n\n\n\nFor further analysis this step is necessary to effectively process raster data. This is done to clean up unnecessary information in the dataset, especially if you’re not performing analyses based on bands. Similarily, it simplifies the structure of the data, especially if you’re working with a single-band raster. This kind of data preprocessing is common in geospatial analysis workflows to ensure data consistency and relevance to the study area.\n\n\nCode\n# remove length 1 dimension (band)\nph_2020 = ph_2020.squeeze()\n\n# remove coordinates associated to band\nph_2020 = ph_2020.drop('band')\n\n#clipping the ph_2020 data to phoenix geometry \nph_2020 = ph_2020.rio.clip(phoenix.geometry, phoenix.crs)\n\n#check: plot the area showing BII &gt; 0.75 \nlost_pixels.plot() \n\n\n/Users/katebecker/anaconda3/envs/mpc-env/lib/python3.11/site-packages/xarray/plot/utils.py:245: RuntimeWarning: overflow encountered in scalar absolute\n  vlim = max(abs(vmin - center), abs(vmax - center))\n\n\n&lt;matplotlib.collections.QuadMesh at 0x1bae660d0&gt;"
  },
  {
    "objectID": "posts/IO_Maricopa/phoenix_biodiversity.html#visualization-showing-the-area-with-bii-0.75-in-2017-that-was-lost-by-2020",
    "href": "posts/IO_Maricopa/phoenix_biodiversity.html#visualization-showing-the-area-with-bii-0.75-in-2017-that-was-lost-by-2020",
    "title": "Biodiversity in Phoenix, Arizona",
    "section": "",
    "text": "In order to effectively complete this analysis and create a meaningful and insightful map, all of the relevant data must be compiled together.\n\n\nCode\nfig, ax = plt.subplots(figsize=(12, 8))\nax.axis('off')\n\nphoenix.plot(ax=ax) #plot phoenix shapefile \nph_2020.plot(ax=ax) #plot 2020 raster\nlost_pixels.where(lost_pixels == 1).plot(ax=ax,  add_colorbar=False) #plotting the area with BII &gt;= 0.75 in 2017 that was lost by 2020\n\n\nplt.title('Maricopa County with Areas of Extreme Biodiversity Loss') #added a title \n\nplt.show() #printed map \n\n\n#get rid of bar on left"
  },
  {
    "objectID": "posts/IO_Maricopa/phoenix_biodiversity.html#findings",
    "href": "posts/IO_Maricopa/phoenix_biodiversity.html#findings",
    "title": "Biodiversity in Phoenix, Arizona",
    "section": "",
    "text": "Now that the data processing is over we can plot the phoenix shapefile, the 2020 raster, and the raster containing the biodiversity loss from 2017 to 2020. It appears that there was a significant loss in biodiversity within Maricopa County as a result of land development. The areas with a neon yellow hue are those with BII&gt;=0.75 in 2017 that were lost by 2020. Over a three year period, this loss is catastrophic for such a small temporal scale. This analysis can be further explored to measure biodiversity levels as climate change and human encroachment continues."
  },
  {
    "objectID": "projects.html",
    "href": "projects.html",
    "title": "My Projects",
    "section": "",
    "text": "My Projects"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "Education\nMaster of Environmental Data Science (June 2024) Bren School of Environmental Science & Management –- University of California, Santa Barbara (UCSB)\nBachelor of Science in Environmental Studies (June 2023) University of California, Santa Barbara (UCSB) Concentrations: Environmental Policy, Sustainability, Climate Change, and Conservation\n\n\nExperience\nInternational Academic Field Studies Program: Wildlands Studies Hawaii, Big Island, Hawaii (3/21–5/21); Focus on marine and terrestrial field research as well as indigenous marine management and food systems\nEliason Lab University of California, Santa Barba Eliason Lab – UCSB, Santa Barbara, CA • Investigated thermal tolerance of fishes under fluctuating temperatures and varying diet quality using cardiovascular performance as a metric\nSummer Intern, Eliason Lab UCSB, Santa Barbara, CA • Investigation of parasite load, Euhaplorchis californiensis, in the brain regions of California killifish, Fundulus parvipinnis, as it pertains to thermal tolerance • Awarded UCSB Coastal Fund\n\n\nTechnical Skills\nSpatial Mapping in ArcGIS, Statistical Analysis and Data Visualization in R Studio, Python, Google Workspace, Scientific Writing, R, Python, SQL, Git, (Basic) Command Line, Microsoft Office (Word, Excel, PowerPoint), Java, HTML, and CSS\n\n\nResearch Qualifications\nIACUC Training (Fish), CITI Wildlife Research, CITI Working with Fish in Research Settings\n\n\nCertification\nPADI Open Water Diver\n\n\nAdditional Education\nUniversity of Queensland, Australia UCEAP Study Abroad Program (Winter 2021 and Spring 2021); Accepted twice into competitive academic program but canceled due to COVID-19; Marine Biology and Terrestrial Ecology courses while working in conjunction with the Heron Island Research Station"
  },
  {
    "objectID": "about.html#education",
    "href": "about.html#education",
    "title": "About",
    "section": "",
    "text": "Master of Environmental Data Science (June 2024) Bren School of Environmental Science & Management –- University of California, Santa Barbara (UCSB)\nBachelor of Science in Environmental Studies (June 2023) University of California, Santa Barbara (UCSB) Concentrations: Environmental Policy, Sustainability, Climate Change, and Conservation"
  },
  {
    "objectID": "about.html#experience",
    "href": "about.html#experience",
    "title": "About",
    "section": "Experience",
    "text": "Experience\nInternational Academic Field Studies Program: Wildlands Studies Hawaii, Big Island, Hawaii (3/21–5/21); Focus on marine and terrestrial field research as well as indigenous marine management and food systems\nEliason Lab University of California, Santa Barba Eliason Lab – UCSB, Santa Barbara, CA • Investigated thermal tolerance of fishes under fluctuating temperatures and varying diet quality using cardiovascular performance as a metric\nSummer Intern, Eliason Lab UCSB, Santa Barbara, CA • Investigation of parasite load, Euhaplorchis californiensis, in the brain regions of California killifish, Fundulus parvipinnis, as it pertains to thermal tolerance • Awarded UCSB Coastal Fund"
  },
  {
    "objectID": "about.html#skills",
    "href": "about.html#skills",
    "title": "About",
    "section": "Skills",
    "text": "Skills"
  },
  {
    "objectID": "about.html#technical",
    "href": "about.html#technical",
    "title": "About",
    "section": "Technical",
    "text": "Technical\nSpatial Mapping in ArcGIS, Statistical Analysis and Data Visualization in R Studio, Python, Google Workspace, Scientific Writing, R, Python, SQL, Git, (Basic) Command Line, Microsoft Office (Word, Excel, PowerPoint), Java, HTML, and CSS"
  },
  {
    "objectID": "about.html#research-qualifications",
    "href": "about.html#research-qualifications",
    "title": "About",
    "section": "Research Qualifications",
    "text": "Research Qualifications\nIACUC Training (Fish), CITI Wildlife Research, CITI Working with Fish in Research Settings"
  },
  {
    "objectID": "about.html#certification",
    "href": "about.html#certification",
    "title": "About",
    "section": "Certification",
    "text": "Certification\nPADI Open Water Diver"
  },
  {
    "objectID": "about.html#additional-education",
    "href": "about.html#additional-education",
    "title": "About",
    "section": "Additional Education",
    "text": "Additional Education\nUniversity of Queensland, Australia UCEAP Study Abroad Program (Winter 2021 and Spring 2021); Accepted twice into competitive academic program but canceled due to COVID-19; Marine Biology and Terrestrial Ecology courses while working in conjunction with the Heron Island Research Station"
  },
  {
    "objectID": "practice-markdown.html",
    "href": "practice-markdown.html",
    "title": "Here is my level one header",
    "section": "",
    "text": "Here is my level one header\nHere is my first paragraph\nHere is my second paragraph, where you can read more about MEDS.\nThis is very important text!"
  },
  {
    "objectID": "posts/Pumpkin/Lab1-ML.html",
    "href": "posts/Pumpkin/Lab1-ML.html",
    "title": "Pumpkin Market",
    "section": "",
    "text": "The data you just loaded includes 1757 lines of data about the market for pumpkins, sorted into groupings by city. This is raw data extracted from the Specialty Crops Terminal Markets Standard Reports distributed by the United States Department of Agriculture.\nYou are loading a pumpkin data set in order to ask questions of it:\nWhen is the best time to buy pumpkins?\nWhat price can I expect of a case of miniature pumpkins?\nShould I buy them in half-bushel baskets or by the 1 1/9 bushel box?\n\n\n\n#examine data\nglimpse(dat)\n\nRows: 1,757\nColumns: 27\n$ ...1              &lt;dbl&gt; 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 1…\n$ `City Name`       &lt;chr&gt; \"BALTIMORE\", \"BALTIMORE\", \"BALTIMORE\", \"BALTIMORE\", …\n$ Type              &lt;chr&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, …\n$ Package           &lt;chr&gt; \"24 inch bins\", \"24 inch bins\", \"24 inch bins\", \"24 …\n$ Variety           &lt;chr&gt; NA, NA, \"HOWDEN TYPE\", \"HOWDEN TYPE\", \"HOWDEN TYPE\",…\n$ `Sub Variety`     &lt;chr&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, …\n$ Grade             &lt;lgl&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, …\n$ Date              &lt;chr&gt; \"4/29/17\", \"5/6/17\", \"9/24/16\", \"9/24/16\", \"11/5/16\"…\n$ `Low Price`       &lt;dbl&gt; 270, 270, 160, 160, 90, 90, 160, 160, 160, 160, 160,…\n$ `High Price`      &lt;dbl&gt; 280, 280, 160, 160, 100, 100, 170, 160, 170, 160, 17…\n$ `Mostly Low`      &lt;dbl&gt; 270, 270, 160, 160, 90, 90, 160, 160, 160, 160, 160,…\n$ `Mostly High`     &lt;dbl&gt; 280, 280, 160, 160, 100, 100, 170, 160, 170, 160, 17…\n$ Origin            &lt;chr&gt; \"MARYLAND\", \"MARYLAND\", \"DELAWARE\", \"VIRGINIA\", \"MAR…\n$ `Origin District` &lt;chr&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, …\n$ `Item Size`       &lt;chr&gt; \"lge\", \"lge\", \"med\", \"med\", \"lge\", \"lge\", \"med\", \"lg…\n$ Color             &lt;chr&gt; NA, NA, \"ORANGE\", \"ORANGE\", \"ORANGE\", \"ORANGE\", \"ORA…\n$ Environment       &lt;lgl&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, …\n$ `Unit of Sale`    &lt;chr&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, …\n$ Quality           &lt;lgl&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, …\n$ Condition         &lt;lgl&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, …\n$ Appearance        &lt;lgl&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, …\n$ Storage           &lt;lgl&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, …\n$ Crop              &lt;lgl&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, …\n$ Repack            &lt;chr&gt; \"E\", \"E\", \"N\", \"N\", \"N\", \"N\", \"N\", \"N\", \"N\", \"N\", \"N…\n$ `Trans Mode`      &lt;lgl&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, …\n$ ...26             &lt;lgl&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, …\n$ ...27             &lt;chr&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, …\n\n\n\n# Clean names to the snake_case convention\n\npumpkins &lt;- dat %&gt;% clean_names(case = \"snake\")\n\n# Return column names\n\npumpkins %&gt;% names()\n\n [1] \"x1\"              \"city_name\"       \"type\"            \"package\"        \n [5] \"variety\"         \"sub_variety\"     \"grade\"           \"date\"           \n [9] \"low_price\"       \"high_price\"      \"mostly_low\"      \"mostly_high\"    \n[13] \"origin\"          \"origin_district\" \"item_size\"       \"color\"          \n[17] \"environment\"     \"unit_of_sale\"    \"quality\"         \"condition\"      \n[21] \"appearance\"      \"storage\"         \"crop\"            \"repack\"         \n[25] \"trans_mode\"      \"x26\"             \"x27\"            \n\n\n\n\n\n\n#df wrangling selecting for variety, city_name, package, low_price, high_price, and date variables\npumpkins &lt;- pumpkins %&gt;% select(variety, city_name, package, low_price, high_price, date)\n\n\n## Print data set\npumpkins %&gt;% slice_head(n = 5)\n\n# A tibble: 5 × 6\n  variety     city_name package      low_price high_price date   \n  &lt;chr&gt;       &lt;chr&gt;     &lt;chr&gt;            &lt;dbl&gt;      &lt;dbl&gt; &lt;chr&gt;  \n1 &lt;NA&gt;        BALTIMORE 24 inch bins       270        280 4/29/17\n2 &lt;NA&gt;        BALTIMORE 24 inch bins       270        280 5/6/17 \n3 HOWDEN TYPE BALTIMORE 24 inch bins       160        160 9/24/16\n4 HOWDEN TYPE BALTIMORE 24 inch bins       160        160 9/24/16\n5 HOWDEN TYPE BALTIMORE 24 inch bins        90        100 11/5/16\n\n\n\n## Load lubridate\n\nlibrary(lubridate)\n\n# Extract the month and day from the dates and add as new columns\npumpkins &lt;- pumpkins %&gt;%\n  mutate(date = mdy(date),  \n         day = yday(date),\n         month = month(date))\npumpkins %&gt;% \n  select(-day)\n\n# A tibble: 1,757 × 7\n   variety     city_name package      low_price high_price date       month\n   &lt;chr&gt;       &lt;chr&gt;     &lt;chr&gt;            &lt;dbl&gt;      &lt;dbl&gt; &lt;date&gt;     &lt;dbl&gt;\n 1 &lt;NA&gt;        BALTIMORE 24 inch bins       270        280 2017-04-29     4\n 2 &lt;NA&gt;        BALTIMORE 24 inch bins       270        280 2017-05-06     5\n 3 HOWDEN TYPE BALTIMORE 24 inch bins       160        160 2016-09-24     9\n 4 HOWDEN TYPE BALTIMORE 24 inch bins       160        160 2016-09-24     9\n 5 HOWDEN TYPE BALTIMORE 24 inch bins        90        100 2016-11-05    11\n 6 HOWDEN TYPE BALTIMORE 24 inch bins        90        100 2016-11-12    11\n 7 HOWDEN TYPE BALTIMORE 36 inch bins       160        170 2016-09-24     9\n 8 HOWDEN TYPE BALTIMORE 36 inch bins       160        160 2016-09-24     9\n 9 HOWDEN TYPE BALTIMORE 36 inch bins       160        170 2016-10-01    10\n10 HOWDEN TYPE BALTIMORE 36 inch bins       160        160 2016-10-01    10\n# ℹ 1,747 more rows\n\n## View the first 7 rows\n\npumpkins %&gt;% slice_head(n = 7)\n\n# A tibble: 7 × 8\n  variety     city_name package      low_price high_price date         day month\n  &lt;chr&gt;       &lt;chr&gt;     &lt;chr&gt;            &lt;dbl&gt;      &lt;dbl&gt; &lt;date&gt;     &lt;dbl&gt; &lt;dbl&gt;\n1 &lt;NA&gt;        BALTIMORE 24 inch bins       270        280 2017-04-29   119     4\n2 &lt;NA&gt;        BALTIMORE 24 inch bins       270        280 2017-05-06   126     5\n3 HOWDEN TYPE BALTIMORE 24 inch bins       160        160 2016-09-24   268     9\n4 HOWDEN TYPE BALTIMORE 24 inch bins       160        160 2016-09-24   268     9\n5 HOWDEN TYPE BALTIMORE 24 inch bins        90        100 2016-11-05   310    11\n6 HOWDEN TYPE BALTIMORE 24 inch bins        90        100 2016-11-12   317    11\n7 HOWDEN TYPE BALTIMORE 36 inch bins       160        170 2016-09-24   268     9\n\n\nThere are two column dealing with price, high and low. Let’s combine them into a single average price column.\n\n# Create a new column price\npumpkins &lt;- pumpkins %&gt;% \n  mutate(price = (low_price+ high_price)/2)\n\nLet’s take a look at pumpkins sales throughout the year.\nQuestion 1: Create a scatter plot using price on the y-axis and day on the x-axis.\n\n# Make a scatter plot of month and price\n\nggplot(data = pumpkins, aes(x = day, y = price)) +\n  geom_point() +\n  ggtitle(\"Pumpkin Sales Throughout the Year\")\n\n\n\n\nNow, before we go any further, let’s take another look at the data. Notice anything odd?\nFrom day 225 to 365 there appears to be a much larger range in pumpkin prices rather than any other time of year which can be explained by the holiday season and therefore there are more configurations of pumpkins that are sold at that time of year. For the rest of the year, the pumpkin price remains generally the same at around 225 to 275.\nThat’s right: pumpkins are sold in many different configurations. Some are sold in 1 1/9 bushel measures, and some in 1/2 bushel measures, some per pumpkin, some per pound, and some in big boxes with varying widths.\nLet’s verify this:\n\n# Verify the distinct observations in Package column\npumpkins %&gt;% \n  distinct(package)\n\n# A tibble: 15 × 1\n   package             \n   &lt;chr&gt;               \n 1 24 inch bins        \n 2 36 inch bins        \n 3 50 lb sacks         \n 4 1 1/9 bushel cartons\n 5 1/2 bushel cartons  \n 6 1 1/9 bushel crates \n 7 bushel cartons      \n 8 bins                \n 9 35 lb cartons       \n10 each                \n11 20 lb cartons       \n12 50 lb cartons       \n13 40 lb cartons       \n14 bushel baskets      \n15 22 lb cartons       \n\n\nPumpkins seem to be very hard to weigh consistently, so let’s filter them by selecting only pumpkins with the string bushel in the package column and put this in a new data frame “new_pumpkins”.\n\n## View the first few rows of the data\n\npumpkins %&gt;% slice_head(n = 5)\n\n# A tibble: 5 × 9\n  variety    city_name package low_price high_price date         day month price\n  &lt;chr&gt;      &lt;chr&gt;     &lt;chr&gt;       &lt;dbl&gt;      &lt;dbl&gt; &lt;date&gt;     &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;\n1 &lt;NA&gt;       BALTIMORE 24 inc…       270        280 2017-04-29   119     4   275\n2 &lt;NA&gt;       BALTIMORE 24 inc…       270        280 2017-05-06   126     5   275\n3 HOWDEN TY… BALTIMORE 24 inc…       160        160 2016-09-24   268     9   160\n4 HOWDEN TY… BALTIMORE 24 inc…       160        160 2016-09-24   268     9   160\n5 HOWDEN TY… BALTIMORE 24 inc…        90        100 2016-11-05   310    11    95\n\npumpkins %&gt;% distinct(package)\n\n# A tibble: 15 × 1\n   package             \n   &lt;chr&gt;               \n 1 24 inch bins        \n 2 36 inch bins        \n 3 50 lb sacks         \n 4 1 1/9 bushel cartons\n 5 1/2 bushel cartons  \n 6 1 1/9 bushel crates \n 7 bushel cartons      \n 8 bins                \n 9 35 lb cartons       \n10 each                \n11 20 lb cartons       \n12 50 lb cartons       \n13 40 lb cartons       \n14 bushel baskets      \n15 22 lb cartons       \n\n\nQuestion 2: Use a combination of dplyr::filter() and stringr::str_detect() to achieve what we want.\n\n# Retain only pumpkins with \"bushel\" in the package column\n#bushel &lt;- pumpkins %&gt;%\n  #select(package = \"bushel\")\n\nnew_pumpkins &lt;- pumpkins %&gt;% \n    filter(str_detect(package, \"bushel\"))\n\n\n# Get the dimensions of the new data\ndim(new_pumpkins)\n\n[1] 415   9\n\n# View a few rows of the new data\nnew_pumpkins %&gt;% \n  slice_head(n = 10)\n\n# A tibble: 10 × 9\n   variety  city_name package  low_price high_price date         day month price\n   &lt;chr&gt;    &lt;chr&gt;     &lt;chr&gt;        &lt;dbl&gt;      &lt;dbl&gt; &lt;date&gt;     &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;\n 1 PIE TYPE BALTIMORE 1 1/9 b…        15       15   2016-09-24   268     9  15  \n 2 PIE TYPE BALTIMORE 1 1/9 b…        18       18   2016-09-24   268     9  18  \n 3 PIE TYPE BALTIMORE 1 1/9 b…        18       18   2016-10-01   275    10  18  \n 4 PIE TYPE BALTIMORE 1 1/9 b…        17       17   2016-10-01   275    10  17  \n 5 PIE TYPE BALTIMORE 1 1/9 b…        15       15   2016-10-08   282    10  15  \n 6 PIE TYPE BALTIMORE 1 1/9 b…        18       18   2016-10-08   282    10  18  \n 7 PIE TYPE BALTIMORE 1 1/9 b…        17       17   2016-10-08   282    10  17  \n 8 PIE TYPE BALTIMORE 1 1/9 b…        17       18.5 2016-10-08   282    10  17.8\n 9 PIE TYPE BALTIMORE 1 1/9 b…        15       15   2016-10-15   289    10  15  \n10 PIE TYPE BALTIMORE 1 1/9 b…        17       17   2016-10-15   289    10  17  \n\n\nYou should see that we have narrowed down to 415 rows of data containing pumpkins measured in bushels.\nBut wait! There’s one more thing to do.\nDid you notice that the bushel amount varies per row? You need to normalize the pricing so that you show the pricing per bushel, not per 1 1/9 or 1/2 bushel. Time to do some math to standardize it.\nWe’ll use the function case_when() to mutate the Price column depending on some conditions. case_when() allows you to vectorize multiple if_else()statements.\n\n# Convert the price if the Package contains fractional bushel values\nnew_pumpkins &lt;- new_pumpkins %&gt;% \n  mutate(price = case_when(\n    str_detect(package, \"1 1/9\") ~ price/(1.1),\n    str_detect(package, \"1/2\") ~ price*2,\n    TRUE ~ price))\n\n# View the first few rows of the data\nnew_pumpkins %&gt;% \n  slice_head(n = 30)\n\n# A tibble: 30 × 9\n   variety  city_name package  low_price high_price date         day month price\n   &lt;chr&gt;    &lt;chr&gt;     &lt;chr&gt;        &lt;dbl&gt;      &lt;dbl&gt; &lt;date&gt;     &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;\n 1 PIE TYPE BALTIMORE 1 1/9 b…        15       15   2016-09-24   268     9  13.6\n 2 PIE TYPE BALTIMORE 1 1/9 b…        18       18   2016-09-24   268     9  16.4\n 3 PIE TYPE BALTIMORE 1 1/9 b…        18       18   2016-10-01   275    10  16.4\n 4 PIE TYPE BALTIMORE 1 1/9 b…        17       17   2016-10-01   275    10  15.5\n 5 PIE TYPE BALTIMORE 1 1/9 b…        15       15   2016-10-08   282    10  13.6\n 6 PIE TYPE BALTIMORE 1 1/9 b…        18       18   2016-10-08   282    10  16.4\n 7 PIE TYPE BALTIMORE 1 1/9 b…        17       17   2016-10-08   282    10  15.5\n 8 PIE TYPE BALTIMORE 1 1/9 b…        17       18.5 2016-10-08   282    10  16.1\n 9 PIE TYPE BALTIMORE 1 1/9 b…        15       15   2016-10-15   289    10  13.6\n10 PIE TYPE BALTIMORE 1 1/9 b…        17       17   2016-10-15   289    10  15.5\n# ℹ 20 more rows\n\n\n\n\n\n\n# Set theme\ntheme_set(theme_light())\n\n# Make a scatter plot of day and price\nnew_pumpkins %&gt;% \n  ggplot(mapping = aes(x = day, y = price)) +\n  geom_point(size = 1.6) +\n  ggtitle(\"Pumpkin Sales Throughout the Year\")\n\n\n\n\nQuestion 3: Is this a useful plot? Does anything about it surprise you?\nThis is not a useful plot. It’s clearly evident that prices range broadly throughout the year after selecting for bushels, a better way to visualize this data for our viewers is to find the mean price for each month.\nHow do we make it more useful? To get charts to display useful data, you usually need to group the data somehow.\nQuestion 4: Group the pumpkins into groups based on the month column and then find the mean price for each month. Plot the results with a bar plot.\nHint: use dplyr::group_by() %&gt;% summarize()\n\n# Find the average price of pumpkins per month then plot a bar chart\npumpkins %&gt;%\n  group_by(month) %&gt;% \n  summarise(mean_price = mean(price)) %&gt;% \n  ggplot(aes(x = month, y = mean_price)) +\n  geom_col(fill = \"midnightblue\", alpha = 0.7) +\n  ylab(\"Pumpkin Price\") +\n  ggtitle(\"Mean Pumpkin Price for Each Month\")\n\n\n\n\n#Preprocessing data for modelling using recipes\nWhat if we wanted to predict the price of a pumpkin based on the city or package columns which are of type character? How could we find the correlation between, say, package and price?\nMachine learning models work best with numeric features rather than text values, so you generally need to convert categorical features into numeric representations.\nThis means that we have to find a way to reformat our predictors to make them easier for a model to use effectively, a process known as feature engineering.\nDifferent models have different preprocessing requirements. For instance, least squares requires encoding categorical variables such as month, variety and city_name. This simply involves translating a column with categorical values into one or more numeric columns that take the place of the original.\nNow let’s introduce another useful tidymodels package: recipes - which will help you preprocess data before training your mode. A recipe is an object that defines what steps should be applied to a data set in order to get it ready for modelling.\nNow, let’s create a recipe that prepares our data for modelling by substituting a unique integer for all the observations in the predictor columns:\n\n# Specify a recipe\npumpkins_recipe &lt;- recipe(price ~ ., data = new_pumpkins) %&gt;%  #the dot means adding all x variables together to yield price \n  step_integer(all_predictors(), zero_based = TRUE) #new data creates a specific recipe coverting new data into set of integers\n\n\n# Print out the recipe\npumpkins_recipe\n\n\n\n\n── Recipe ──────────────────────────────────────────────────────────────────────\n\n\n\n\n\n── Inputs \n\n\nNumber of variables by role\n\n\noutcome:   1\npredictor: 8\n\n\n\n\n\n── Operations \n\n\n• Integer encoding for: all_predictors()\n\n\nOK, we created our first recipe that specifies an outcome (price) and its corresponding predictors and that all the predictor columns should be encoded into a set of integers. Let’s quickly break it down:\nThe call to recipe() with a formula tells the recipe the roles of the variables using new_pumpkins data as the reference. For instance the price column has been assigned an outcome role while the rest of the columns have been assigned a predictor role.\nstep_integer(all_predictors(), zero_based = TRUE) specifies that all the predictors should be converted into a set of integers with the numbering starting at 0.\nHow can we confirm that the recipe is doing what we intend? Once your recipe is defined, you can estimate the parameters required to preprocess the data, and then extract the processed data. You don’t typically need to do this when you use tidymodels (we’ll see the normal convention in just a minute with workflows) but its a good sanity check for confirming that recipes are doing what you expect.\nFor that, you’ll need two more verbs: prep() and bake()\nprep(): estimates the required parameters from a training set that can be later applied to other data sets.\nbake(): takes a prepped recipe and applies the operations to any data set.\nNow let’s prep and bake our recipes to confirm that under the hood, the predictor columns will be first encoded before a model is fit.\n\n# Prep the recipe\npumpkins_prep &lt;- prep(pumpkins_recipe)\n\n# Bake the recipe to extract a preprocessed new_pumpkins data\nbaked_pumpkins &lt;- bake(pumpkins_prep, new_data = NULL)\n\n# Print out the baked data set\nbaked_pumpkins %&gt;% \n  slice_head(n = 10)\n\n# A tibble: 10 × 9\n   variety city_name package low_price high_price  date   day month price\n     &lt;int&gt;     &lt;int&gt;   &lt;int&gt;     &lt;int&gt;      &lt;int&gt; &lt;int&gt; &lt;int&gt; &lt;int&gt; &lt;dbl&gt;\n 1       3         1       0         5          3     0     5     1  13.6\n 2       3         1       0        10          7     0     5     1  16.4\n 3       3         1       0        10          7     6    11     2  16.4\n 4       3         1       0         9          6     6    11     2  15.5\n 5       3         1       0         5          3     7    12     2  13.6\n 6       3         1       0        10          7     7    12     2  16.4\n 7       3         1       0         9          6     7    12     2  15.5\n 8       3         1       0         9          8     7    12     2  16.1\n 9       3         1       0         5          3     8    13     2  13.6\n10       3         1       0         9          6     8    13     2  15.5\n\n\nThe processed data baked_pumpkins has all its predictors encoded confirming that indeed the preprocessing steps defined as our recipe will work as expected. This makes it harder for you to read but more intelligible for tidymodels. Take a look at how the observations have been mapped to numbers.\nQuestion 5: From looking at the baked_pumpkins tibble, how many total cities are represented in the data set?\nThere are 10 cities represented in this data set.\nbaked_pumpkins is a data frame that we can perform computations on. For instance, let’s try to find a good correlation between two variables to potentially build a good predictive model. We’ll use the function cor() to do this.\n\n# Find the correlation between the package and the price\ncor(baked_pumpkins$package, baked_pumpkins$price)\n\n[1] 0.6061713\n\n\nQuestion 6: Calculate the correlation between pumpkin price and two other variables in the data set\n\n#Correlation between price and other vars.\ncor(baked_pumpkins$city_name, baked_pumpkins$price) #0.324\n\n[1] 0.3236397\n\ncor(baked_pumpkins$variety, baked_pumpkins$price) #-0.863\n\n[1] -0.863479\n\ncor(baked_pumpkins$month, baked_pumpkins$price) #-0.149\n\n[1] -0.1487829\n\n\nQuestion 7: Which of these three variables is most highly correlated with price? Why might this be?\nOut of the three variables, city_name is most highly correlated with price at -0.86. It appears that pumpkin price varies by city.\nNow let’s visualize a correlation matrix of all the columns using the corrplot package.\n\n# Load the corrplot package\nlibrary(corrplot)\n\n# Obtain correlation matrix\ncorr_mat &lt;- cor(baked_pumpkins %&gt;% \n                  # Drop columns that are not really informative\n                  select(-c(low_price, high_price)))\n\n# Make a correlation plot between the variables\ncorrplot(corr_mat, method = \"shade\", shade.col = NA, tl.col = \"black\", tl.srt = 45, addCoef.col = \"black\", cl.pos = \"n\", order = \"original\")\n\n\n\n\n\n\n\nNow that we have build a recipe, and actually confirmed that the data will be pre-processed appropriately, let’s now build a regression model to answer the question: What price can I expect of a given pumpkin package?\n\n\n\nAs you may have already figured out, the column price is the outcome variable while the package column is the predictor variable.\nTo do this, we’ll first split the data. Data splitting is a key part of the machine learning process. For now we’ll do a 80/20 split, where 80% of the data goes into training and 20% into the test set. Then we’ll define a recipe that will encode the predictor column into a set of integers, then build a model specification. We won’t prep and bake our recipe since we already know it will preprocess the data as expected.\n\n#random number generator\nset.seed(123)\n# Split the data into training and test sets\npumpkins_split &lt;- baked_pumpkins %&gt;%  #new_pumpkins should be baked_pumpkins \n  initial_split(prop = 0.8)\n\n\n# Extract training and test data\npumpkins_train &lt;- training(pumpkins_split)\npumpkins_test &lt;- testing(pumpkins_split)\n\n\n# Create a recipe for preprocessing the data\nlm_pumpkins_recipe &lt;- recipe(price ~ package, data = pumpkins_train) %&gt;% \n  step_integer(all_predictors(), zero_based = TRUE)\n\n\n# Create a linear model specification\nlm_spec &lt;- linear_reg() %&gt;% \n  set_engine(\"lm\") %&gt;% \n  set_mode(\"regression\")\n\nNow that we have a recipe and a model specification, we need to find a way of bundling them together into an object that will first preprocess the data (prep+bake behind the scenes), fit the model on the preprocessed data and also allow for potential post-processing activities.\nSo let’s bundle everything up into a workflow. A workflow is a container object that aggregates information required to fit and predict from a model.\n\n# Hold modeling components in a workflow\nlm_wf &lt;- workflow() %&gt;% \n  add_recipe(lm_pumpkins_recipe) %&gt;% \n  add_model(lm_spec)\n\n# Print out the workflow\nlm_wf\n\n══ Workflow ════════════════════════════════════════════════════════════════════\nPreprocessor: Recipe\nModel: linear_reg()\n\n── Preprocessor ────────────────────────────────────────────────────────────────\n1 Recipe Step\n\n• step_integer()\n\n── Model ───────────────────────────────────────────────────────────────────────\nLinear Regression Model Specification (regression)\n\nComputational engine: lm \n\n\nA workflow can be fit/trained in much the same way a model can.\n\n# Train the model\nlm_wf_fit &lt;- lm_wf %&gt;% \n  fit(data = pumpkins_train)\n\n# Print the model coefficients learned \nlm_wf_fit\n\n══ Workflow [trained] ══════════════════════════════════════════════════════════\nPreprocessor: Recipe\nModel: linear_reg()\n\n── Preprocessor ────────────────────────────────────────────────────────────────\n1 Recipe Step\n\n• step_integer()\n\n── Model ───────────────────────────────────────────────────────────────────────\n\nCall:\nstats::lm(formula = ..y ~ ., data = data)\n\nCoefficients:\n(Intercept)      package  \n      20.14         4.76  \n\n\nFrom the model output, we can see the coefficients learned during training. They represent the coefficients of the line of best fit that gives us the lowest overall error between the actual and predicted variable.\nEvaluate model performance using the test set. It’s time to see how the model performed! How do we do this?\nNow that we’ve trained the model, we can use it to make predictions for the test_set using parsnip::predict(). Then we can compare these predictions to the actual label values to evaluate how well (or not!) the model is working. - training model: data youre using to test if the model works - testing model: actually employing the model\nLet’s start with making predictions for the test set then bind the columns to the test set.\n\n# Make predictions for the test set\npredictions &lt;- lm_wf_fit %&gt;% \n  predict(new_data = pumpkins_test)\n\n# Bind predictions to the test set\nlm_results &lt;- pumpkins_test %&gt;% \n  select(c(package, price)) %&gt;% \n  bind_cols(predictions)\n\n\n# Print the first ten rows of the tibble\nlm_results %&gt;% \n  slice_head(n = 10)\n\n# A tibble: 10 × 3\n   package price .pred\n     &lt;int&gt; &lt;dbl&gt; &lt;dbl&gt;\n 1       0  13.6  20.1\n 2       0  16.4  20.1\n 3       0  16.4  20.1\n 4       0  13.6  20.1\n 5       0  15.5  20.1\n 6       0  16.4  20.1\n 7       2  34    29.7\n 8       2  30    29.7\n 9       2  30    29.7\n10       2  34    29.7\n\n\nOK, you have just trained a model and used it to make predictions! Let’s evaluate the model’s performance.\nIn tidymodels, we do this using yardstick::metrics(). For linear regression, let’s focus on the following metrics:\nRoot Mean Square Error (RMSE): The square root of the MSE. This yields an absolute metric in the same unit as the label (in this case, the price of a pumpkin). The smaller the value, the better the model (in a simplistic sense, it represents the average price by which the predictions are wrong)\nCoefficient of Determination (usually known as R-squared or R2): A relative metric in which the higher the value, the better the fit of the model. In essence, this metric represents how much of the variance between predicted and actual label values the model is able to explain.\n\n# Evaluate performance of linear regression\nmetrics(data = lm_results,\n        truth = price,\n        estimate = .pred)\n\n# A tibble: 3 × 3\n  .metric .estimator .estimate\n  &lt;chr&gt;   &lt;chr&gt;          &lt;dbl&gt;\n1 rmse    standard       7.23 \n2 rsq     standard       0.495\n3 mae     standard       5.94 \n\n\nOK, so that is the model performance. Let’s see if we can get a better indication by visualizing a scatter plot of the package and price then use the predictions made to overlay a line of best fit.\nThis means we’ll have to prep and bake the test set in order to encode the package column then bind this to the predictions made by our model.\n\n# Encode package column\npackage_encode &lt;- lm_pumpkins_recipe %&gt;% \n  prep() %&gt;% \n  bake(new_data = pumpkins_test) %&gt;% \n  select(package)\n\n\n# Bind encoded package column to the results\n plot_results &lt;- lm_results %&gt;%\n bind_cols(package_encode %&gt;%\n               rename(package_integer = package)) %&gt;%\n  relocate(package_integer, .after = package)\n\n# Print new results data frame\nplot_results %&gt;%\n  slice_head(n = 5)\n\n# A tibble: 5 × 4\n  package package_integer price .pred\n    &lt;int&gt;           &lt;int&gt; &lt;dbl&gt; &lt;dbl&gt;\n1       0               0  13.6  20.1\n2       0               0  16.4  20.1\n3       0               0  16.4  20.1\n4       0               0  13.6  20.1\n5       0               0  15.5  20.1\n\n# Make a scatter plot\nplot_results %&gt;%\n  ggplot(mapping = aes(x = package_integer, y = price)) +\n   geom_point(size = 1.6) +\n   # Overlay a line of best fit\n   geom_line(aes(y = .pred), color = \"orange\", linewidth = 1.2) +\n   xlab(\"package\") +\n  ggtitle(\"Pumpkin Sales Throughout the Year\") \n\n\n\n\nHmm. The model does not do good job of generalizing the relationship between a package and its corresponding price.\nQuestion 8: What issues do you see with fitting a linear regression to this data?\nFitting this data with a linear regression does not produce a line of best fit and the data is clearly not a linear relationship. It can also be concluded that the residual sum of squared errors are quite big. Finally, the line seems to only go through about two points.\nCongratulations, you just created a model that can help predict the price of a few varieties of pumpkins. But you can probably create a better model! To be continued next week…"
  },
  {
    "objectID": "posts/Pumpkin/Lab1-ML.html#examine-the-data",
    "href": "posts/Pumpkin/Lab1-ML.html#examine-the-data",
    "title": "Pumpkin Market",
    "section": "",
    "text": "#examine data\nglimpse(dat)\n\nRows: 1,757\nColumns: 27\n$ ...1              &lt;dbl&gt; 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 1…\n$ `City Name`       &lt;chr&gt; \"BALTIMORE\", \"BALTIMORE\", \"BALTIMORE\", \"BALTIMORE\", …\n$ Type              &lt;chr&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, …\n$ Package           &lt;chr&gt; \"24 inch bins\", \"24 inch bins\", \"24 inch bins\", \"24 …\n$ Variety           &lt;chr&gt; NA, NA, \"HOWDEN TYPE\", \"HOWDEN TYPE\", \"HOWDEN TYPE\",…\n$ `Sub Variety`     &lt;chr&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, …\n$ Grade             &lt;lgl&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, …\n$ Date              &lt;chr&gt; \"4/29/17\", \"5/6/17\", \"9/24/16\", \"9/24/16\", \"11/5/16\"…\n$ `Low Price`       &lt;dbl&gt; 270, 270, 160, 160, 90, 90, 160, 160, 160, 160, 160,…\n$ `High Price`      &lt;dbl&gt; 280, 280, 160, 160, 100, 100, 170, 160, 170, 160, 17…\n$ `Mostly Low`      &lt;dbl&gt; 270, 270, 160, 160, 90, 90, 160, 160, 160, 160, 160,…\n$ `Mostly High`     &lt;dbl&gt; 280, 280, 160, 160, 100, 100, 170, 160, 170, 160, 17…\n$ Origin            &lt;chr&gt; \"MARYLAND\", \"MARYLAND\", \"DELAWARE\", \"VIRGINIA\", \"MAR…\n$ `Origin District` &lt;chr&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, …\n$ `Item Size`       &lt;chr&gt; \"lge\", \"lge\", \"med\", \"med\", \"lge\", \"lge\", \"med\", \"lg…\n$ Color             &lt;chr&gt; NA, NA, \"ORANGE\", \"ORANGE\", \"ORANGE\", \"ORANGE\", \"ORA…\n$ Environment       &lt;lgl&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, …\n$ `Unit of Sale`    &lt;chr&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, …\n$ Quality           &lt;lgl&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, …\n$ Condition         &lt;lgl&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, …\n$ Appearance        &lt;lgl&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, …\n$ Storage           &lt;lgl&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, …\n$ Crop              &lt;lgl&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, …\n$ Repack            &lt;chr&gt; \"E\", \"E\", \"N\", \"N\", \"N\", \"N\", \"N\", \"N\", \"N\", \"N\", \"N…\n$ `Trans Mode`      &lt;lgl&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, …\n$ ...26             &lt;lgl&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, …\n$ ...27             &lt;chr&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, …\n\n\n\n# Clean names to the snake_case convention\n\npumpkins &lt;- dat %&gt;% clean_names(case = \"snake\")\n\n# Return column names\n\npumpkins %&gt;% names()\n\n [1] \"x1\"              \"city_name\"       \"type\"            \"package\"        \n [5] \"variety\"         \"sub_variety\"     \"grade\"           \"date\"           \n [9] \"low_price\"       \"high_price\"      \"mostly_low\"      \"mostly_high\"    \n[13] \"origin\"          \"origin_district\" \"item_size\"       \"color\"          \n[17] \"environment\"     \"unit_of_sale\"    \"quality\"         \"condition\"      \n[21] \"appearance\"      \"storage\"         \"crop\"            \"repack\"         \n[25] \"trans_mode\"      \"x26\"             \"x27\""
  },
  {
    "objectID": "posts/Pumpkin/Lab1-ML.html#select-desired-columns",
    "href": "posts/Pumpkin/Lab1-ML.html#select-desired-columns",
    "title": "Pumpkin Market",
    "section": "",
    "text": "#df wrangling selecting for variety, city_name, package, low_price, high_price, and date variables\npumpkins &lt;- pumpkins %&gt;% select(variety, city_name, package, low_price, high_price, date)\n\n\n## Print data set\npumpkins %&gt;% slice_head(n = 5)\n\n# A tibble: 5 × 6\n  variety     city_name package      low_price high_price date   \n  &lt;chr&gt;       &lt;chr&gt;     &lt;chr&gt;            &lt;dbl&gt;      &lt;dbl&gt; &lt;chr&gt;  \n1 &lt;NA&gt;        BALTIMORE 24 inch bins       270        280 4/29/17\n2 &lt;NA&gt;        BALTIMORE 24 inch bins       270        280 5/6/17 \n3 HOWDEN TYPE BALTIMORE 24 inch bins       160        160 9/24/16\n4 HOWDEN TYPE BALTIMORE 24 inch bins       160        160 9/24/16\n5 HOWDEN TYPE BALTIMORE 24 inch bins        90        100 11/5/16\n\n\n\n## Load lubridate\n\nlibrary(lubridate)\n\n# Extract the month and day from the dates and add as new columns\npumpkins &lt;- pumpkins %&gt;%\n  mutate(date = mdy(date),  \n         day = yday(date),\n         month = month(date))\npumpkins %&gt;% \n  select(-day)\n\n# A tibble: 1,757 × 7\n   variety     city_name package      low_price high_price date       month\n   &lt;chr&gt;       &lt;chr&gt;     &lt;chr&gt;            &lt;dbl&gt;      &lt;dbl&gt; &lt;date&gt;     &lt;dbl&gt;\n 1 &lt;NA&gt;        BALTIMORE 24 inch bins       270        280 2017-04-29     4\n 2 &lt;NA&gt;        BALTIMORE 24 inch bins       270        280 2017-05-06     5\n 3 HOWDEN TYPE BALTIMORE 24 inch bins       160        160 2016-09-24     9\n 4 HOWDEN TYPE BALTIMORE 24 inch bins       160        160 2016-09-24     9\n 5 HOWDEN TYPE BALTIMORE 24 inch bins        90        100 2016-11-05    11\n 6 HOWDEN TYPE BALTIMORE 24 inch bins        90        100 2016-11-12    11\n 7 HOWDEN TYPE BALTIMORE 36 inch bins       160        170 2016-09-24     9\n 8 HOWDEN TYPE BALTIMORE 36 inch bins       160        160 2016-09-24     9\n 9 HOWDEN TYPE BALTIMORE 36 inch bins       160        170 2016-10-01    10\n10 HOWDEN TYPE BALTIMORE 36 inch bins       160        160 2016-10-01    10\n# ℹ 1,747 more rows\n\n## View the first 7 rows\n\npumpkins %&gt;% slice_head(n = 7)\n\n# A tibble: 7 × 8\n  variety     city_name package      low_price high_price date         day month\n  &lt;chr&gt;       &lt;chr&gt;     &lt;chr&gt;            &lt;dbl&gt;      &lt;dbl&gt; &lt;date&gt;     &lt;dbl&gt; &lt;dbl&gt;\n1 &lt;NA&gt;        BALTIMORE 24 inch bins       270        280 2017-04-29   119     4\n2 &lt;NA&gt;        BALTIMORE 24 inch bins       270        280 2017-05-06   126     5\n3 HOWDEN TYPE BALTIMORE 24 inch bins       160        160 2016-09-24   268     9\n4 HOWDEN TYPE BALTIMORE 24 inch bins       160        160 2016-09-24   268     9\n5 HOWDEN TYPE BALTIMORE 24 inch bins        90        100 2016-11-05   310    11\n6 HOWDEN TYPE BALTIMORE 24 inch bins        90        100 2016-11-12   317    11\n7 HOWDEN TYPE BALTIMORE 36 inch bins       160        170 2016-09-24   268     9\n\n\nThere are two column dealing with price, high and low. Let’s combine them into a single average price column.\n\n# Create a new column price\npumpkins &lt;- pumpkins %&gt;% \n  mutate(price = (low_price+ high_price)/2)\n\nLet’s take a look at pumpkins sales throughout the year.\nQuestion 1: Create a scatter plot using price on the y-axis and day on the x-axis.\n\n# Make a scatter plot of month and price\n\nggplot(data = pumpkins, aes(x = day, y = price)) +\n  geom_point() +\n  ggtitle(\"Pumpkin Sales Throughout the Year\")\n\n\n\n\nNow, before we go any further, let’s take another look at the data. Notice anything odd?\nFrom day 225 to 365 there appears to be a much larger range in pumpkin prices rather than any other time of year which can be explained by the holiday season and therefore there are more configurations of pumpkins that are sold at that time of year. For the rest of the year, the pumpkin price remains generally the same at around 225 to 275.\nThat’s right: pumpkins are sold in many different configurations. Some are sold in 1 1/9 bushel measures, and some in 1/2 bushel measures, some per pumpkin, some per pound, and some in big boxes with varying widths.\nLet’s verify this:\n\n# Verify the distinct observations in Package column\npumpkins %&gt;% \n  distinct(package)\n\n# A tibble: 15 × 1\n   package             \n   &lt;chr&gt;               \n 1 24 inch bins        \n 2 36 inch bins        \n 3 50 lb sacks         \n 4 1 1/9 bushel cartons\n 5 1/2 bushel cartons  \n 6 1 1/9 bushel crates \n 7 bushel cartons      \n 8 bins                \n 9 35 lb cartons       \n10 each                \n11 20 lb cartons       \n12 50 lb cartons       \n13 40 lb cartons       \n14 bushel baskets      \n15 22 lb cartons       \n\n\nPumpkins seem to be very hard to weigh consistently, so let’s filter them by selecting only pumpkins with the string bushel in the package column and put this in a new data frame “new_pumpkins”.\n\n## View the first few rows of the data\n\npumpkins %&gt;% slice_head(n = 5)\n\n# A tibble: 5 × 9\n  variety    city_name package low_price high_price date         day month price\n  &lt;chr&gt;      &lt;chr&gt;     &lt;chr&gt;       &lt;dbl&gt;      &lt;dbl&gt; &lt;date&gt;     &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;\n1 &lt;NA&gt;       BALTIMORE 24 inc…       270        280 2017-04-29   119     4   275\n2 &lt;NA&gt;       BALTIMORE 24 inc…       270        280 2017-05-06   126     5   275\n3 HOWDEN TY… BALTIMORE 24 inc…       160        160 2016-09-24   268     9   160\n4 HOWDEN TY… BALTIMORE 24 inc…       160        160 2016-09-24   268     9   160\n5 HOWDEN TY… BALTIMORE 24 inc…        90        100 2016-11-05   310    11    95\n\npumpkins %&gt;% distinct(package)\n\n# A tibble: 15 × 1\n   package             \n   &lt;chr&gt;               \n 1 24 inch bins        \n 2 36 inch bins        \n 3 50 lb sacks         \n 4 1 1/9 bushel cartons\n 5 1/2 bushel cartons  \n 6 1 1/9 bushel crates \n 7 bushel cartons      \n 8 bins                \n 9 35 lb cartons       \n10 each                \n11 20 lb cartons       \n12 50 lb cartons       \n13 40 lb cartons       \n14 bushel baskets      \n15 22 lb cartons       \n\n\nQuestion 2: Use a combination of dplyr::filter() and stringr::str_detect() to achieve what we want.\n\n# Retain only pumpkins with \"bushel\" in the package column\n#bushel &lt;- pumpkins %&gt;%\n  #select(package = \"bushel\")\n\nnew_pumpkins &lt;- pumpkins %&gt;% \n    filter(str_detect(package, \"bushel\"))\n\n\n# Get the dimensions of the new data\ndim(new_pumpkins)\n\n[1] 415   9\n\n# View a few rows of the new data\nnew_pumpkins %&gt;% \n  slice_head(n = 10)\n\n# A tibble: 10 × 9\n   variety  city_name package  low_price high_price date         day month price\n   &lt;chr&gt;    &lt;chr&gt;     &lt;chr&gt;        &lt;dbl&gt;      &lt;dbl&gt; &lt;date&gt;     &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;\n 1 PIE TYPE BALTIMORE 1 1/9 b…        15       15   2016-09-24   268     9  15  \n 2 PIE TYPE BALTIMORE 1 1/9 b…        18       18   2016-09-24   268     9  18  \n 3 PIE TYPE BALTIMORE 1 1/9 b…        18       18   2016-10-01   275    10  18  \n 4 PIE TYPE BALTIMORE 1 1/9 b…        17       17   2016-10-01   275    10  17  \n 5 PIE TYPE BALTIMORE 1 1/9 b…        15       15   2016-10-08   282    10  15  \n 6 PIE TYPE BALTIMORE 1 1/9 b…        18       18   2016-10-08   282    10  18  \n 7 PIE TYPE BALTIMORE 1 1/9 b…        17       17   2016-10-08   282    10  17  \n 8 PIE TYPE BALTIMORE 1 1/9 b…        17       18.5 2016-10-08   282    10  17.8\n 9 PIE TYPE BALTIMORE 1 1/9 b…        15       15   2016-10-15   289    10  15  \n10 PIE TYPE BALTIMORE 1 1/9 b…        17       17   2016-10-15   289    10  17  \n\n\nYou should see that we have narrowed down to 415 rows of data containing pumpkins measured in bushels.\nBut wait! There’s one more thing to do.\nDid you notice that the bushel amount varies per row? You need to normalize the pricing so that you show the pricing per bushel, not per 1 1/9 or 1/2 bushel. Time to do some math to standardize it.\nWe’ll use the function case_when() to mutate the Price column depending on some conditions. case_when() allows you to vectorize multiple if_else()statements.\n\n# Convert the price if the Package contains fractional bushel values\nnew_pumpkins &lt;- new_pumpkins %&gt;% \n  mutate(price = case_when(\n    str_detect(package, \"1 1/9\") ~ price/(1.1),\n    str_detect(package, \"1/2\") ~ price*2,\n    TRUE ~ price))\n\n# View the first few rows of the data\nnew_pumpkins %&gt;% \n  slice_head(n = 30)\n\n# A tibble: 30 × 9\n   variety  city_name package  low_price high_price date         day month price\n   &lt;chr&gt;    &lt;chr&gt;     &lt;chr&gt;        &lt;dbl&gt;      &lt;dbl&gt; &lt;date&gt;     &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;\n 1 PIE TYPE BALTIMORE 1 1/9 b…        15       15   2016-09-24   268     9  13.6\n 2 PIE TYPE BALTIMORE 1 1/9 b…        18       18   2016-09-24   268     9  16.4\n 3 PIE TYPE BALTIMORE 1 1/9 b…        18       18   2016-10-01   275    10  16.4\n 4 PIE TYPE BALTIMORE 1 1/9 b…        17       17   2016-10-01   275    10  15.5\n 5 PIE TYPE BALTIMORE 1 1/9 b…        15       15   2016-10-08   282    10  13.6\n 6 PIE TYPE BALTIMORE 1 1/9 b…        18       18   2016-10-08   282    10  16.4\n 7 PIE TYPE BALTIMORE 1 1/9 b…        17       17   2016-10-08   282    10  15.5\n 8 PIE TYPE BALTIMORE 1 1/9 b…        17       18.5 2016-10-08   282    10  16.1\n 9 PIE TYPE BALTIMORE 1 1/9 b…        15       15   2016-10-15   289    10  13.6\n10 PIE TYPE BALTIMORE 1 1/9 b…        17       17   2016-10-15   289    10  15.5\n# ℹ 20 more rows"
  },
  {
    "objectID": "posts/Pumpkin/Lab1-ML.html#data-visualization",
    "href": "posts/Pumpkin/Lab1-ML.html#data-visualization",
    "title": "Pumpkin Market",
    "section": "",
    "text": "# Set theme\ntheme_set(theme_light())\n\n# Make a scatter plot of day and price\nnew_pumpkins %&gt;% \n  ggplot(mapping = aes(x = day, y = price)) +\n  geom_point(size = 1.6) +\n  ggtitle(\"Pumpkin Sales Throughout the Year\")\n\n\n\n\nQuestion 3: Is this a useful plot? Does anything about it surprise you?\nThis is not a useful plot. It’s clearly evident that prices range broadly throughout the year after selecting for bushels, a better way to visualize this data for our viewers is to find the mean price for each month.\nHow do we make it more useful? To get charts to display useful data, you usually need to group the data somehow.\nQuestion 4: Group the pumpkins into groups based on the month column and then find the mean price for each month. Plot the results with a bar plot.\nHint: use dplyr::group_by() %&gt;% summarize()\n\n# Find the average price of pumpkins per month then plot a bar chart\npumpkins %&gt;%\n  group_by(month) %&gt;% \n  summarise(mean_price = mean(price)) %&gt;% \n  ggplot(aes(x = month, y = mean_price)) +\n  geom_col(fill = \"midnightblue\", alpha = 0.7) +\n  ylab(\"Pumpkin Price\") +\n  ggtitle(\"Mean Pumpkin Price for Each Month\")\n\n\n\n\n#Preprocessing data for modelling using recipes\nWhat if we wanted to predict the price of a pumpkin based on the city or package columns which are of type character? How could we find the correlation between, say, package and price?\nMachine learning models work best with numeric features rather than text values, so you generally need to convert categorical features into numeric representations.\nThis means that we have to find a way to reformat our predictors to make them easier for a model to use effectively, a process known as feature engineering.\nDifferent models have different preprocessing requirements. For instance, least squares requires encoding categorical variables such as month, variety and city_name. This simply involves translating a column with categorical values into one or more numeric columns that take the place of the original.\nNow let’s introduce another useful tidymodels package: recipes - which will help you preprocess data before training your mode. A recipe is an object that defines what steps should be applied to a data set in order to get it ready for modelling.\nNow, let’s create a recipe that prepares our data for modelling by substituting a unique integer for all the observations in the predictor columns:\n\n# Specify a recipe\npumpkins_recipe &lt;- recipe(price ~ ., data = new_pumpkins) %&gt;%  #the dot means adding all x variables together to yield price \n  step_integer(all_predictors(), zero_based = TRUE) #new data creates a specific recipe coverting new data into set of integers\n\n\n# Print out the recipe\npumpkins_recipe\n\n\n\n\n── Recipe ──────────────────────────────────────────────────────────────────────\n\n\n\n\n\n── Inputs \n\n\nNumber of variables by role\n\n\noutcome:   1\npredictor: 8\n\n\n\n\n\n── Operations \n\n\n• Integer encoding for: all_predictors()\n\n\nOK, we created our first recipe that specifies an outcome (price) and its corresponding predictors and that all the predictor columns should be encoded into a set of integers. Let’s quickly break it down:\nThe call to recipe() with a formula tells the recipe the roles of the variables using new_pumpkins data as the reference. For instance the price column has been assigned an outcome role while the rest of the columns have been assigned a predictor role.\nstep_integer(all_predictors(), zero_based = TRUE) specifies that all the predictors should be converted into a set of integers with the numbering starting at 0.\nHow can we confirm that the recipe is doing what we intend? Once your recipe is defined, you can estimate the parameters required to preprocess the data, and then extract the processed data. You don’t typically need to do this when you use tidymodels (we’ll see the normal convention in just a minute with workflows) but its a good sanity check for confirming that recipes are doing what you expect.\nFor that, you’ll need two more verbs: prep() and bake()\nprep(): estimates the required parameters from a training set that can be later applied to other data sets.\nbake(): takes a prepped recipe and applies the operations to any data set.\nNow let’s prep and bake our recipes to confirm that under the hood, the predictor columns will be first encoded before a model is fit.\n\n# Prep the recipe\npumpkins_prep &lt;- prep(pumpkins_recipe)\n\n# Bake the recipe to extract a preprocessed new_pumpkins data\nbaked_pumpkins &lt;- bake(pumpkins_prep, new_data = NULL)\n\n# Print out the baked data set\nbaked_pumpkins %&gt;% \n  slice_head(n = 10)\n\n# A tibble: 10 × 9\n   variety city_name package low_price high_price  date   day month price\n     &lt;int&gt;     &lt;int&gt;   &lt;int&gt;     &lt;int&gt;      &lt;int&gt; &lt;int&gt; &lt;int&gt; &lt;int&gt; &lt;dbl&gt;\n 1       3         1       0         5          3     0     5     1  13.6\n 2       3         1       0        10          7     0     5     1  16.4\n 3       3         1       0        10          7     6    11     2  16.4\n 4       3         1       0         9          6     6    11     2  15.5\n 5       3         1       0         5          3     7    12     2  13.6\n 6       3         1       0        10          7     7    12     2  16.4\n 7       3         1       0         9          6     7    12     2  15.5\n 8       3         1       0         9          8     7    12     2  16.1\n 9       3         1       0         5          3     8    13     2  13.6\n10       3         1       0         9          6     8    13     2  15.5\n\n\nThe processed data baked_pumpkins has all its predictors encoded confirming that indeed the preprocessing steps defined as our recipe will work as expected. This makes it harder for you to read but more intelligible for tidymodels. Take a look at how the observations have been mapped to numbers.\nQuestion 5: From looking at the baked_pumpkins tibble, how many total cities are represented in the data set?\nThere are 10 cities represented in this data set.\nbaked_pumpkins is a data frame that we can perform computations on. For instance, let’s try to find a good correlation between two variables to potentially build a good predictive model. We’ll use the function cor() to do this.\n\n# Find the correlation between the package and the price\ncor(baked_pumpkins$package, baked_pumpkins$price)\n\n[1] 0.6061713\n\n\nQuestion 6: Calculate the correlation between pumpkin price and two other variables in the data set\n\n#Correlation between price and other vars.\ncor(baked_pumpkins$city_name, baked_pumpkins$price) #0.324\n\n[1] 0.3236397\n\ncor(baked_pumpkins$variety, baked_pumpkins$price) #-0.863\n\n[1] -0.863479\n\ncor(baked_pumpkins$month, baked_pumpkins$price) #-0.149\n\n[1] -0.1487829\n\n\nQuestion 7: Which of these three variables is most highly correlated with price? Why might this be?\nOut of the three variables, city_name is most highly correlated with price at -0.86. It appears that pumpkin price varies by city.\nNow let’s visualize a correlation matrix of all the columns using the corrplot package.\n\n# Load the corrplot package\nlibrary(corrplot)\n\n# Obtain correlation matrix\ncorr_mat &lt;- cor(baked_pumpkins %&gt;% \n                  # Drop columns that are not really informative\n                  select(-c(low_price, high_price)))\n\n# Make a correlation plot between the variables\ncorrplot(corr_mat, method = \"shade\", shade.col = NA, tl.col = \"black\", tl.srt = 45, addCoef.col = \"black\", cl.pos = \"n\", order = \"original\")"
  },
  {
    "objectID": "posts/Pumpkin/Lab1-ML.html#build-a-linear-regression-model",
    "href": "posts/Pumpkin/Lab1-ML.html#build-a-linear-regression-model",
    "title": "Pumpkin Market",
    "section": "",
    "text": "Now that we have build a recipe, and actually confirmed that the data will be pre-processed appropriately, let’s now build a regression model to answer the question: What price can I expect of a given pumpkin package?"
  },
  {
    "objectID": "posts/Pumpkin/Lab1-ML.html#train-the-model-using-the-training-set",
    "href": "posts/Pumpkin/Lab1-ML.html#train-the-model-using-the-training-set",
    "title": "Pumpkin Market",
    "section": "",
    "text": "As you may have already figured out, the column price is the outcome variable while the package column is the predictor variable.\nTo do this, we’ll first split the data. Data splitting is a key part of the machine learning process. For now we’ll do a 80/20 split, where 80% of the data goes into training and 20% into the test set. Then we’ll define a recipe that will encode the predictor column into a set of integers, then build a model specification. We won’t prep and bake our recipe since we already know it will preprocess the data as expected.\n\n#random number generator\nset.seed(123)\n# Split the data into training and test sets\npumpkins_split &lt;- baked_pumpkins %&gt;%  #new_pumpkins should be baked_pumpkins \n  initial_split(prop = 0.8)\n\n\n# Extract training and test data\npumpkins_train &lt;- training(pumpkins_split)\npumpkins_test &lt;- testing(pumpkins_split)\n\n\n# Create a recipe for preprocessing the data\nlm_pumpkins_recipe &lt;- recipe(price ~ package, data = pumpkins_train) %&gt;% \n  step_integer(all_predictors(), zero_based = TRUE)\n\n\n# Create a linear model specification\nlm_spec &lt;- linear_reg() %&gt;% \n  set_engine(\"lm\") %&gt;% \n  set_mode(\"regression\")\n\nNow that we have a recipe and a model specification, we need to find a way of bundling them together into an object that will first preprocess the data (prep+bake behind the scenes), fit the model on the preprocessed data and also allow for potential post-processing activities.\nSo let’s bundle everything up into a workflow. A workflow is a container object that aggregates information required to fit and predict from a model.\n\n# Hold modeling components in a workflow\nlm_wf &lt;- workflow() %&gt;% \n  add_recipe(lm_pumpkins_recipe) %&gt;% \n  add_model(lm_spec)\n\n# Print out the workflow\nlm_wf\n\n══ Workflow ════════════════════════════════════════════════════════════════════\nPreprocessor: Recipe\nModel: linear_reg()\n\n── Preprocessor ────────────────────────────────────────────────────────────────\n1 Recipe Step\n\n• step_integer()\n\n── Model ───────────────────────────────────────────────────────────────────────\nLinear Regression Model Specification (regression)\n\nComputational engine: lm \n\n\nA workflow can be fit/trained in much the same way a model can.\n\n# Train the model\nlm_wf_fit &lt;- lm_wf %&gt;% \n  fit(data = pumpkins_train)\n\n# Print the model coefficients learned \nlm_wf_fit\n\n══ Workflow [trained] ══════════════════════════════════════════════════════════\nPreprocessor: Recipe\nModel: linear_reg()\n\n── Preprocessor ────────────────────────────────────────────────────────────────\n1 Recipe Step\n\n• step_integer()\n\n── Model ───────────────────────────────────────────────────────────────────────\n\nCall:\nstats::lm(formula = ..y ~ ., data = data)\n\nCoefficients:\n(Intercept)      package  \n      20.14         4.76  \n\n\nFrom the model output, we can see the coefficients learned during training. They represent the coefficients of the line of best fit that gives us the lowest overall error between the actual and predicted variable.\nEvaluate model performance using the test set. It’s time to see how the model performed! How do we do this?\nNow that we’ve trained the model, we can use it to make predictions for the test_set using parsnip::predict(). Then we can compare these predictions to the actual label values to evaluate how well (or not!) the model is working. - training model: data youre using to test if the model works - testing model: actually employing the model\nLet’s start with making predictions for the test set then bind the columns to the test set.\n\n# Make predictions for the test set\npredictions &lt;- lm_wf_fit %&gt;% \n  predict(new_data = pumpkins_test)\n\n# Bind predictions to the test set\nlm_results &lt;- pumpkins_test %&gt;% \n  select(c(package, price)) %&gt;% \n  bind_cols(predictions)\n\n\n# Print the first ten rows of the tibble\nlm_results %&gt;% \n  slice_head(n = 10)\n\n# A tibble: 10 × 3\n   package price .pred\n     &lt;int&gt; &lt;dbl&gt; &lt;dbl&gt;\n 1       0  13.6  20.1\n 2       0  16.4  20.1\n 3       0  16.4  20.1\n 4       0  13.6  20.1\n 5       0  15.5  20.1\n 6       0  16.4  20.1\n 7       2  34    29.7\n 8       2  30    29.7\n 9       2  30    29.7\n10       2  34    29.7\n\n\nOK, you have just trained a model and used it to make predictions! Let’s evaluate the model’s performance.\nIn tidymodels, we do this using yardstick::metrics(). For linear regression, let’s focus on the following metrics:\nRoot Mean Square Error (RMSE): The square root of the MSE. This yields an absolute metric in the same unit as the label (in this case, the price of a pumpkin). The smaller the value, the better the model (in a simplistic sense, it represents the average price by which the predictions are wrong)\nCoefficient of Determination (usually known as R-squared or R2): A relative metric in which the higher the value, the better the fit of the model. In essence, this metric represents how much of the variance between predicted and actual label values the model is able to explain.\n\n# Evaluate performance of linear regression\nmetrics(data = lm_results,\n        truth = price,\n        estimate = .pred)\n\n# A tibble: 3 × 3\n  .metric .estimator .estimate\n  &lt;chr&gt;   &lt;chr&gt;          &lt;dbl&gt;\n1 rmse    standard       7.23 \n2 rsq     standard       0.495\n3 mae     standard       5.94 \n\n\nOK, so that is the model performance. Let’s see if we can get a better indication by visualizing a scatter plot of the package and price then use the predictions made to overlay a line of best fit.\nThis means we’ll have to prep and bake the test set in order to encode the package column then bind this to the predictions made by our model.\n\n# Encode package column\npackage_encode &lt;- lm_pumpkins_recipe %&gt;% \n  prep() %&gt;% \n  bake(new_data = pumpkins_test) %&gt;% \n  select(package)\n\n\n# Bind encoded package column to the results\n plot_results &lt;- lm_results %&gt;%\n bind_cols(package_encode %&gt;%\n               rename(package_integer = package)) %&gt;%\n  relocate(package_integer, .after = package)\n\n# Print new results data frame\nplot_results %&gt;%\n  slice_head(n = 5)\n\n# A tibble: 5 × 4\n  package package_integer price .pred\n    &lt;int&gt;           &lt;int&gt; &lt;dbl&gt; &lt;dbl&gt;\n1       0               0  13.6  20.1\n2       0               0  16.4  20.1\n3       0               0  16.4  20.1\n4       0               0  13.6  20.1\n5       0               0  15.5  20.1\n\n# Make a scatter plot\nplot_results %&gt;%\n  ggplot(mapping = aes(x = package_integer, y = price)) +\n   geom_point(size = 1.6) +\n   # Overlay a line of best fit\n   geom_line(aes(y = .pred), color = \"orange\", linewidth = 1.2) +\n   xlab(\"package\") +\n  ggtitle(\"Pumpkin Sales Throughout the Year\") \n\n\n\n\nHmm. The model does not do good job of generalizing the relationship between a package and its corresponding price.\nQuestion 8: What issues do you see with fitting a linear regression to this data?\nFitting this data with a linear regression does not produce a line of best fit and the data is clearly not a linear relationship. It can also be concluded that the residual sum of squared errors are quite big. Finally, the line seems to only go through about two points.\nCongratulations, you just created a model that can help predict the price of a few varieties of pumpkins. But you can probably create a better model! To be continued next week…"
  }
]